digraph { 
"seed(1)" -> "seed_torch[0]" [label = "_argToVar"]
"random(1)$0" -> "random(1)" [label = "seed"]
"random(1)$0" -> "seed(1)" [label = "seed"]
"os(1)$0" -> "os(1)" [label = "str"]
"os(1)$0" -> "seed(1)" [label = "str"]
"np(1)$0" -> "np(1)" [label = "seed"]
"np(1)$0" -> "seed(1)" [label = "seed"]
"torch(1)$0" -> "torch(1)" [label = "manual_seed"]
"torch(1)$0" -> "seed(1)" [label = "manual_seed"]
"torch(1)$1" -> "torch(1)$0" [label = "manual_seed"]
"torch(1)$1" -> "seed(1)" [label = "manual_seed"]
"embed_size(0)$0" -> "300(0)" [label = "eq"]
"max_features(0)$0" -> "120000(0)" [label = "eq"]
"maxlen(0)$0" -> "72(0)" [label = "eq"]
"batch_size(0)$0" -> "1536(0)" [label = "eq"]
"train_epochs(0)$0" -> "8(0)" [label = "eq"]
"SEED(0)$0" -> "1029(0)" [label = "eq"]
"puncts(0)$0" -> "[<_ast.Str object at 0x10affc6d0>, <_ast.Str object at 0x10affc710>, <_ast.Str object at 0x10affc750>, <_ast.Str object at 0x10affc790>, <_ast.Str object at 0x10affc7d0>, <_ast.Str object at 0x10affc850>, <_ast.Str object at 0x10affc810>, <_ast.Str object at 0x10affc190>, <_ast.Str object at 0x10affc250>, <_ast.Str object at 0x10affcb50>, <_ast.Str object at 0x10affc050>, <_ast.Str object at 0x10affcbd0>, <_ast.Str object at 0x10affcb90>, <_ast.Str object at 0x10affc9d0>, <_ast.Str object at 0x10affca50>, <_ast.Str object at 0x10affccd0>, <_ast.Str object at 0x10affcc10>, <_ast.Str object at 0x10affca10>, <_ast.Str object at 0x10affced0>, <_ast.Str object at 0x10affce90>, <_ast.Str object at 0x10affc410>, <_ast.Str object at 0x10affcf90>, <_ast.Str object at 0x10affcd10>, <_ast.Str object at 0x10affcad0>, <_ast.Str object at 0x10affcfd0>, <_ast.Str object at 0x10affc990>, <_ast.Str object at 0x10affcd50>, <_ast.Str object at 0x10affc150>, <_ast.Str object at 0x10affcf10>, <_ast.Str object at 0x10affc890>, <_ast.Str object at 0x10affcc90>, <_ast.Str object at 0x10affc0d0>, <_ast.Str object at 0x10affc8d0>, <_ast.Str object at 0x10affcb10>, <_ast.Str object at 0x10affc3d0>, <_ast.Str object at 0x10affc910>, <_ast.Str object at 0x10affce10>, <_ast.Str object at 0x10affce50>, <_ast.Str object at 0x10affca90>, <_ast.Str object at 0x10affc210>, <_ast.Str object at 0x10affc350>, <_ast.Str object at 0x10affcc50>, <_ast.Str object at 0x10affc090>, <_ast.Str object at 0x10affc290>, <_ast.Str object at 0x10affcf50>, <_ast.Str object at 0x10affcd90>, <_ast.Str object at 0x10affcdd0>, <_ast.Str object at 0x10affc950>, <_ast.Str object at 0x10affc1d0>, <_ast.Str object at 0x10afeb050>, <_ast.Str object at 0x10afeb090>, <_ast.Str object at 0x10afeb0d0>, <_ast.Str object at 0x10afeb110>, <_ast.Str object at 0x10afeb150>, <_ast.Str object at 0x10afeb190>, <_ast.Str object at 0x10afeb1d0>, <_ast.Str object at 0x10afeb210>, <_ast.Str object at 0x10afeb250>, <_ast.Str object at 0x10afeb290>, <_ast.Str object at 0x10afeb310>, <_ast.Str object at 0x10afeb2d0>, <_ast.Str object at 0x10afeb350>, <_ast.Str object at 0x10afeb390>, <_ast.Str object at 0x10afeb6d0>, <_ast.Str object at 0x10afeb3d0>, <_ast.Str object at 0x10afeb450>, <_ast.Str object at 0x10afeb550>, <_ast.Str object at 0x10afeb790>, <_ast.Str object at 0x10afeb850>, <_ast.Str object at 0x10afeb650>, <_ast.Str object at 0x10afeb690>, <_ast.Str object at 0x10afeb410>, <_ast.Str object at 0x10afeb750>, <_ast.Str object at 0x10afeb890>, <_ast.Str object at 0x10afeb590>, <_ast.Str object at 0x10afeb9d0>, <_ast.Str object at 0x10afeb7d0>, <_ast.Str object at 0x10afeb810>, <_ast.Str object at 0x10afeba50>, <_ast.Str object at 0x10afeb990>, <_ast.Str object at 0x10afeb710>, <_ast.Str object at 0x10afebb50>, <_ast.Str object at 0x10afebd90>, <_ast.Str object at 0x10afebc50>, <_ast.Str object at 0x10afebdd0>, <_ast.Str object at 0x10afebd10>, <_ast.Str object at 0x10afebb90>, <_ast.Str object at 0x10afebd50>, <_ast.Str object at 0x10afebcd0>, <_ast.Str object at 0x10afebf50>, <_ast.Str object at 0x10afeb610>, <_ast.Str object at 0x10afebfd0>, <_ast.Str object at 0x10afeba90>, <_ast.Str object at 0x10afebf10>, <_ast.Str object at 0x10afebe50>, <_ast.Str object at 0x10afebc10>, <_ast.Str object at 0x10afebbd0>, <_ast.Str object at 0x10afebe90>, <_ast.Str object at 0x10afeba10>, <_ast.Str object at 0x10afebf90>, <_ast.Str object at 0x10afebb10>, <_ast.Str object at 0x10afebed0>, <_ast.Str object at 0x10afeb910>, <_ast.Str object at 0x10afeb510>, <_ast.Str object at 0x10afebc90>, <_ast.Str object at 0x10afebad0>, <_ast.Str object at 0x10afeb950>, <_ast.Str object at 0x10afeb8d0>, <_ast.Str object at 0x10afeb4d0>, <_ast.Str object at 0x10afeb490>, <_ast.Str object at 0x10afe0090>, <_ast.Str object at 0x10afe0110>, <_ast.Str object at 0x10afe0190>, <_ast.Str object at 0x10afe0390>, <_ast.Str object at 0x10afe0210>, <_ast.Str object at 0x10afe0290>, <_ast.Str object at 0x10afe0510>, <_ast.Str object at 0x10afe0710>, <_ast.Str object at 0x10afe03d0>, <_ast.Str object at 0x10afe0350>, <_ast.Str object at 0x10afe0750>, <_ast.Str object at 0x10afe0790>, <_ast.Str object at 0x10afe07d0>, <_ast.Str object at 0x10afe0810>, <_ast.Str object at 0x10afe0490>, <_ast.Str object at 0x10afe0850>, <_ast.Str object at 0x10afe0310>, <_ast.Str object at 0x10afe08d0>, <_ast.Str object at 0x10afe0610>, <_ast.Str object at 0x10afe0650>](0)" [label = "eq"]
"x(2)" -> "clean_text[0]" [label = "_argToVar"]
"x(2)$0" -> "x(2)" [label = "str"]
"punct(2)" -> "puncts(2)" [label = "Iter"]
"x(2)$1" -> "x(2)$0" [label = "replace"]
"x(2)$1" -> "punct(2)" [label = "replace"]
"x(2)$1" -> " (2)" [label = "replace"]
"x(2)$1" -> "punct(2)" [label = "replace"]
"x(2)$1" -> " (2)" [label = "replace"]
"x(3)" -> "clean_numbers[0]" [label = "_argToVar"]
"x(3)$0" -> "re(3)" [label = "sub"]
"x(3)$0" -> "[0-9]{5,}(3)" [label = "sub"]
"x(3)$0" -> "#####(3)" [label = "sub"]
"x(3)$0" -> "x(3)$0" [label = "sub"]
"x(3)$1" -> "re(3)" [label = "sub"]
"x(3)$1" -> "[0-9]{4}(3)" [label = "sub"]
"x(3)$1" -> "####(3)" [label = "sub"]
"x(3)$1" -> "x(3)$1" [label = "sub"]
"x(3)$2" -> "re(3)" [label = "sub"]
"x(3)$2" -> "[0-9]{3}(3)" [label = "sub"]
"x(3)$2" -> "###(3)" [label = "sub"]
"x(3)$2" -> "x(3)$2" [label = "sub"]
"x(3)$3" -> "re(3)" [label = "sub"]
"x(3)$3" -> "[0-9]{2}(3)" [label = "sub"]
"x(3)$3" -> "##(3)" [label = "sub"]
"x(3)$3" -> "x(3)$3" [label = "sub"]
"mispell_dict(0)$0" -> "aren't(0)" [label = "eq"]
"mispell_dict(0)$0" -> "can't(0)" [label = "eq"]
"mispell_dict(0)$0" -> "couldn't(0)" [label = "eq"]
"mispell_dict(0)$0" -> "didn't(0)" [label = "eq"]
"mispell_dict(0)$0" -> "doesn't(0)" [label = "eq"]
"mispell_dict(0)$0" -> "don't(0)" [label = "eq"]
"mispell_dict(0)$0" -> "hadn't(0)" [label = "eq"]
"mispell_dict(0)$0" -> "hasn't(0)" [label = "eq"]
"mispell_dict(0)$0" -> "haven't(0)" [label = "eq"]
"mispell_dict(0)$0" -> "he'd(0)" [label = "eq"]
"mispell_dict(0)$0" -> "he'll(0)" [label = "eq"]
"mispell_dict(0)$0" -> "he's(0)" [label = "eq"]
"mispell_dict(0)$0" -> "i'd(0)" [label = "eq"]
"mispell_dict(0)$0" -> "i'd(0)" [label = "eq"]
"mispell_dict(0)$0" -> "i'll(0)" [label = "eq"]
"mispell_dict(0)$0" -> "i'm(0)" [label = "eq"]
"mispell_dict(0)$0" -> "isn't(0)" [label = "eq"]
"mispell_dict(0)$0" -> "it's(0)" [label = "eq"]
"mispell_dict(0)$0" -> "it'll(0)" [label = "eq"]
"mispell_dict(0)$0" -> "i've(0)" [label = "eq"]
"mispell_dict(0)$0" -> "let's(0)" [label = "eq"]
"mispell_dict(0)$0" -> "mightn't(0)" [label = "eq"]
"mispell_dict(0)$0" -> "mustn't(0)" [label = "eq"]
"mispell_dict(0)$0" -> "shan't(0)" [label = "eq"]
"mispell_dict(0)$0" -> "she'd(0)" [label = "eq"]
"mispell_dict(0)$0" -> "she'll(0)" [label = "eq"]
"mispell_dict(0)$0" -> "she's(0)" [label = "eq"]
"mispell_dict(0)$0" -> "shouldn't(0)" [label = "eq"]
"mispell_dict(0)$0" -> "that's(0)" [label = "eq"]
"mispell_dict(0)$0" -> "there's(0)" [label = "eq"]
"mispell_dict(0)$0" -> "they'd(0)" [label = "eq"]
"mispell_dict(0)$0" -> "they'll(0)" [label = "eq"]
"mispell_dict(0)$0" -> "they're(0)" [label = "eq"]
"mispell_dict(0)$0" -> "they've(0)" [label = "eq"]
"mispell_dict(0)$0" -> "we'd(0)" [label = "eq"]
"mispell_dict(0)$0" -> "we're(0)" [label = "eq"]
"mispell_dict(0)$0" -> "weren't(0)" [label = "eq"]
"mispell_dict(0)$0" -> "we've(0)" [label = "eq"]
"mispell_dict(0)$0" -> "what'll(0)" [label = "eq"]
"mispell_dict(0)$0" -> "what're(0)" [label = "eq"]
"mispell_dict(0)$0" -> "what's(0)" [label = "eq"]
"mispell_dict(0)$0" -> "what've(0)" [label = "eq"]
"mispell_dict(0)$0" -> "where's(0)" [label = "eq"]
"mispell_dict(0)$0" -> "who'd(0)" [label = "eq"]
"mispell_dict(0)$0" -> "who'll(0)" [label = "eq"]
"mispell_dict(0)$0" -> "who're(0)" [label = "eq"]
"mispell_dict(0)$0" -> "who's(0)" [label = "eq"]
"mispell_dict(0)$0" -> "who've(0)" [label = "eq"]
"mispell_dict(0)$0" -> "won't(0)" [label = "eq"]
"mispell_dict(0)$0" -> "wouldn't(0)" [label = "eq"]
"mispell_dict(0)$0" -> "you'd(0)" [label = "eq"]
"mispell_dict(0)$0" -> "you'll(0)" [label = "eq"]
"mispell_dict(0)$0" -> "you're(0)" [label = "eq"]
"mispell_dict(0)$0" -> "you've(0)" [label = "eq"]
"mispell_dict(0)$0" -> "'re(0)" [label = "eq"]
"mispell_dict(0)$0" -> "wasn't(0)" [label = "eq"]
"mispell_dict(0)$0" -> "we'll(0)" [label = "eq"]
"mispell_dict(0)$0" -> "didn't(0)" [label = "eq"]
"mispell_dict(0)$0" -> "tryin'(0)" [label = "eq"]
"mispell_dict(0)$0" -> "are not(0)" [label = "eq"]
"mispell_dict(0)$0" -> "cannot(0)" [label = "eq"]
"mispell_dict(0)$0" -> "could not(0)" [label = "eq"]
"mispell_dict(0)$0" -> "did not(0)" [label = "eq"]
"mispell_dict(0)$0" -> "does not(0)" [label = "eq"]
"mispell_dict(0)$0" -> "do not(0)" [label = "eq"]
"mispell_dict(0)$0" -> "had not(0)" [label = "eq"]
"mispell_dict(0)$0" -> "has not(0)" [label = "eq"]
"mispell_dict(0)$0" -> "have not(0)" [label = "eq"]
"mispell_dict(0)$0" -> "he would(0)" [label = "eq"]
"mispell_dict(0)$0" -> "he will(0)" [label = "eq"]
"mispell_dict(0)$0" -> "he is(0)" [label = "eq"]
"mispell_dict(0)$0" -> "I would(0)" [label = "eq"]
"mispell_dict(0)$0" -> "I had(0)" [label = "eq"]
"mispell_dict(0)$0" -> "I will(0)" [label = "eq"]
"mispell_dict(0)$0" -> "I am(0)" [label = "eq"]
"mispell_dict(0)$0" -> "is not(0)" [label = "eq"]
"mispell_dict(0)$0" -> "it is(0)" [label = "eq"]
"mispell_dict(0)$0" -> "it will(0)" [label = "eq"]
"mispell_dict(0)$0" -> "I have(0)" [label = "eq"]
"mispell_dict(0)$0" -> "let us(0)" [label = "eq"]
"mispell_dict(0)$0" -> "might not(0)" [label = "eq"]
"mispell_dict(0)$0" -> "must not(0)" [label = "eq"]
"mispell_dict(0)$0" -> "shall not(0)" [label = "eq"]
"mispell_dict(0)$0" -> "she would(0)" [label = "eq"]
"mispell_dict(0)$0" -> "she will(0)" [label = "eq"]
"mispell_dict(0)$0" -> "she is(0)" [label = "eq"]
"mispell_dict(0)$0" -> "should not(0)" [label = "eq"]
"mispell_dict(0)$0" -> "that is(0)" [label = "eq"]
"mispell_dict(0)$0" -> "there is(0)" [label = "eq"]
"mispell_dict(0)$0" -> "they would(0)" [label = "eq"]
"mispell_dict(0)$0" -> "they will(0)" [label = "eq"]
"mispell_dict(0)$0" -> "they are(0)" [label = "eq"]
"mispell_dict(0)$0" -> "they have(0)" [label = "eq"]
"mispell_dict(0)$0" -> "we would(0)" [label = "eq"]
"mispell_dict(0)$0" -> "we are(0)" [label = "eq"]
"mispell_dict(0)$0" -> "were not(0)" [label = "eq"]
"mispell_dict(0)$0" -> "we have(0)" [label = "eq"]
"mispell_dict(0)$0" -> "what will(0)" [label = "eq"]
"mispell_dict(0)$0" -> "what are(0)" [label = "eq"]
"mispell_dict(0)$0" -> "what is(0)" [label = "eq"]
"mispell_dict(0)$0" -> "what have(0)" [label = "eq"]
"mispell_dict(0)$0" -> "where is(0)" [label = "eq"]
"mispell_dict(0)$0" -> "who would(0)" [label = "eq"]
"mispell_dict(0)$0" -> "who will(0)" [label = "eq"]
"mispell_dict(0)$0" -> "who are(0)" [label = "eq"]
"mispell_dict(0)$0" -> "who is(0)" [label = "eq"]
"mispell_dict(0)$0" -> "who have(0)" [label = "eq"]
"mispell_dict(0)$0" -> "will not(0)" [label = "eq"]
"mispell_dict(0)$0" -> "would not(0)" [label = "eq"]
"mispell_dict(0)$0" -> "you would(0)" [label = "eq"]
"mispell_dict(0)$0" -> "you will(0)" [label = "eq"]
"mispell_dict(0)$0" -> "you are(0)" [label = "eq"]
"mispell_dict(0)$0" -> "you have(0)" [label = "eq"]
"mispell_dict(0)$0" -> " are(0)" [label = "eq"]
"mispell_dict(0)$0" -> "was not(0)" [label = "eq"]
"mispell_dict(0)$0" -> " will(0)" [label = "eq"]
"mispell_dict(0)$0" -> "did not(0)" [label = "eq"]
"mispell_dict(0)$0" -> "trying(0)" [label = "eq"]
"mispell_dict(4)" -> "_get_mispell[0]" [label = "_argToVar"]
"mispell_re(4)$0" -> "re(4)" [label = "compile"]
"mispell_re(4)$0" -> "(%s)(4)" [label = "compile"]
"mispell_re(4)$0" -> "|(4)" [label = "compile"]
"mispell_re(4)$0" -> "mispell_dict(4)" [label = "compile"]
"mispellings(0)$0" -> "mispell_dict(0)$0" [label = "_get_mispell"]
"mispellings_re(0)$0" -> "mispell_dict(0)$0" [label = "_get_mispell"]
"text(5)" -> "replace_typical_misspell[0]" [label = "_argToVar"]
"match(6)" -> "replace[0]" [label = "_argToVar"]
"train_df(7)$0" -> "pd(7)" [label = "read_csv"]
"train_df(7)$0" -> "../input/train.csv(7)" [label = "read_csv"]
"test_df(7)$0" -> "pd(7)" [label = "read_csv"]
"test_df(7)$0" -> "../input/test.csv(7)" [label = "read_csv"]
"print[0]" -> "Train shape : (7)" [label = "print"]
"print[1]" -> "train_df(7)$0" [label = "print"]
"print[0]" -> "Test shape : (7)" [label = "print"]
"print[1]" -> "test_df(7)$0" [label = "print"]
"train_df(7)$1" -> "train_df(7)$0" [label = "progress_apply"]
"train_df(7)$1" -> "train_df(7)$0" [label = "progress_apply"]
"train_df(7)$1" -> "question_text(7)" [label = "progress_apply"]
"train_df(7)$1" -> "x(7)" [label = "progress_apply"]
"test_df(7)$1" -> "test_df(7)$0" [label = "progress_apply"]
"test_df(7)$1" -> "test_df(7)$0" [label = "progress_apply"]
"test_df(7)$1" -> "question_text(7)" [label = "progress_apply"]
"test_df(7)$1" -> "x(7)" [label = "progress_apply"]
"train_df(7)$2" -> "train_df(7)$1" [label = "progress_apply"]
"train_df(7)$2" -> "train_df(7)$1" [label = "progress_apply"]
"train_df(7)$2" -> "question_text(7)" [label = "progress_apply"]
"train_df(7)$2" -> "clean_text(7)" [label = "progress_apply"]
"train_df(7)$2" -> "x(7)" [label = "progress_apply"]
"test_df(7)$2" -> "test_df(7)$1" [label = "progress_apply"]
"test_df(7)$2" -> "test_df(7)$1" [label = "progress_apply"]
"test_df(7)$2" -> "question_text(7)" [label = "progress_apply"]
"test_df(7)$2" -> "clean_text(7)" [label = "progress_apply"]
"test_df(7)$2" -> "x(7)" [label = "progress_apply"]
"train_df(7)$3" -> "train_df(7)$2" [label = "progress_apply"]
"train_df(7)$3" -> "train_df(7)$2" [label = "progress_apply"]
"train_df(7)$3" -> "question_text(7)" [label = "progress_apply"]
"train_df(7)$3" -> "clean_numbers(7)" [label = "progress_apply"]
"train_df(7)$3" -> "x(7)" [label = "progress_apply"]
"test_df(7)$3" -> "test_df(7)$2" [label = "progress_apply"]
"test_df(7)$3" -> "test_df(7)$2" [label = "progress_apply"]
"test_df(7)$3" -> "question_text(7)" [label = "progress_apply"]
"test_df(7)$3" -> "clean_numbers(7)" [label = "progress_apply"]
"test_df(7)$3" -> "x(7)" [label = "progress_apply"]
"train_df(7)$4" -> "train_df(7)$3" [label = "progress_apply"]
"train_df(7)$4" -> "train_df(7)$3" [label = "progress_apply"]
"train_df(7)$4" -> "question_text(7)" [label = "progress_apply"]
"train_df(7)$4" -> "replace_typical_misspell(7)" [label = "progress_apply"]
"train_df(7)$4" -> "x(7)" [label = "progress_apply"]
"test_df(7)$4" -> "test_df(7)$3" [label = "progress_apply"]
"test_df(7)$4" -> "test_df(7)$3" [label = "progress_apply"]
"test_df(7)$4" -> "question_text(7)" [label = "progress_apply"]
"test_df(7)$4" -> "replace_typical_misspell(7)" [label = "progress_apply"]
"test_df(7)$4" -> "x(7)" [label = "progress_apply"]
"train_X(7)$0" -> "train_df(7)$4" [label = "eq"]
"train_X(7)$0" -> "question_text(7)" [label = "eq"]
"train_X(7)$0" -> "_##_(7)" [label = "eq"]
"test_X(7)$0" -> "test_df(7)$4" [label = "eq"]
"test_X(7)$0" -> "question_text(7)" [label = "eq"]
"test_X(7)$0" -> "_##_(7)" [label = "eq"]
"tokenizer(7)$0" -> "max_features(7)" [label = "Tokenizer"]
"tokenizer(7)$1" -> "tokenizer(7)$0" [label = "fit_on_texts"]
"tokenizer(7)$1" -> "list(7)" [label = "fit_on_texts"]
"tokenizer(7)$1" -> "train_X(7)$0" [label = "fit_on_texts"]
"train_X(7)$1" -> "tokenizer(7)$1" [label = "texts_to_sequences"]
"train_X(7)$1" -> "train_X(7)$1" [label = "texts_to_sequences"]
"test_X(7)$1" -> "tokenizer(7)$1" [label = "texts_to_sequences"]
"test_X(7)$1" -> "test_X(7)$1" [label = "texts_to_sequences"]
"train_X(7)$2" -> "train_X(7)$1" [label = "pad_sequences"]
"train_X(7)$2" -> "maxlen(7)" [label = "pad_sequences"]
"test_X(7)$2" -> "test_X(7)$1" [label = "pad_sequences"]
"test_X(7)$2" -> "maxlen(7)" [label = "pad_sequences"]
"train_y(7)$0" -> "train_df(7)$4" [label = "eq"]
"train_y(7)$0" -> "target(7)" [label = "eq"]
"np(7)$0" -> "np(7)" [label = "seed"]
"np(7)$0" -> "SEED(7)" [label = "seed"]
"trn_idx(7)$0" -> "np(7)$0" [label = "permutation"]
"trn_idx(7)$0" -> "len(7)" [label = "permutation"]
"trn_idx(7)$0" -> "train_X(7)$2" [label = "permutation"]
"train_X(7)$3" -> "train_X(7)$2" [label = "eq"]
"train_X(7)$3" -> "trn_idx(7)$0" [label = "eq"]
"train_y(7)$1" -> "train_y(7)$0" [label = "eq"]
"train_y(7)$1" -> "trn_idx(7)$0" [label = "eq"]
"word_index(8)" -> "load_glove[0]" [label = "_argToVar"]
"EMBEDDING_FILE(8)$0" -> "../input/embeddings/glove.840B.300d/glove.840B.300d.txt(8)" [label = "eq"]
"word(9)" -> "get_coefs[0]" [label = "_argToVar"]
"embeddings_index(8)$0" -> "get_coefs(8)" [label = "dict"]
"embeddings_index(8)$0" -> "o(8)" [label = "dict"]
"embeddings_index(8)$0" -> " (8)" [label = "dict"]
"embeddings_index(8)$0" -> "o(8)" [label = "dict"]
"embeddings_index(8)$0" -> "open(8)" [label = "dict"]
"embeddings_index(8)$0" -> "EMBEDDING_FILE(8)$0" [label = "dict"]
"all_embs(8)$0" -> "np(8)" [label = "stack"]
"all_embs(8)$0" -> "embeddings_index(8)$0" [label = "stack"]
"emb_mean(8)$0" -> "all_embs(8)$0" [label = "eq"]
"emb_std(8)$0" -> "all_embs(8)$0" [label = "eq"]
"emb_mean(8)$0" -> "all_embs(8)$0" [label = "eq"]
"emb_std(8)$0" -> "all_embs(8)$0" [label = "eq"]
"embed_size(8)$0" -> "all_embs(8)$0" [label = "eq"]
"embed_size(8)$0" -> "1(8)" [label = "eq"]
"nb_words(8)$0" -> "max_features(8)" [label = "min"]
"nb_words(8)$0" -> "len(8)" [label = "min"]
"nb_words(8)$0" -> "word_index(8)" [label = "min"]
"embedding_matrix(8)$0" -> "np(8)" [label = "normal"]
"embedding_matrix(8)$0" -> "emb_mean(8)$0" [label = "normal"]
"embedding_matrix(8)$0" -> "emb_std(8)$0" [label = "normal"]
"embedding_matrix(8)$0" -> "nb_words(8)$0" [label = "normal"]
"embedding_matrix(8)$0" -> "embed_size(8)$0" [label = "normal"]
"word(8)" -> "word_index(8)" [label = "Iter"]
"i(8)" -> "word_index(8)" [label = "Iter"]
"embedding_vector(8)$0" -> "embeddings_index(8)$0" [label = "get"]
"embedding_vector(8)$0" -> "word(8)" [label = "get"]
"embedding_matrix(8)$1" -> "embedding_matrix(8)$0" [label = "eq"]
"embedding_matrix(8)$1" -> "embedding_vector(8)$0" [label = "eq"]
"word_index(10)" -> "load_para[0]" [label = "_argToVar"]
"EMBEDDING_FILE(10)$0" -> "../input/embeddings/paragram_300_sl999/paragram_300_sl999.txt(10)" [label = "eq"]
"word(11)" -> "get_coefs[0]" [label = "_argToVar"]
"embeddings_index(10)$0" -> "get_coefs(10)" [label = "dict"]
"embeddings_index(10)$0" -> "o(10)" [label = "dict"]
"embeddings_index(10)$0" -> " (10)" [label = "dict"]
"embeddings_index(10)$0" -> "o(10)" [label = "dict"]
"embeddings_index(10)$0" -> "open(10)" [label = "dict"]
"embeddings_index(10)$0" -> "EMBEDDING_FILE(10)$0" [label = "dict"]
"embeddings_index(10)$0" -> "utf8(10)" [label = "dict"]
"embeddings_index(10)$0" -> "ignore(10)" [label = "dict"]
"embeddings_index(10)$0" -> "len(10)" [label = "dict"]
"embeddings_index(10)$0" -> "o(10)" [label = "dict"]
"embeddings_index(10)$0" -> "100(10)" [label = "dict"]
"all_embs(10)$0" -> "np(10)" [label = "stack"]
"all_embs(10)$0" -> "embeddings_index(10)$0" [label = "stack"]
"emb_mean(10)$0" -> "all_embs(10)$0" [label = "eq"]
"emb_std(10)$0" -> "all_embs(10)$0" [label = "eq"]
"emb_mean(10)$0" -> "all_embs(10)$0" [label = "eq"]
"emb_std(10)$0" -> "all_embs(10)$0" [label = "eq"]
"embed_size(10)$0" -> "all_embs(10)$0" [label = "eq"]
"embed_size(10)$0" -> "1(10)" [label = "eq"]
"nb_words(10)$0" -> "max_features(10)" [label = "min"]
"nb_words(10)$0" -> "len(10)" [label = "min"]
"nb_words(10)$0" -> "word_index(10)" [label = "min"]
"embedding_matrix(10)$0" -> "np(10)" [label = "normal"]
"embedding_matrix(10)$0" -> "emb_mean(10)$0" [label = "normal"]
"embedding_matrix(10)$0" -> "emb_std(10)$0" [label = "normal"]
"embedding_matrix(10)$0" -> "nb_words(10)$0" [label = "normal"]
"embedding_matrix(10)$0" -> "embed_size(10)$0" [label = "normal"]
"word(10)" -> "word_index(10)" [label = "Iter"]
"i(10)" -> "word_index(10)" [label = "Iter"]
"embedding_vector(10)$0" -> "embeddings_index(10)$0" [label = "get"]
"embedding_vector(10)$0" -> "word(10)" [label = "get"]
"embedding_matrix(10)$1" -> "embedding_matrix(10)$0" [label = "eq"]
"embedding_matrix(10)$1" -> "embedding_vector(10)$0" [label = "eq"]
"tqdm(0)$0" -> "tqdm(0)" [label = "pandas"]
"start_time(0)$0" -> "time(0)" [label = "time"]
"embedding_matrix_1(0)$0" -> "word_index(0)" [label = "load_glove"]
"embedding_matrix_2(0)$0" -> "word_index(0)" [label = "load_para"]
"total_time(0)$0" -> "time(0)" [label = "Div"]
"total_time(0)$0" -> "start_time(0)$0" [label = "Div"]
"total_time(0)$0" -> "60(0)" [label = "Div"]
"print[0]" -> "Took {:.2f} minutes(0)" [label = "print"]
"print[1]" -> "total_time(0)$0" [label = "print"]
"embedding_matrix(0)$0" -> "np(0)" [label = "mean"]
"embedding_matrix(0)$0" -> "[<_ast.Name object at 0x10a24bb10>, <_ast.Name object at 0x10a24bc10>](0)" [label = "mean"]
"embedding_matrix(0)$0" -> "0(0)" [label = "mean"]
"print[0]" -> "np(0)" [label = "print"]
"print[1]" -> "embedding_matrix(0)$0" [label = "print"]
"gc(0)$0" -> "gc(0)" [label = "collect"]
"self(13)" -> "__init__[0]" [label = "_argToVar"]
"feature_dim(13)" -> "__init__[1]" [label = "_argToVar"]
"step_dim(13)" -> "__init__[2]" [label = "_argToVar"]
"bias(13)" -> "__init__[3]" [label = "_argToVar"]
"super(13)$0" -> "super(13)" [label = "__init__"]
"self(13)$0" -> "self(13)" [label = "eq"]
"self(13)$0" -> "bias(13)" [label = "eq"]
"self(13)$1" -> "self(13)$0" [label = "eq"]
"self(13)$1" -> "feature_dim(13)" [label = "eq"]
"self(13)$2" -> "self(13)$1" [label = "eq"]
"self(13)$2" -> "step_dim(13)" [label = "eq"]
"self(13)$3" -> "self(13)$2" [label = "eq"]
"self(13)$3" -> "0(13)" [label = "eq"]
"weight(13)$0" -> "torch(13)" [label = "zeros"]
"weight(13)$0" -> "feature_dim(13)" [label = "zeros"]
"weight(13)$0" -> "1(13)" [label = "zeros"]
"nn(13)$0" -> "nn(13)" [label = "xavier_uniform_"]
"nn(13)$0" -> "weight(13)$0" [label = "xavier_uniform_"]
"self(13)$4" -> "self(13)$3" [label = "Parameter"]
"self(13)$4" -> "nn(13)$0" [label = "Parameter"]
"self(13)$4" -> "weight(13)$0" [label = "Parameter"]
"self(13)$5" -> "self(13)$4" [label = "Parameter"]
"self(13)$5" -> "nn(13)$0" [label = "Parameter"]
"self(13)$5" -> "torch(13)" [label = "Parameter"]
"self(13)$5" -> "step_dim(13)" [label = "Parameter"]
"self(14)" -> "forward[0]" [label = "_argToVar"]
"x(14)" -> "forward[1]" [label = "_argToVar"]
"mask(14)" -> "forward[2]" [label = "_argToVar"]
"feature_dim(14)$0" -> "self(14)" [label = "eq"]
"step_dim(14)$0" -> "self(14)" [label = "eq"]
"eij(14)$0" -> "torch(14)" [label = "view"]
"eij(14)$0" -> "x(14)" [label = "view"]
"eij(14)$0" -> "1(14)" [label = "view"]
"eij(14)$0" -> "feature_dim(14)$0" [label = "view"]
"eij(14)$0" -> "self(14)" [label = "view"]
"eij(14)$0" -> "1(14)" [label = "view"]
"eij(14)$0" -> "step_dim(14)$0" [label = "view"]
"eij(14)$1" -> "eij(14)$0" [label = "Add"]
"eij(14)$1" -> "self(14)" [label = "Add"]
"eij(14)$2" -> "torch(14)" [label = "tanh"]
"eij(14)$2" -> "eij(14)$2" [label = "tanh"]
"a(14)$0" -> "torch(14)" [label = "exp"]
"a(14)$0" -> "eij(14)$2" [label = "exp"]
"a(14)$1" -> "a(14)$0" [label = "Mult"]
"a(14)$1" -> "mask(14)" [label = "Mult"]
"a(14)$2" -> "a(14)$1" [label = "Add"]
"a(14)$2" -> "torch(14)" [label = "Add"]
"a(14)$2" -> "a(14)$2" [label = "Add"]
"a(14)$2" -> "1(14)" [label = "Add"]
"a(14)$2" -> "1e-10(14)" [label = "Add"]
"weighted_input(14)$0" -> "x(14)" [label = "Mult"]
"weighted_input(14)$0" -> "torch(14)" [label = "Mult"]
"weighted_input(14)$0" -> "a(14)$2" [label = "Mult"]
"weighted_input(14)$0" -> "1(14)" [label = "Mult"]
"self(16)" -> "__init__[0]" [label = "_argToVar"]
"super(16)$0" -> "super(16)" [label = "__init__"]
"hidden_size(16)$0" -> "60(16)" [label = "eq"]
"self(16)$0" -> "self(16)" [label = "Embedding"]
"self(16)$0" -> "nn(16)" [label = "Embedding"]
"self(16)$0" -> "max_features(16)" [label = "Embedding"]
"self(16)$0" -> "embed_size(16)" [label = "Embedding"]
"self(16)$1" -> "self(16)$0" [label = "Parameter"]
"self(16)$1" -> "nn(16)" [label = "Parameter"]
"self(16)$1" -> "torch(16)" [label = "Parameter"]
"self(16)$1" -> "embedding_matrix(16)" [label = "Parameter"]
"self(16)$1" -> "torch(16)" [label = "Parameter"]
"self(16)$2" -> "self(16)$1" [label = "Dropout2d"]
"self(16)$2" -> "nn(16)" [label = "Dropout2d"]
"self(16)$2" -> "0.1(16)" [label = "Dropout2d"]
"self(16)$3" -> "self(16)$2" [label = "GRU"]
"self(16)$3" -> "nn(16)" [label = "GRU"]
"self(16)$3" -> "embed_size(16)" [label = "GRU"]
"self(16)$3" -> "hidden_size(16)$0" [label = "GRU"]
"self(16)$4" -> "self(16)$3" [label = "GRU"]
"self(16)$4" -> "nn(16)" [label = "GRU"]
"self(16)$4" -> "hidden_size(16)$0" [label = "GRU"]
"self(16)$4" -> "2(16)" [label = "GRU"]
"self(16)$4" -> "hidden_size(16)$0" [label = "GRU"]
"self(16)$5" -> "self(16)$4" [label = "Attention"]
"self(16)$5" -> "hidden_size(16)$0" [label = "Attention"]
"self(16)$5" -> "2(16)" [label = "Attention"]
"self(16)$5" -> "maxlen(16)" [label = "Attention"]
"self(16)$6" -> "self(16)$5" [label = "Attention"]
"self(16)$6" -> "hidden_size(16)$0" [label = "Attention"]
"self(16)$6" -> "2(16)" [label = "Attention"]
"self(16)$6" -> "maxlen(16)" [label = "Attention"]
"self(16)$7" -> "self(16)$6" [label = "Linear"]
"self(16)$7" -> "nn(16)" [label = "Linear"]
"self(16)$7" -> "480(16)" [label = "Linear"]
"self(16)$7" -> "16(16)" [label = "Linear"]
"self(16)$8" -> "self(16)$7" [label = "ReLU"]
"self(16)$8" -> "nn(16)" [label = "ReLU"]
"self(16)$9" -> "self(16)$8" [label = "Dropout"]
"self(16)$9" -> "nn(16)" [label = "Dropout"]
"self(16)$9" -> "0.1(16)" [label = "Dropout"]
"self(16)$10" -> "self(16)$9" [label = "Linear"]
"self(16)$10" -> "nn(16)" [label = "Linear"]
"self(16)$10" -> "16(16)" [label = "Linear"]
"self(16)$10" -> "1(16)" [label = "Linear"]
"self(17)" -> "forward[0]" [label = "_argToVar"]
"x(17)" -> "forward[1]" [label = "_argToVar"]
"h_embedding(17)$0" -> "self(17)" [label = "embedding"]
"h_embedding(17)$0" -> "x(17)" [label = "embedding"]
"h_embedding(17)$1" -> "torch(17)" [label = "squeeze"]
"h_embedding(17)$1" -> "self(17)" [label = "squeeze"]
"h_embedding(17)$1" -> "torch(17)" [label = "squeeze"]
"h_embedding(17)$1" -> "h_embedding(17)$1" [label = "squeeze"]
"h_embedding(17)$1" -> "0(17)" [label = "squeeze"]
"h_lstm(17)$0" -> "self(17)" [label = "lstm"]
"_(17)$0" -> "self(17)" [label = "lstm"]
"h_lstm(17)$0" -> "h_embedding(17)$1" [label = "lstm"]
"_(17)$0" -> "h_embedding(17)$1" [label = "lstm"]
"h_gru(17)$0" -> "self(17)" [label = "gru"]
"_(17)$1" -> "self(17)" [label = "gru"]
"h_gru(17)$0" -> "h_lstm(17)$0" [label = "gru"]
"_(17)$1" -> "h_lstm(17)$0" [label = "gru"]
"h_lstm_atten(17)$0" -> "self(17)" [label = "lstm_attention"]
"h_lstm_atten(17)$0" -> "h_lstm(17)$0" [label = "lstm_attention"]
"h_gru_atten(17)$0" -> "self(17)" [label = "gru_attention"]
"h_gru_atten(17)$0" -> "h_gru(17)$0" [label = "gru_attention"]
"avg_pool(17)$0" -> "torch(17)" [label = "mean"]
"avg_pool(17)$0" -> "h_gru(17)$0" [label = "mean"]
"avg_pool(17)$0" -> "1(17)" [label = "mean"]
"max_pool(17)$0" -> "torch(17)" [label = "max"]
"_(17)$2" -> "torch(17)" [label = "max"]
"max_pool(17)$0" -> "h_gru(17)$0" [label = "max"]
"_(17)$2" -> "h_gru(17)$0" [label = "max"]
"max_pool(17)$0" -> "1(17)" [label = "max"]
"_(17)$2" -> "1(17)" [label = "max"]
"conc(17)$0" -> "torch(17)" [label = "cat"]
"conc(17)$0" -> "h_lstm_atten(17)$0" [label = "cat"]
"conc(17)$0" -> "h_gru_atten(17)$0" [label = "cat"]
"conc(17)$0" -> "avg_pool(17)$0" [label = "cat"]
"conc(17)$0" -> "max_pool(17)$0" [label = "cat"]
"conc(17)$0" -> "1(17)" [label = "cat"]
"conc(17)$1" -> "self(17)" [label = "relu"]
"conc(17)$1" -> "self(17)" [label = "relu"]
"conc(17)$1" -> "conc(17)$1" [label = "relu"]
"conc(17)$2" -> "self(17)" [label = "dropout"]
"conc(17)$2" -> "conc(17)$2" [label = "dropout"]
"out(17)$0" -> "self(17)" [label = "out"]
"out(17)$0" -> "conc(17)$2" [label = "out"]
"splits(0)$0" -> "StratifiedKFold(0)" [label = "list"]
"splits(0)$0" -> "5(0)" [label = "list"]
"splits(0)$0" -> "SEED(0)$0" [label = "list"]
"splits(0)$0" -> "train_X(0)" [label = "list"]
"splits(0)$0" -> "train_y(0)" [label = "list"]
"x(18)" -> "sigmoid[0]" [label = "_argToVar"]
"y_true(19)" -> "threshold_search[0]" [label = "_argToVar"]
"y_proba(19)" -> "threshold_search[1]" [label = "_argToVar"]
"best_threshold(19)$0" -> "0(19)" [label = "eq"]
"best_score(19)$0" -> "0(19)" [label = "eq"]
"threshold(19)" -> "tqdm(19)" [label = "Iter"]
"threshold(19)" -> "i(19)" [label = "Iter"]
"threshold(19)" -> "0.01(19)" [label = "Iter"]
"threshold(19)" -> "i(19)" [label = "Iter"]
"threshold(19)" -> "range(19)" [label = "Iter"]
"threshold(19)" -> "100(19)" [label = "Iter"]
"score(19)$0" -> "y_true(19)" [label = "f1_score"]
"score(19)$0" -> "y_proba(19)" [label = "f1_score"]
"score(19)$0" -> "threshold(19)" [label = "f1_score"]
"best_threshold(19)$1" -> "threshold(19)" [label = "eq"]
"best_score(19)$1" -> "score(19)$0" [label = "eq"]
"search_result(19)$0" -> "threshold(19)" [label = "eq"]
"search_result(19)$0" -> "f1(19)" [label = "eq"]
"search_result(19)$0" -> "best_threshold(19)$1" [label = "eq"]
"search_result(19)$0" -> "best_score(19)$1" [label = "eq"]
"train_preds(0)$0" -> "np(0)" [label = "zeros"]
"train_preds(0)$0" -> "len(0)" [label = "zeros"]
"train_preds(0)$0" -> "train_X(0)" [label = "zeros"]
"test_preds(0)$0" -> "np(0)" [label = "zeros"]
"test_preds(0)$0" -> "len(0)" [label = "zeros"]
"test_preds(0)$0" -> "test_X(0)" [label = "zeros"]
"seed_torch[0]" -> "SEED(0)$0" [label = "seed_torch"]
"x_test_cuda(0)$0" -> "torch(0)" [label = "cuda"]
"x_test_cuda(0)$0" -> "test_X(0)" [label = "cuda"]
"x_test_cuda(0)$0" -> "torch(0)" [label = "cuda"]
"test(0)$0" -> "torch(0)" [label = "TensorDataset"]
"test(0)$0" -> "x_test_cuda(0)$0" [label = "TensorDataset"]
"test_loader(0)$0" -> "torch(0)" [label = "DataLoader"]
"test_loader(0)$0" -> "test(0)$0" [label = "DataLoader"]
"test_loader(0)$0" -> "batch_size(0)$0" [label = "DataLoader"]
"i(0)" -> "enumerate(0)" [label = "Iter"]
"train_idx(0)" -> "enumerate(0)" [label = "Iter"]
"valid_idx(0)" -> "enumerate(0)" [label = "Iter"]
"i(0)" -> "splits(0)$0" [label = "Iter"]
"train_idx(0)" -> "splits(0)$0" [label = "Iter"]
"valid_idx(0)" -> "splits(0)$0" [label = "Iter"]
"x_train_fold(0)$0" -> "torch(0)" [label = "cuda"]
"x_train_fold(0)$0" -> "train_X(0)" [label = "cuda"]
"x_train_fold(0)$0" -> "train_idx(0)" [label = "cuda"]
"x_train_fold(0)$0" -> "torch(0)" [label = "cuda"]
"y_train_fold(0)$0" -> "torch(0)" [label = "cuda"]
"y_train_fold(0)$0" -> "train_y(0)" [label = "cuda"]
"y_train_fold(0)$0" -> "train_idx(0)" [label = "cuda"]
"y_train_fold(0)$0" -> "np(0)" [label = "cuda"]
"y_train_fold(0)$0" -> "torch(0)" [label = "cuda"]
"x_val_fold(0)$0" -> "torch(0)" [label = "cuda"]
"x_val_fold(0)$0" -> "train_X(0)" [label = "cuda"]
"x_val_fold(0)$0" -> "valid_idx(0)" [label = "cuda"]
"x_val_fold(0)$0" -> "torch(0)" [label = "cuda"]
"y_val_fold(0)$0" -> "torch(0)" [label = "cuda"]
"y_val_fold(0)$0" -> "train_y(0)" [label = "cuda"]
"y_val_fold(0)$0" -> "valid_idx(0)" [label = "cuda"]
"y_val_fold(0)$0" -> "np(0)" [label = "cuda"]
"y_val_fold(0)$0" -> "torch(0)" [label = "cuda"]
"model(0)$0" -> "model(0)" [label = "cuda"]
"loss_fn(0)$0" -> "torch(0)" [label = "BCEWithLogitsLoss"]
"loss_fn(0)$0" -> "sum(0)" [label = "BCEWithLogitsLoss"]
"optimizer(0)$0" -> "torch(0)" [label = "Adam"]
"optimizer(0)$0" -> "model(0)$0" [label = "Adam"]
"train(0)$0" -> "torch(0)" [label = "TensorDataset"]
"train(0)$0" -> "x_train_fold(0)$0" [label = "TensorDataset"]
"train(0)$0" -> "y_train_fold(0)$0" [label = "TensorDataset"]
"valid(0)$0" -> "torch(0)" [label = "TensorDataset"]
"valid(0)$0" -> "x_val_fold(0)$0" [label = "TensorDataset"]
"valid(0)$0" -> "y_val_fold(0)$0" [label = "TensorDataset"]
"train_loader(0)$0" -> "torch(0)" [label = "DataLoader"]
"train_loader(0)$0" -> "train(0)$0" [label = "DataLoader"]
"train_loader(0)$0" -> "batch_size(0)$0" [label = "DataLoader"]
"valid_loader(0)$0" -> "torch(0)" [label = "DataLoader"]
"valid_loader(0)$0" -> "valid(0)$0" [label = "DataLoader"]
"valid_loader(0)$0" -> "batch_size(0)$0" [label = "DataLoader"]
"print[0]" -> "Fold (0)" [label = "print"]
"print[1]" -> "i(0)" [label = "print"]
"print[2]" -> "1(0)" [label = "print"]
"epoch(0)" -> "range(0)" [label = "Iter"]
"epoch(0)" -> "train_epochs(0)$0" [label = "Iter"]
"start_time(0)$1" -> "time(0)" [label = "time"]
"model(0)$1" -> "model(0)$0" [label = "train"]
"avg_loss(0)$0" -> "0.0(0)" [label = "eq"]
"x_batch(0)" -> "tqdm(0)$0" [label = "Iter"]
"y_batch(0)" -> "tqdm(0)$0" [label = "Iter"]
"x_batch(0)" -> "train_loader(0)$0" [label = "Iter"]
"y_batch(0)" -> "train_loader(0)$0" [label = "Iter"]
"y_pred(0)$0" -> "x_batch(0)" [label = "model"]
"loss(0)$0" -> "y_pred(0)$0" [label = "loss_fn"]
"loss(0)$0" -> "y_batch(0)" [label = "loss_fn"]
"optimizer(0)$1" -> "optimizer(0)$0" [label = "zero_grad"]
"loss(0)$1" -> "loss(0)$0" [label = "backward"]
"optimizer(0)$2" -> "optimizer(0)$1" [label = "step"]
"avg_loss(0)$1" -> "loss(0)$1" [label = "Add"]
"avg_loss(0)$1" -> "avg_loss(0)$0" [label = "Add"]
"avg_loss(0)$1" -> "len(0)" [label = "Add"]
"avg_loss(0)$1" -> "avg_loss(0)$0" [label = "Add"]
"avg_loss(0)$1" -> "train_loader(0)$0" [label = "Add"]
"avg_loss(0)$1" -> "avg_loss(0)$0" [label = "Add"]
"model(0)$2" -> "model(0)$1" [label = "eval"]
"valid_preds_fold(0)$0" -> "np(0)" [label = "zeros"]
"valid_preds_fold(0)$0" -> "x_val_fold(0)$0" [label = "zeros"]
"valid_preds_fold(0)$0" -> "0(0)" [label = "zeros"]
"test_preds_fold(0)$0" -> "np(0)" [label = "zeros"]
"test_preds_fold(0)$0" -> "len(0)" [label = "zeros"]
"test_preds_fold(0)$0" -> "test_X(0)" [label = "zeros"]
"avg_val_loss(0)$0" -> "0.0(0)" [label = "eq"]
"i(0)" -> "enumerate(0)" [label = "Iter"]
"x_batch(0)" -> "enumerate(0)" [label = "Iter"]
"y_batch(0)" -> "enumerate(0)" [label = "Iter"]
"i(0)" -> "valid_loader(0)$0" [label = "Iter"]
"x_batch(0)" -> "valid_loader(0)$0" [label = "Iter"]
"y_batch(0)" -> "valid_loader(0)$0" [label = "Iter"]
"y_pred(0)$1" -> "model(0)$2" [label = "detach"]
"y_pred(0)$1" -> "x_batch(0)" [label = "detach"]
"avg_val_loss(0)$1" -> "loss_fn(0)$0" [label = "Add"]
"avg_val_loss(0)$1" -> "avg_val_loss(0)$0" [label = "Add"]
"avg_val_loss(0)$1" -> "y_pred(0)$1" [label = "Add"]
"avg_val_loss(0)$1" -> "avg_val_loss(0)$0" [label = "Add"]
"avg_val_loss(0)$1" -> "y_batch(0)" [label = "Add"]
"avg_val_loss(0)$1" -> "avg_val_loss(0)$0" [label = "Add"]
"avg_val_loss(0)$1" -> "len(0)" [label = "Add"]
"avg_val_loss(0)$1" -> "avg_val_loss(0)$0" [label = "Add"]
"avg_val_loss(0)$1" -> "valid_loader(0)$0" [label = "Add"]
"avg_val_loss(0)$1" -> "avg_val_loss(0)$0" [label = "Add"]
"valid_preds_fold(0)$1" -> "valid_preds_fold(0)$0" [label = "eq"]
"valid_preds_fold(0)$1" -> "sigmoid(0)" [label = "eq"]
"valid_preds_fold(0)$1" -> "y_pred(0)$1" [label = "eq"]
"valid_preds_fold(0)$1" -> "0(0)" [label = "eq"]
"elapsed_time(0)$0" -> "time(0)" [label = "Sub"]
"elapsed_time(0)$0" -> "start_time(0)$1" [label = "Sub"]
"print[0]" -> "Epoch {}/{} 	 loss={:.4f} 	 val_loss={:.4f} 	 time={:.2f}s(0)" [label = "print"]
"print[1]" -> "epoch(0)" [label = "print"]
"print[2]" -> "1(0)" [label = "print"]
"print[3]" -> "train_epochs(0)$0" [label = "print"]
"print[4]" -> "avg_loss(0)$1" [label = "print"]
"print[5]" -> "avg_val_loss(0)$1" [label = "print"]
"print[6]" -> "elapsed_time(0)$0" [label = "print"]
"i(0)" -> "enumerate(0)" [label = "Iter"]
"x_batch(0)" -> "enumerate(0)" [label = "Iter"]
"i(0)" -> "test_loader(0)$0" [label = "Iter"]
"x_batch(0)" -> "test_loader(0)$0" [label = "Iter"]
"y_pred(0)$2" -> "model(0)$2" [label = "detach"]
"y_pred(0)$2" -> "x_batch(0)" [label = "detach"]
"test_preds_fold(0)$1" -> "test_preds_fold(0)$0" [label = "eq"]
"test_preds_fold(0)$1" -> "sigmoid(0)" [label = "eq"]
"test_preds_fold(0)$1" -> "y_pred(0)$2" [label = "eq"]
"test_preds_fold(0)$1" -> "0(0)" [label = "eq"]
"train_preds(0)$1" -> "train_preds(0)$0" [label = "eq"]
"train_preds(0)$1" -> "valid_preds_fold(0)$1" [label = "eq"]
"test_preds(0)$1" -> "test_preds_fold(0)$1" [label = "Add"]
"test_preds(0)$1" -> "test_preds(0)$0" [label = "Add"]
"test_preds(0)$1" -> "len(0)" [label = "Add"]
"test_preds(0)$1" -> "test_preds(0)$0" [label = "Add"]
"test_preds(0)$1" -> "splits(0)$0" [label = "Add"]
"test_preds(0)$1" -> "test_preds(0)$0" [label = "Add"]
"search_result(0)$0" -> "train_y(0)" [label = "threshold_search"]
"search_result(0)$0" -> "train_preds(0)$1" [label = "threshold_search"]
"sub(0)$0" -> "pd(0)" [label = "read_csv"]
"sub(0)$0" -> "../input/sample_submission.csv(0)" [label = "read_csv"]
"sub(0)$1" -> "sub(0)$0" [label = "eq"]
"sub(0)$1" -> "test_preds(0)$1" [label = "eq"]
"sub(0)$1" -> "search_result(0)$0" [label = "eq"]
"sub(0)$1" -> "threshold(0)" [label = "eq"]
"sub(0)$2" -> "sub(0)$1" [label = "to_csv"]
"sub(0)$2" -> "submission.csv(0)" [label = "to_csv"]
}