digraph { 
"pandas" -> "an-overview-of-encoding-techniques.ipynb" [label = "import"]
"pd(0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"pd(0)" -> "pandas" [label = "assign"]
"numpy" -> "an-overview-of-encoding-techniques.ipynb" [label = "import"]
"np(0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"np(0)" -> "numpy" [label = "assign"]
"matplotlib.pyplot" -> "an-overview-of-encoding-techniques.ipynb" [label = "import"]
"plt(0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"plt(0)" -> "matplotlib.pyplot" [label = "assign"]
"sklearn.model_selection" -> "an-overview-of-encoding-techniques.ipynb" [label = "import"]
"train_test_split" -> "sklearn.model_selection" [label = "import"]
"train_test_split(0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"train_test_split(0)" -> "train_test_split" [label = "assign"]
"sklearn.linear_model" -> "an-overview-of-encoding-techniques.ipynb" [label = "import"]
"LogisticRegression" -> "sklearn.linear_model" [label = "import"]
"LogisticRegression(0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"LogisticRegression(0)" -> "LogisticRegression" [label = "assign"]
"sklearn.metrics" -> "an-overview-of-encoding-techniques.ipynb" [label = "import"]
"accuracy_score" -> "sklearn.metrics" [label = "import"]
"accuracy_score(0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"accuracy_score(0)" -> "accuracy_score" [label = "assign"]
"sklearn.model_selection" -> "an-overview-of-encoding-techniques.ipynb" [label = "import"]
"KFold" -> "sklearn.model_selection" [label = "import"]
"KFold(0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"KFold(0)" -> "KFold" [label = "assign"]
"sklearn" -> "an-overview-of-encoding-techniques.ipynb" [label = "import"]
"base" -> "sklearn" [label = "import"]
"base(0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"base(0)" -> "base" [label = "assign"]
"df_train(0)$0" -> "pd(0)" [label = "read_csv"]
"../input/cat-in-the-dat/train.csv(0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"df_train(0)$0" -> "../input/cat-in-the-dat/train.csv(0)" [label = "read_csv"]
"df_test(0)$0" -> "pd(0)" [label = "read_csv"]
"../input/cat-in-the-dat/test.csv(0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"df_test(0)$0" -> "../input/cat-in-the-dat/test.csv(0)" [label = "read_csv"]
"train data set has got {} rows and {} columns(0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"print[0]" -> "train data set has got {} rows and {} columns(0)" [label = "print"]
"print[1]" -> "df_train(0)$0" [label = "print"]
"0(0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"print[2]" -> "0(0)" [label = "print"]
"print[3]" -> "df_train(0)$0" [label = "print"]
"1(0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"print[4]" -> "1(0)" [label = "print"]
"test data set has got {} rows and {} columns(0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"print[0]" -> "test data set has got {} rows and {} columns(0)" [label = "print"]
"print[1]" -> "df_test(0)$0" [label = "print"]
"print[2]" -> "0(0)" [label = "print"]
"print[3]" -> "df_test(0)$0" [label = "print"]
"print[4]" -> "1(0)" [label = "print"]
"df_train(0)$1" -> "df_train(0)$0" [label = "head"]
"df_train(0)$2" -> "df_train(0)$1" [label = "info"]
"X(0)$0" -> "df_train(0)$2" [label = "drop"]
"[<_ast.Str object at 0x10652ded0>](0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"X(0)$0" -> "[<_ast.Str object at 0x10652ded0>](0)" [label = "drop"]
"X(0)$0" -> "1(0)" [label = "drop"]
"y(0)$0" -> "df_train(0)$2" [label = "assign"]
"target(0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"y(0)$0" -> "target(0)" [label = "assign"]
"x(0)$0" -> "y(0)$0" [label = "value_counts"]
"plt(0)$0" -> "plt(0)" [label = "bar"]
"plt(0)$0" -> "x(0)$0" [label = "bar"]
"plt(0)$0" -> "x(0)$0" [label = "bar"]
"plt(0)$1" -> "plt(0)$0" [label = "set_xticks"]
"[<_ast.Num object at 0x10652d950>, <_ast.Num object at 0x10652d9d0>](0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"plt(0)$1" -> "[<_ast.Num object at 0x10652d950>, <_ast.Num object at 0x10652d9d0>](0)" [label = "set_xticks"]
"plt(0)$2" -> "plt(0)$1" [label = "title"]
"distribution of target variable(0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"plt(0)$2" -> "distribution of target variable(0)" [label = "title"]
"plt(0)$3" -> "plt(0)$2" [label = "show"]
"sklearn.preprocessing" -> "an-overview-of-encoding-techniques.ipynb" [label = "import"]
"LabelEncoder" -> "sklearn.preprocessing" [label = "import"]
"LabelEncoder(0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"LabelEncoder(0)" -> "LabelEncoder" [label = "assign"]
"train(0)$0" -> "pd(0)" [label = "DataFrame"]
"c(0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"c(0)" -> "X(0)$0" [label = "Iter"]
"label(0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"train(0)$1" -> "train(0)$0" [label = "fit_transform"]
"train(0)$1" -> "label(0)" [label = "fit_transform"]
"train(0)$1" -> "X(0)$0" [label = "fit_transform"]
"train(0)$1" -> "c(0)" [label = "fit_transform"]
"train(0)$2" -> "train(0)$1" [label = "assign"]
"train(0)$2" -> "X(0)$0" [label = "assign"]
"train(0)$2" -> "c(0)" [label = "assign"]
"train(0)$3" -> "train(0)$2" [label = "head"]
"3(0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"train(0)$3" -> "3(0)" [label = "head"]
"print[0]" -> "train data set has got {} rows and {} columns(0)" [label = "print"]
"print[1]" -> "train(0)$3" [label = "print"]
"print[2]" -> "0(0)" [label = "print"]
"print[3]" -> "train(0)$3" [label = "print"]
"print[4]" -> "1(0)" [label = "print"]
"X(1)" -> "logistic[0]" [label = "_argToVar"]
"y(1)" -> "logistic[1]" [label = "_argToVar"]
"X_train(1)$0" -> "X(1)" [label = "train_test_split"]
"X_test(1)$0" -> "X(1)" [label = "train_test_split"]
"y_train(1)$0" -> "X(1)" [label = "train_test_split"]
"y_test(1)$0" -> "X(1)" [label = "train_test_split"]
"X_train(1)$0" -> "y(1)" [label = "train_test_split"]
"X_test(1)$0" -> "y(1)" [label = "train_test_split"]
"y_train(1)$0" -> "y(1)" [label = "train_test_split"]
"y_test(1)$0" -> "y(1)" [label = "train_test_split"]
"X_train(1)$0" -> "42(1)" [label = "train_test_split"]
"X_test(1)$0" -> "42(1)" [label = "train_test_split"]
"y_train(1)$0" -> "42(1)" [label = "train_test_split"]
"y_test(1)$0" -> "42(1)" [label = "train_test_split"]
"X_train(1)$0" -> "0.2(1)" [label = "train_test_split"]
"X_test(1)$0" -> "0.2(1)" [label = "train_test_split"]
"y_train(1)$0" -> "0.2(1)" [label = "train_test_split"]
"y_test(1)$0" -> "0.2(1)" [label = "train_test_split"]
"lr(1)$0" -> "lr(1)" [label = "fit"]
"lr(1)$0" -> "X_train(1)$0" [label = "fit"]
"lr(1)$0" -> "y_train(1)$0" [label = "fit"]
"y_pre(1)$0" -> "lr(1)$0" [label = "predict"]
"y_pre(1)$0" -> "X_test(1)$0" [label = "predict"]
"print[0]" -> "Accuracy : (1)" [label = "print"]
"print[1]" -> "accuracy_score(1)" [label = "print"]
"print[2]" -> "y_test(1)$0" [label = "print"]
"print[3]" -> "y_pre(1)$0" [label = "print"]
"logistic[0]" -> "train(0)$3" [label = "logistic"]
"logistic[1]" -> "y(0)$0" [label = "logistic"]
"sklearn.preprocessing" -> "an-overview-of-encoding-techniques.ipynb" [label = "import"]
"OneHotEncoder" -> "sklearn.preprocessing" [label = "import"]
"OneHotEncoder(0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"OneHotEncoder(0)" -> "OneHotEncoder" [label = "assign"]
"one(0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"one(0)$0" -> "one(0)" [label = "fit"]
"one(0)$0" -> "X(0)$0" [label = "fit"]
"train(0)$4" -> "one(0)$0" [label = "transform"]
"train(0)$4" -> "X(0)$0" [label = "transform"]
"print[0]" -> "train data set has got {} rows and {} columns(0)" [label = "print"]
"print[1]" -> "train(0)$4" [label = "print"]
"print[2]" -> "0(0)" [label = "print"]
"print[3]" -> "train(0)$4" [label = "print"]
"print[4]" -> "1(0)" [label = "print"]
"logistic[0]" -> "train(0)$4" [label = "logistic"]
"logistic[1]" -> "y(0)$0" [label = "logistic"]
"sklearn.feature_extraction" -> "an-overview-of-encoding-techniques.ipynb" [label = "import"]
"FeatureHasher" -> "sklearn.feature_extraction" [label = "import"]
"FeatureHasher(0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"FeatureHasher(0)" -> "FeatureHasher" [label = "assign"]
"X_train_hash(0)$0" -> "X(0)$0" [label = "copy"]
"c(0)" -> "X(0)$0" [label = "Iter"]
"X_train_hash(0)$1" -> "X_train_hash(0)$0" [label = "astype"]
"X_train_hash(0)$1" -> "X(0)$0" [label = "astype"]
"X_train_hash(0)$1" -> "c(0)" [label = "astype"]
"str(0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"X_train_hash(0)$1" -> "str(0)" [label = "astype"]
"string(0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"hashing(0)$0" -> "string(0)" [label = "FeatureHasher"]
"train(0)$5" -> "hashing(0)$0" [label = "transform"]
"train(0)$5" -> "X_train_hash(0)$1" [label = "transform"]
"print[0]" -> "train data set has got {} rows and {} columns(0)" [label = "print"]
"print[1]" -> "train(0)$5" [label = "print"]
"print[2]" -> "0(0)" [label = "print"]
"print[3]" -> "train(0)$5" [label = "print"]
"print[4]" -> "1(0)" [label = "print"]
"logistic[0]" -> "train(0)$5" [label = "logistic"]
"logistic[1]" -> "y(0)$0" [label = "logistic"]
"X_train_stat(0)$0" -> "X(0)$0" [label = "copy"]
"c(0)" -> "X_train_stat(0)$0" [label = "Iter"]
"X_train_stat(0)$1" -> "X_train_stat(0)$0" [label = "astype"]
"X_train_stat(0)$1" -> "X_train_stat(0)$0" [label = "astype"]
"X_train_stat(0)$1" -> "c(0)" [label = "astype"]
"category(0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"X_train_stat(0)$1" -> "category(0)" [label = "astype"]
"counts(0)$0" -> "X_train_stat(0)$1" [label = "value_counts"]
"counts(0)$0" -> "c(0)" [label = "value_counts"]
"counts(0)$1" -> "counts(0)$0" [label = "sort_index"]
"counts(0)$2" -> "counts(0)$1" [label = "fillna"]
"counts(0)$2" -> "0(0)" [label = "fillna"]
"counts(0)$3" -> "np(0)" [label = "Add"]
"counts(0)$3" -> "counts(0)$2" [label = "Add"]
"len(0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"counts(0)$3" -> "len(0)" [label = "Add"]
"counts(0)$3" -> "counts(0)$2" [label = "Add"]
"counts(0)$3" -> "counts(0)$3" [label = "Add"]
"counts(0)$3" -> "counts(0)$2" [label = "Add"]
"1000(0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"counts(0)$3" -> "1000(0)" [label = "Add"]
"counts(0)$3" -> "counts(0)$2" [label = "Add"]
"X_train_stat(0)$2" -> "X_train_stat(0)$1" [label = "assign"]
"X_train_stat(0)$2" -> "counts(0)$3" [label = "assign"]
"X_train_stat(0)$3" -> "X_train_stat(0)$2" [label = "head"]
"X_train_stat(0)$3" -> "3(0)" [label = "head"]
"print[0]" -> "train data set has got {} rows and {} columns(0)" [label = "print"]
"print[1]" -> "X_train_stat(0)$3" [label = "print"]
"print[2]" -> "0(0)" [label = "print"]
"print[3]" -> "X_train_stat(0)$3" [label = "print"]
"print[4]" -> "1(0)" [label = "print"]
"logistic[0]" -> "X_train_stat(0)$3" [label = "logistic"]
"logistic[1]" -> "y(0)$0" [label = "logistic"]
"X_train_cyclic(0)$0" -> "X(0)$0" [label = "copy"]
"[<_ast.Str object at 0x105bc7910>, <_ast.Str object at 0x105bc7450>](0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"columns(0)$0" -> "[<_ast.Str object at 0x105bc7910>, <_ast.Str object at 0x105bc7450>](0)" [label = "assign"]
"col(0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"col(0)" -> "columns(0)$0" [label = "Iter"]
"X_train_cyclic(0)$1" -> "X_train_cyclic(0)$0" [label = "sin"]
"X_train_cyclic(0)$1" -> "np(0)" [label = "sin"]
"2(0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"X_train_cyclic(0)$1" -> "2(0)" [label = "sin"]
"X_train_cyclic(0)$1" -> "np(0)" [label = "sin"]
"X_train_cyclic(0)$1" -> "X_train_cyclic(0)$1" [label = "sin"]
"X_train_cyclic(0)$1" -> "col(0)" [label = "sin"]
"max(0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"X_train_cyclic(0)$1" -> "max(0)" [label = "sin"]
"X_train_cyclic(0)$1" -> "X_train_cyclic(0)$1" [label = "sin"]
"X_train_cyclic(0)$1" -> "col(0)" [label = "sin"]
"X_train_cyclic(0)$2" -> "X_train_cyclic(0)$1" [label = "cos"]
"X_train_cyclic(0)$2" -> "np(0)" [label = "cos"]
"X_train_cyclic(0)$2" -> "2(0)" [label = "cos"]
"X_train_cyclic(0)$2" -> "np(0)" [label = "cos"]
"X_train_cyclic(0)$2" -> "X_train_cyclic(0)$2" [label = "cos"]
"X_train_cyclic(0)$2" -> "col(0)" [label = "cos"]
"X_train_cyclic(0)$2" -> "max(0)" [label = "cos"]
"X_train_cyclic(0)$2" -> "X_train_cyclic(0)$2" [label = "cos"]
"X_train_cyclic(0)$2" -> "col(0)" [label = "cos"]
"X_train_cyclic(0)$3" -> "X_train_cyclic(0)$2" [label = "drop"]
"X_train_cyclic(0)$3" -> "columns(0)$0" [label = "drop"]
"X_train_cyclic(0)$3" -> "1(0)" [label = "drop"]
"X_train_cyclic(0)$4" -> "X_train_cyclic(0)$3" [label = "head"]
"X_train_cyclic(0)$4" -> "3(0)" [label = "head"]
"one(0)$1" -> "one(0)$0" [label = "fit"]
"one(0)$1" -> "X_train_cyclic(0)$4" [label = "fit"]
"train(0)$6" -> "one(0)$1" [label = "transform"]
"train(0)$6" -> "X_train_cyclic(0)$4" [label = "transform"]
"print[0]" -> "train data set has got {} rows and {} columns(0)" [label = "print"]
"print[1]" -> "train(0)$6" [label = "print"]
"print[2]" -> "0(0)" [label = "print"]
"print[3]" -> "train(0)$6" [label = "print"]
"print[4]" -> "1(0)" [label = "print"]
"logistic[0]" -> "train(0)$6" [label = "logistic"]
"logistic[1]" -> "y(0)$0" [label = "logistic"]
"X_target(0)$0" -> "df_train(0)$2" [label = "copy"]
"X_target(0)$1" -> "X_target(0)$0" [label = "astype"]
"X_target(0)$1" -> "X_target(0)$0" [label = "astype"]
"day(0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"X_target(0)$1" -> "day(0)" [label = "astype"]
"object(0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"X_target(0)$1" -> "object(0)" [label = "astype"]
"X_target(0)$2" -> "X_target(0)$1" [label = "astype"]
"X_target(0)$2" -> "X_target(0)$1" [label = "astype"]
"month(0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"X_target(0)$2" -> "month(0)" [label = "astype"]
"X_target(0)$2" -> "object(0)" [label = "astype"]
"col(0)" -> "X_target(0)$2" [label = "Iter"]
"target(0)$0" -> "X_target(0)$2" [label = "dict"]
"target(0)$0" -> "col(0)" [label = "dict"]
"target(0)$0" -> "target(0)$0" [label = "dict"]
"sum(0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"target(0)$0" -> "sum(0)" [label = "dict"]
"target(0)$0" -> "X_target(0)$2" [label = "dict"]
"target(0)$0" -> "col(0)" [label = "dict"]
"target(0)$0" -> "target(0)$0" [label = "dict"]
"count(0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"target(0)$0" -> "count(0)" [label = "dict"]
"X_target(0)$3" -> "X_target(0)$2" [label = "assign"]
"X_target(0)$3" -> "X_target(0)$2" [label = "assign"]
"X_target(0)$3" -> "col(0)" [label = "assign"]
"X_target(0)$3" -> "target(0)$0" [label = "assign"]
"X_target(0)$4" -> "X_target(0)$3" [label = "head"]
"4(0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"X_target(0)$4" -> "4(0)" [label = "head"]
"logistic[0]" -> "X_target(0)$4" [label = "logistic"]
"logistic[1]" -> "target(0)$0" [label = "logistic"]
"logistic[2]" -> "1(0)" [label = "logistic"]
"logistic[3]" -> "y(0)$0" [label = "logistic"]
"X(0)$1" -> "X(0)$0" [label = "assign"]
"X(0)$1" -> "y(0)$0" [label = "assign"]
"cols(0)$0" -> "X(0)$1" [label = "assign"]
"[<_ast.Str object at 0x1066f5050>, <_ast.Str object at 0x1066f5950>](0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"cols(0)$0" -> "[<_ast.Str object at 0x1066f5050>, <_ast.Str object at 0x1066f5950>](0)" [label = "assign"]
"cols(0)$0" -> "1(0)" [label = "assign"]
"X_fold(0)$0" -> "X(0)$1" [label = "copy"]
"X_fold(0)$1" -> "X_fold(0)$0" [label = "astype"]
"X_fold(0)$1" -> "X_fold(0)$0" [label = "astype"]
"[<_ast.Str object at 0x1066f5710>, <_ast.Str object at 0x1066f5a10>, <_ast.Str object at 0x1066f5610>](0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"X_fold(0)$1" -> "[<_ast.Str object at 0x1066f5710>, <_ast.Str object at 0x1066f5a10>, <_ast.Str object at 0x1066f5610>](0)" [label = "astype"]
"X_fold(0)$1" -> "object(0)" [label = "astype"]
"X_fold(0)$2" -> "X_fold(0)$1" [label = "replace"]
"X_fold(0)$2" -> "X_fold(0)$1" [label = "replace"]
"[<_ast.Str object at 0x1066f5b90>, <_ast.Str object at 0x1066f5410>](0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"X_fold(0)$2" -> "[<_ast.Str object at 0x1066f5b90>, <_ast.Str object at 0x1066f5410>](0)" [label = "replace"]
"Y(0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"X_fold(0)$2" -> "Y(0)" [label = "replace"]
"N(0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"X_fold(0)$2" -> "N(0)" [label = "replace"]
"T(0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"X_fold(0)$2" -> "T(0)" [label = "replace"]
"F(0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"X_fold(0)$2" -> "F(0)" [label = "replace"]
"X_fold(0)$2" -> "1(0)" [label = "replace"]
"X_fold(0)$2" -> "0(0)" [label = "replace"]
"X_fold(0)$2" -> "1(0)" [label = "replace"]
"X_fold(0)$2" -> "0(0)" [label = "replace"]
"5(0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"kf(0)$0" -> "5(0)" [label = "KFold"]
"2019(0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"kf(0)$0" -> "2019(0)" [label = "KFold"]
"train_ind(0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"train_ind(0)" -> "kf(0)$0" [label = "Iter"]
"val_ind(0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"val_ind(0)" -> "kf(0)$0" [label = "Iter"]
"train_ind(0)" -> "X(0)$1" [label = "Iter"]
"val_ind(0)" -> "X(0)$1" [label = "Iter"]
"col(0)" -> "cols(0)$0" [label = "Iter"]
"replaced(0)$0" -> "X(0)$1" [label = "dict"]
"replaced(0)$0" -> "train_ind(0)" [label = "dict"]
"[<_ast.Name object at 0x105ba8d50>, <_ast.Str object at 0x105ba8bd0>](0)" -> "an-overview-of-encoding-techniques.ipynb" [label = "appears"]
"replaced(0)$0" -> "[<_ast.Name object at 0x105ba8d50>, <_ast.Str object at 0x105ba8bd0>](0)" [label = "dict"]
"replaced(0)$0" -> "col(0)" [label = "dict"]
"replaced(0)$0" -> "target(0)$0" [label = "dict"]
"X_fold(0)$3" -> "X_fold(0)$2" [label = "assign"]
"X_fold(0)$3" -> "X_fold(0)$2" [label = "assign"]
"X_fold(0)$3" -> "val_ind(0)" [label = "assign"]
"X_fold(0)$3" -> "col(0)" [label = "assign"]
"X_fold(0)$3" -> "replaced(0)$0" [label = "assign"]
"X_fold(0)$4" -> "X_fold(0)$3" [label = "head"]
}