digraph { 
"print[0]" -> "os(0)" [label = "print"]
"print[1]" -> "../input(0)" [label = "print"]
"zip_ref(0)$0" -> "zip_ref(0)" [label = "extractall"]
"text(1)" -> "compute_offset_no_spaces[0]" [label = "_argToVar"]
"offset(1)" -> "compute_offset_no_spaces[1]" [label = "_argToVar"]
"count(1)$0" -> "0(1)" [label = "eq"]
"pos(1)" -> "range(1)" [label = "Iter"]
"pos(1)" -> "offset(1)" [label = "Iter"]
"count(1)$1" -> "1(1)" [label = "Add"]
"count(1)$1" -> "count(1)$0" [label = "Add"]
"text(2)" -> "count_chars_no_special[0]" [label = "_argToVar"]
"count(2)$0" -> "0(2)" [label = "eq"]
"special_char_list(2)$0" -> "[<_ast.Str object at 0x1034ad7d0>](2)" [label = "eq"]
"pos(2)" -> "range(2)" [label = "Iter"]
"pos(2)" -> "len(2)" [label = "Iter"]
"pos(2)" -> "text(2)" [label = "Iter"]
"count(2)$1" -> "1(2)" [label = "Add"]
"count(2)$1" -> "count(2)$0" [label = "Add"]
"text(3)" -> "count_length_no_special[0]" [label = "_argToVar"]
"count(3)$0" -> "0(3)" [label = "eq"]
"special_char_list(3)$0" -> "[<_ast.Str object at 0x103498290>, <_ast.Str object at 0x103498250>](3)" [label = "eq"]
"pos(3)" -> "range(3)" [label = "Iter"]
"pos(3)" -> "len(3)" [label = "Iter"]
"pos(3)" -> "text(3)" [label = "Iter"]
"count(3)$1" -> "1(3)" [label = "Add"]
"count(3)$1" -> "count(3)$0" [label = "Add"]
"data(4)" -> "run_bert[0]" [label = "_argToVar"]
"text(4)$0" -> "data(4)" [label = "eq"]
"text(4)$0" -> "Text(4)" [label = "eq"]
"text(4)$1" -> "text(4)$0" [label = "to_csv"]
"text(4)$1" -> "input.txt(4)" [label = "to_csv"]
"os(4)$0" -> "os(4)" [label = "system"]
"os(4)$0" -> "python3 extract_features.py 	  --input_file=input.txt 	  --output_file=output.jsonl 	  --vocab_file=uncased_L-12_H-768_A-12/vocab.txt 	  --bert_config_file=uncased_L-12_H-768_A-12/bert_config.json 	  --init_checkpoint=uncased_L-12_H-768_A-12/bert_model.ckpt 	  --layers=-1 	  --max_seq_length=256 	  --batch_size=8(4)" [label = "system"]
"bert_output(4)$0" -> "pd(4)" [label = "read_json"]
"bert_output(4)$0" -> "output.jsonl(4)" [label = "read_json"]
"os(4)$1" -> "os(4)$0" [label = "system"]
"os(4)$1" -> "rm output.jsonl(4)" [label = "system"]
"os(4)$2" -> "os(4)$1" [label = "system"]
"os(4)$2" -> "rm input.txt(4)" [label = "system"]
"index(4)$0" -> "data(4)" [label = "eq"]
"columns(4)$0" -> "[<_ast.Str object at 0x103497c50>, <_ast.Str object at 0x103497b50>, <_ast.Str object at 0x103497650>, <_ast.Str object at 0x103497cd0>](4)" [label = "eq"]
"emb(4)$0" -> "pd(4)" [label = "DataFrame"]
"emb(4)$0" -> "index(4)$0" [label = "DataFrame"]
"emb(4)$0" -> "columns(4)$0" [label = "DataFrame"]
"emb(4)$1" -> "ID(4)" [label = "eq"]
"i(4)" -> "range(4)" [label = "Iter"]
"i(4)" -> "len(4)" [label = "Iter"]
"i(4)" -> "data(4)" [label = "Iter"]
"P(4)$0" -> "data(4)" [label = "lower"]
"P(4)$0" -> "i(4)" [label = "lower"]
"P(4)$0" -> "Pronoun(4)" [label = "lower"]
"A(4)$0" -> "data(4)" [label = "lower"]
"A(4)$0" -> "i(4)" [label = "lower"]
"A(4)$0" -> "A(4)$0" [label = "lower"]
"B(4)$0" -> "data(4)" [label = "lower"]
"B(4)$0" -> "i(4)" [label = "lower"]
"B(4)$0" -> "B(4)$0" [label = "lower"]
"P_offset(4)$0" -> "data(4)" [label = "compute_offset_no_spaces"]
"P_offset(4)$0" -> "i(4)" [label = "compute_offset_no_spaces"]
"P_offset(4)$0" -> "Text(4)" [label = "compute_offset_no_spaces"]
"P_offset(4)$0" -> "data(4)" [label = "compute_offset_no_spaces"]
"P_offset(4)$0" -> "i(4)" [label = "compute_offset_no_spaces"]
"P_offset(4)$0" -> "Pronoun-offset(4)" [label = "compute_offset_no_spaces"]
"A_offset(4)$0" -> "data(4)" [label = "compute_offset_no_spaces"]
"A_offset(4)$0" -> "i(4)" [label = "compute_offset_no_spaces"]
"A_offset(4)$0" -> "Text(4)" [label = "compute_offset_no_spaces"]
"A_offset(4)$0" -> "data(4)" [label = "compute_offset_no_spaces"]
"A_offset(4)$0" -> "i(4)" [label = "compute_offset_no_spaces"]
"A_offset(4)$0" -> "A-offset(4)" [label = "compute_offset_no_spaces"]
"B_offset(4)$0" -> "data(4)" [label = "compute_offset_no_spaces"]
"B_offset(4)$0" -> "i(4)" [label = "compute_offset_no_spaces"]
"B_offset(4)$0" -> "Text(4)" [label = "compute_offset_no_spaces"]
"B_offset(4)$0" -> "data(4)" [label = "compute_offset_no_spaces"]
"B_offset(4)$0" -> "i(4)" [label = "compute_offset_no_spaces"]
"B_offset(4)$0" -> "B-offset(4)" [label = "compute_offset_no_spaces"]
"A_length(4)$0" -> "A(4)$0" [label = "count_length_no_special"]
"B_length(4)$0" -> "B(4)$0" [label = "count_length_no_special"]
"emb_A(4)$0" -> "np(4)" [label = "zeros"]
"emb_A(4)$0" -> "768(4)" [label = "zeros"]
"emb_B(4)$0" -> "np(4)" [label = "zeros"]
"emb_B(4)$0" -> "768(4)" [label = "zeros"]
"emb_P(4)$0" -> "np(4)" [label = "zeros"]
"emb_P(4)$0" -> "768(4)" [label = "zeros"]
"count_chars(4)$0" -> "0(4)" [label = "eq"]
"cnt_A(4)$0" -> "0(4)" [label = "eq"]
"cnt_B(4)$0" -> "0(4)" [label = "eq"]
"cnt_P(4)$0" -> "0(4)" [label = "eq"]
"cnt_A(4)$0" -> "0(4)" [label = "eq"]
"cnt_B(4)$0" -> "0(4)" [label = "eq"]
"cnt_P(4)$0" -> "0(4)" [label = "eq"]
"cnt_A(4)$0" -> "0(4)" [label = "eq"]
"cnt_B(4)$0" -> "0(4)" [label = "eq"]
"cnt_P(4)$0" -> "0(4)" [label = "eq"]
"features(4)$0" -> "pd(4)" [label = "DataFrame"]
"features(4)$0" -> "bert_output(4)$0" [label = "DataFrame"]
"features(4)$0" -> "i(4)" [label = "DataFrame"]
"features(4)$0" -> "features(4)$0" [label = "DataFrame"]
"j(4)" -> "range(4)" [label = "Iter"]
"j(4)" -> "2(4)" [label = "Iter"]
"j(4)" -> "len(4)" [label = "Iter"]
"j(4)" -> "features(4)$0" [label = "Iter"]
"token(4)$0" -> "features(4)$0" [label = "eq"]
"token(4)$0" -> "j(4)" [label = "eq"]
"token(4)$0" -> "token(4)$0" [label = "eq"]
"emb_P(4)$1" -> "np(4)" [label = "Add"]
"emb_P(4)$1" -> "emb_P(4)$0" [label = "Add"]
"emb_P(4)$1" -> "features(4)$0" [label = "Add"]
"emb_P(4)$1" -> "emb_P(4)$0" [label = "Add"]
"emb_P(4)$1" -> "j(4)" [label = "Add"]
"emb_P(4)$1" -> "emb_P(4)$0" [label = "Add"]
"emb_P(4)$1" -> "layers(4)" [label = "Add"]
"emb_P(4)$1" -> "emb_P(4)$0" [label = "Add"]
"emb_P(4)$1" -> "0(4)" [label = "Add"]
"emb_P(4)$1" -> "emb_P(4)$0" [label = "Add"]
"emb_P(4)$1" -> "values(4)" [label = "Add"]
"emb_P(4)$1" -> "emb_P(4)$0" [label = "Add"]
"cnt_P(4)$1" -> "1(4)" [label = "Add"]
"cnt_P(4)$1" -> "cnt_P(4)$0" [label = "Add"]
"emb_A(4)$1" -> "np(4)" [label = "Add"]
"emb_A(4)$1" -> "emb_A(4)$0" [label = "Add"]
"emb_A(4)$1" -> "features(4)$0" [label = "Add"]
"emb_A(4)$1" -> "emb_A(4)$0" [label = "Add"]
"emb_A(4)$1" -> "j(4)" [label = "Add"]
"emb_A(4)$1" -> "emb_A(4)$0" [label = "Add"]
"emb_A(4)$1" -> "layers(4)" [label = "Add"]
"emb_A(4)$1" -> "emb_A(4)$0" [label = "Add"]
"emb_A(4)$1" -> "0(4)" [label = "Add"]
"emb_A(4)$1" -> "emb_A(4)$0" [label = "Add"]
"emb_A(4)$1" -> "values(4)" [label = "Add"]
"emb_A(4)$1" -> "emb_A(4)$0" [label = "Add"]
"cnt_A(4)$1" -> "1(4)" [label = "Add"]
"cnt_A(4)$1" -> "cnt_A(4)$0" [label = "Add"]
"emb_B(4)$1" -> "np(4)" [label = "Add"]
"emb_B(4)$1" -> "emb_B(4)$0" [label = "Add"]
"emb_B(4)$1" -> "features(4)$0" [label = "Add"]
"emb_B(4)$1" -> "emb_B(4)$0" [label = "Add"]
"emb_B(4)$1" -> "j(4)" [label = "Add"]
"emb_B(4)$1" -> "emb_B(4)$0" [label = "Add"]
"emb_B(4)$1" -> "layers(4)" [label = "Add"]
"emb_B(4)$1" -> "emb_B(4)$0" [label = "Add"]
"emb_B(4)$1" -> "0(4)" [label = "Add"]
"emb_B(4)$1" -> "emb_B(4)$0" [label = "Add"]
"emb_B(4)$1" -> "values(4)" [label = "Add"]
"emb_B(4)$1" -> "emb_B(4)$0" [label = "Add"]
"cnt_B(4)$1" -> "1(4)" [label = "Add"]
"cnt_B(4)$1" -> "cnt_B(4)$0" [label = "Add"]
"count_chars(4)$1" -> "count_length_no_special(4)" [label = "Add"]
"count_chars(4)$1" -> "count_chars(4)$0" [label = "Add"]
"count_chars(4)$1" -> "token(4)$0" [label = "Add"]
"count_chars(4)$1" -> "count_chars(4)$0" [label = "Add"]
"emb_A(4)$2" -> "cnt_A(4)$1" [label = "Div"]
"emb_A(4)$2" -> "emb_A(4)$1" [label = "Div"]
"emb_B(4)$2" -> "cnt_B(4)$1" [label = "Div"]
"emb_B(4)$2" -> "emb_B(4)$1" [label = "Div"]
"label(4)$0" -> "Neither(4)" [label = "eq"]
"label(4)$1" -> "A(4)$0" [label = "eq"]
"label(4)$2" -> "B(4)$0" [label = "eq"]
"emb(4)$2" -> "emb(4)$1" [label = "eq"]
"emb(4)$2" -> "[<_ast.Name object at 0x103480950>, <_ast.Name object at 0x103480e50>, <_ast.Name object at 0x103480690>, <_ast.Name object at 0x103480c10>](4)" [label = "eq"]
"print[0]" -> "Started at (0)" [label = "print"]
"print[1]" -> "time(0)" [label = "print"]
"test_data(0)$0" -> "pd(0)" [label = "read_csv"]
"test_data(0)$0" -> "gap-test.tsv(0)" [label = "read_csv"]
"test_data(0)$0" -> "	(0)" [label = "read_csv"]
"test_emb(0)$0" -> "test_data(0)$0" [label = "run_bert"]
"test_emb(0)$1" -> "test_emb(0)$0" [label = "to_json"]
"test_emb(0)$1" -> "contextual_embeddings_gap_test.json(0)" [label = "to_json"]
"validation_data(0)$0" -> "pd(0)" [label = "read_csv"]
"validation_data(0)$0" -> "gap-validation.tsv(0)" [label = "read_csv"]
"validation_data(0)$0" -> "	(0)" [label = "read_csv"]
"validation_emb(0)$0" -> "validation_data(0)$0" [label = "run_bert"]
"validation_emb(0)$1" -> "validation_emb(0)$0" [label = "to_json"]
"validation_emb(0)$1" -> "contextual_embeddings_gap_validation.json(0)" [label = "to_json"]
"development_data(0)$0" -> "pd(0)" [label = "read_csv"]
"development_data(0)$0" -> "gap-development.tsv(0)" [label = "read_csv"]
"development_data(0)$0" -> "	(0)" [label = "read_csv"]
"development_emb(0)$0" -> "development_data(0)$0" [label = "run_bert"]
"development_emb(0)$1" -> "development_emb(0)$0" [label = "to_json"]
"development_emb(0)$1" -> "contextual_embeddings_gap_development.json(0)" [label = "to_json"]
"print[0]" -> "Finished at (0)" [label = "print"]
"print[1]" -> "time(0)" [label = "print"]
"dense_layer_sizes(0)$0" -> "[<_ast.Num object at 0x10326b510>](0)" [label = "eq"]
"dropout_rate(0)$0" -> "0.6(0)" [label = "eq"]
"learning_rate(0)$0" -> "0.001(0)" [label = "eq"]
"n_fold(0)$0" -> "5(0)" [label = "eq"]
"batch_size(0)$0" -> "32(0)" [label = "eq"]
"epochs(0)$0" -> "1000(0)" [label = "eq"]
"patience(0)$0" -> "100(0)" [label = "eq"]
"lambd(0)$0" -> "0.1(0)" [label = "eq"]
"input_shape(5)" -> "build_mlp_model[0]" [label = "_argToVar"]
"X_input(5)$0" -> "layers(5)" [label = "Input"]
"X_input(5)$0" -> "input_shape(5)" [label = "Input"]
"X(5)$0" -> "layers(5)" [label = "eq"]
"X(5)$0" -> "dense_layer_sizes(5)" [label = "eq"]
"X(5)$0" -> "0(5)" [label = "eq"]
"X(5)$0" -> "dense0(5)" [label = "eq"]
"X(5)$0" -> "X_input(5)$0" [label = "eq"]
"X(5)$1" -> "layers(5)" [label = "eq"]
"X(5)$1" -> "bn0(5)" [label = "eq"]
"X(5)$1" -> "X(5)$1" [label = "eq"]
"X(5)$2" -> "layers(5)" [label = "eq"]
"X(5)$2" -> "relu(5)" [label = "eq"]
"X(5)$2" -> "X(5)$2" [label = "eq"]
"X(5)$3" -> "layers(5)" [label = "eq"]
"X(5)$3" -> "dropout_rate(5)" [label = "eq"]
"X(5)$3" -> "7(5)" [label = "eq"]
"X(5)$3" -> "X(5)$3" [label = "eq"]
"X(5)$4" -> "layers(5)" [label = "eq"]
"X(5)$4" -> "3(5)" [label = "eq"]
"X(5)$4" -> "output(5)" [label = "eq"]
"X(5)$4" -> "regularizers(5)" [label = "eq"]
"X(5)$4" -> "lambd(5)" [label = "eq"]
"X(5)$4" -> "X(5)$4" [label = "eq"]
"X(5)$5" -> "layers(5)" [label = "eq"]
"X(5)$5" -> "softmax(5)" [label = "eq"]
"X(5)$5" -> "X(5)$5" [label = "eq"]
"model(5)$0" -> "models(5)" [label = "Model"]
"model(5)$0" -> "X_input(5)$0" [label = "Model"]
"model(5)$0" -> "X(5)$5" [label = "Model"]
"model(5)$0" -> "classif_model(5)" [label = "Model"]
"embeddings(6)" -> "parse_json[0]" [label = "_argToVar"]
"embeddings(6)$0" -> "embeddings(6)" [label = "sort_index"]
"X(6)$0" -> "np(6)" [label = "zeros"]
"X(6)$0" -> "len(6)" [label = "zeros"]
"X(6)$0" -> "embeddings(6)$0" [label = "zeros"]
"X(6)$0" -> "3(6)" [label = "zeros"]
"X(6)$0" -> "768(6)" [label = "zeros"]
"Y(6)$0" -> "np(6)" [label = "zeros"]
"Y(6)$0" -> "len(6)" [label = "zeros"]
"Y(6)$0" -> "embeddings(6)$0" [label = "zeros"]
"Y(6)$0" -> "3(6)" [label = "zeros"]
"i(6)" -> "range(6)" [label = "Iter"]
"i(6)" -> "len(6)" [label = "Iter"]
"i(6)" -> "embeddings(6)$0" [label = "Iter"]
"A(6)$0" -> "np(6)" [label = "array"]
"A(6)$0" -> "embeddings(6)$0" [label = "array"]
"A(6)$0" -> "i(6)" [label = "array"]
"A(6)$0" -> "emb_A(6)" [label = "array"]
"B(6)$0" -> "np(6)" [label = "array"]
"B(6)$0" -> "embeddings(6)$0" [label = "array"]
"B(6)$0" -> "i(6)" [label = "array"]
"B(6)$0" -> "emb_B(6)" [label = "array"]
"P(6)$0" -> "np(6)" [label = "array"]
"P(6)$0" -> "embeddings(6)$0" [label = "array"]
"P(6)$0" -> "i(6)" [label = "array"]
"P(6)$0" -> "emb_P(6)" [label = "array"]
"X(6)$1" -> "X(6)$0" [label = "concatenate"]
"X(6)$1" -> "np(6)" [label = "concatenate"]
"X(6)$1" -> "A(6)$0" [label = "concatenate"]
"X(6)$1" -> "B(6)$0" [label = "concatenate"]
"X(6)$1" -> "P(6)$0" [label = "concatenate"]
"i(6)" -> "range(6)" [label = "Iter"]
"i(6)" -> "len(6)" [label = "Iter"]
"i(6)" -> "embeddings(6)$0" [label = "Iter"]
"label(6)$0" -> "embeddings(6)$0" [label = "eq"]
"label(6)$0" -> "i(6)" [label = "eq"]
"label(6)$0" -> "label(6)$0" [label = "eq"]
"Y(6)$1" -> "Y(6)$0" [label = "eq"]
"Y(6)$1" -> "1(6)" [label = "eq"]
"Y(6)$2" -> "Y(6)$1" [label = "eq"]
"Y(6)$2" -> "1(6)" [label = "eq"]
"Y(6)$3" -> "Y(6)$2" [label = "eq"]
"Y(6)$3" -> "1(6)" [label = "eq"]
"development(0)$0" -> "pd(0)" [label = "read_json"]
"development(0)$0" -> "contextual_embeddings_gap_development.json(0)" [label = "read_json"]
"X_development(0)$0" -> "development(0)$0" [label = "parse_json"]
"Y_development(0)$0" -> "development(0)$0" [label = "parse_json"]
"validation(0)$0" -> "pd(0)" [label = "read_json"]
"validation(0)$0" -> "contextual_embeddings_gap_validation.json(0)" [label = "read_json"]
"X_validation(0)$0" -> "validation(0)$0" [label = "parse_json"]
"Y_validation(0)$0" -> "validation(0)$0" [label = "parse_json"]
"test(0)$0" -> "pd(0)" [label = "read_json"]
"test(0)$0" -> "contextual_embeddings_gap_test.json(0)" [label = "read_json"]
"X_test(0)$0" -> "test(0)$0" [label = "parse_json"]
"Y_test(0)$0" -> "test(0)$0" [label = "parse_json"]
"remove_test(0)$0" -> "row(0)" [label = "eq"]
"remove_test(0)$0" -> "row(0)" [label = "eq"]
"remove_test(0)$0" -> "range(0)" [label = "eq"]
"remove_test(0)$0" -> "len(0)" [label = "eq"]
"remove_test(0)$0" -> "X_test(0)$0" [label = "eq"]
"remove_test(0)$0" -> "np(0)" [label = "eq"]
"remove_test(0)$0" -> "np(0)" [label = "eq"]
"remove_test(0)$0" -> "X_test(0)$0" [label = "eq"]
"remove_test(0)$0" -> "row(0)" [label = "eq"]
"X_test(0)$1" -> "np(0)" [label = "delete"]
"X_test(0)$1" -> "X_test(0)$1" [label = "delete"]
"X_test(0)$1" -> "remove_test(0)$0" [label = "delete"]
"X_test(0)$1" -> "0(0)" [label = "delete"]
"Y_test(0)$1" -> "np(0)" [label = "delete"]
"Y_test(0)$1" -> "Y_test(0)$1" [label = "delete"]
"Y_test(0)$1" -> "remove_test(0)$0" [label = "delete"]
"Y_test(0)$1" -> "0(0)" [label = "delete"]
"remove_validation(0)$0" -> "row(0)" [label = "eq"]
"remove_validation(0)$0" -> "row(0)" [label = "eq"]
"remove_validation(0)$0" -> "range(0)" [label = "eq"]
"remove_validation(0)$0" -> "len(0)" [label = "eq"]
"remove_validation(0)$0" -> "X_validation(0)$0" [label = "eq"]
"remove_validation(0)$0" -> "np(0)" [label = "eq"]
"remove_validation(0)$0" -> "np(0)" [label = "eq"]
"remove_validation(0)$0" -> "X_validation(0)$0" [label = "eq"]
"remove_validation(0)$0" -> "row(0)" [label = "eq"]
"X_validation(0)$1" -> "np(0)" [label = "delete"]
"X_validation(0)$1" -> "X_validation(0)$1" [label = "delete"]
"X_validation(0)$1" -> "remove_validation(0)$0" [label = "delete"]
"X_validation(0)$1" -> "0(0)" [label = "delete"]
"Y_validation(0)$1" -> "np(0)" [label = "delete"]
"Y_validation(0)$1" -> "Y_validation(0)$1" [label = "delete"]
"Y_validation(0)$1" -> "remove_validation(0)$0" [label = "delete"]
"Y_validation(0)$1" -> "0(0)" [label = "delete"]
"remove_development(0)$0" -> "row(0)" [label = "eq"]
"remove_development(0)$0" -> "row(0)" [label = "eq"]
"remove_development(0)$0" -> "range(0)" [label = "eq"]
"remove_development(0)$0" -> "len(0)" [label = "eq"]
"remove_development(0)$0" -> "X_development(0)$0" [label = "eq"]
"remove_development(0)$0" -> "np(0)" [label = "eq"]
"remove_development(0)$0" -> "np(0)" [label = "eq"]
"remove_development(0)$0" -> "X_development(0)$0" [label = "eq"]
"remove_development(0)$0" -> "row(0)" [label = "eq"]
"X_development(0)$1" -> "X_development(0)$0" [label = "zeros"]
"X_development(0)$1" -> "np(0)" [label = "zeros"]
"X_development(0)$1" -> "3(0)" [label = "zeros"]
"X_development(0)$1" -> "768(0)" [label = "zeros"]
"X_train(0)$0" -> "np(0)" [label = "concatenate"]
"X_train(0)$0" -> "X_test(0)$1" [label = "concatenate"]
"X_train(0)$0" -> "X_validation(0)$1" [label = "concatenate"]
"X_train(0)$0" -> "0(0)" [label = "concatenate"]
"Y_train(0)$0" -> "np(0)" [label = "concatenate"]
"Y_train(0)$0" -> "Y_test(0)$1" [label = "concatenate"]
"Y_train(0)$0" -> "Y_validation(0)$1" [label = "concatenate"]
"Y_train(0)$0" -> "0(0)" [label = "concatenate"]
"prediction(0)$0" -> "np(0)" [label = "zeros"]
"prediction(0)$0" -> "len(0)" [label = "zeros"]
"prediction(0)$0" -> "X_development(0)$1" [label = "zeros"]
"prediction(0)$0" -> "3(0)" [label = "zeros"]
"folds(0)$0" -> "n_fold(0)$0" [label = "KFold"]
"folds(0)$0" -> "3(0)" [label = "KFold"]
"scores(0)$0" -> "[](0)" [label = "eq"]
"fold_n(0)" -> "enumerate(0)" [label = "Iter"]
"train_index(0)" -> "enumerate(0)" [label = "Iter"]
"valid_index(0)" -> "enumerate(0)" [label = "Iter"]
"fold_n(0)" -> "folds(0)$0" [label = "Iter"]
"train_index(0)" -> "folds(0)$0" [label = "Iter"]
"valid_index(0)" -> "folds(0)$0" [label = "Iter"]
"fold_n(0)" -> "X_train(0)$0" [label = "Iter"]
"train_index(0)" -> "X_train(0)$0" [label = "Iter"]
"valid_index(0)" -> "X_train(0)$0" [label = "Iter"]
"print[0]" -> "Fold(0)" [label = "print"]
"print[1]" -> "fold_n(0)" [label = "print"]
"print[2]" -> "started at(0)" [label = "print"]
"print[3]" -> "time(0)" [label = "print"]
"X_tr(0)$0" -> "X_train(0)$0" [label = "eq"]
"X_val(0)$0" -> "X_train(0)$0" [label = "eq"]
"X_tr(0)$0" -> "train_index(0)" [label = "eq"]
"X_val(0)$0" -> "train_index(0)" [label = "eq"]
"X_tr(0)$0" -> "X_train(0)$0" [label = "eq"]
"X_val(0)$0" -> "X_train(0)$0" [label = "eq"]
"X_tr(0)$0" -> "valid_index(0)" [label = "eq"]
"X_val(0)$0" -> "valid_index(0)" [label = "eq"]
"Y_tr(0)$0" -> "Y_train(0)$0" [label = "eq"]
"Y_val(0)$0" -> "Y_train(0)$0" [label = "eq"]
"Y_tr(0)$0" -> "train_index(0)" [label = "eq"]
"Y_val(0)$0" -> "train_index(0)" [label = "eq"]
"Y_tr(0)$0" -> "Y_train(0)$0" [label = "eq"]
"Y_val(0)$0" -> "Y_train(0)$0" [label = "eq"]
"Y_tr(0)$0" -> "valid_index(0)" [label = "eq"]
"Y_val(0)$0" -> "valid_index(0)" [label = "eq"]
"classif_model(0)$0" -> "[<_ast.Subscript object at 0x1031ef690>](0)" [label = "build_mlp_model"]
"classif_model(0)$1" -> "classif_model(0)$0" [label = "compile"]
"callbacks(0)$0" -> "[<_ast.Call object at 0x1031eff10>](0)" [label = "eq"]
"classif_model(0)$2" -> "classif_model(0)$1" [label = "fit"]
"pred_valid(0)$0" -> "classif_model(0)$2" [label = "predict"]
"pred_valid(0)$0" -> "X_val(0)$0" [label = "predict"]
"pred_valid(0)$0" -> "0(0)" [label = "predict"]
"pred(0)$0" -> "classif_model(0)$2" [label = "predict"]
"pred(0)$0" -> "X_development(0)$1" [label = "predict"]
"pred(0)$0" -> "0(0)" [label = "predict"]
"scores(0)$1" -> "scores(0)$0" [label = "append"]
"scores(0)$1" -> "log_loss(0)" [label = "append"]
"scores(0)$1" -> "Y_val(0)$0" [label = "append"]
"scores(0)$1" -> "pred_valid(0)$0" [label = "append"]
"prediction(0)$1" -> "pred(0)$0" [label = "Add"]
"prediction(0)$1" -> "prediction(0)$0" [label = "Add"]
"prediction(0)$2" -> "n_fold(0)$0" [label = "Div"]
"prediction(0)$2" -> "prediction(0)$1" [label = "Div"]
"print[0]" -> "CV mean score: {0:.4f}, std: {1:.4f}.(0)" [label = "print"]
"print[1]" -> "np(0)" [label = "print"]
"print[2]" -> "scores(0)$1" [label = "print"]
"print[3]" -> "np(0)" [label = "print"]
"print[4]" -> "scores(0)$1" [label = "print"]
"print[0]" -> "scores(0)$1" [label = "print"]
"print[0]" -> "Test score:(0)" [label = "print"]
"print[1]" -> "log_loss(0)" [label = "print"]
"print[2]" -> "Y_development(0)$0" [label = "print"]
"print[3]" -> "prediction(0)$2" [label = "print"]
"submission(0)$0" -> "pd(0)" [label = "read_csv"]
"submission(0)$0" -> "../input/sample_submission_stage_1.csv(0)" [label = "read_csv"]
"submission(0)$0" -> "ID(0)" [label = "read_csv"]
"submission(0)$1" -> "submission(0)$0" [label = "eq"]
"submission(0)$1" -> "prediction(0)$2" [label = "eq"]
"submission(0)$1" -> "0(0)" [label = "eq"]
"submission(0)$2" -> "submission(0)$1" [label = "eq"]
"submission(0)$2" -> "prediction(0)$2" [label = "eq"]
"submission(0)$2" -> "1(0)" [label = "eq"]
"submission(0)$3" -> "submission(0)$2" [label = "eq"]
"submission(0)$3" -> "prediction(0)$2" [label = "eq"]
"submission(0)$3" -> "2(0)" [label = "eq"]
"submission(0)$4" -> "submission(0)$3" [label = "to_csv"]
"submission(0)$4" -> "submission_bert.csv(0)" [label = "to_csv"]
}