digraph { 
"self(1)" -> "__init__[0]" [label = "_argToVar"]
"self(1)$0" -> "self(1)" [label = "full"]
"self(1)$0" -> "np(1)" [label = "full"]
"self(1)$0" -> "3(1)" [label = "full"]
"self(1)$0" -> "3(1)" [label = "full"]
"self(1)$0" -> "2(1)" [label = "full"]
"self(2)" -> "toss[0]" [label = "_argToVar"]
"turn(2)$0" -> "np(2)" [label = "randint"]
"turn(2)$0" -> "0(2)" [label = "randint"]
"turn(2)$0" -> "2(2)" [label = "randint"]
"turn(2)$0" -> "1(2)" [label = "randint"]
"self(2)$0" -> "self(2)" [label = "eq"]
"self(2)$0" -> "0(2)" [label = "eq"]
"self(2)$1" -> "self(2)$0" [label = "eq"]
"self(2)$1" -> "1(2)" [label = "eq"]
"self(3)" -> "move[0]" [label = "_argToVar"]
"player(3)" -> "move[1]" [label = "_argToVar"]
"coord(3)" -> "move[2]" [label = "_argToVar"]
"self(3)$0" -> "self(3)" [label = "eq"]
"self(3)$0" -> "player(3)" [label = "eq"]
"self(3)$1" -> "self(3)$0" [label = "Sub"]
"self(3)$1" -> "1(3)" [label = "Sub"]
"self(3)$1" -> "player(3)" [label = "Sub"]
"self(4)" -> "game_status[0]" [label = "_argToVar"]
"i(4)" -> "range(4)" [label = "Iter"]
"i(4)" -> "self(4)" [label = "Iter"]
"i(4)" -> "0(4)" [label = "Iter"]
"j(4)" -> "range(4)" [label = "Iter"]
"j(4)" -> "self(4)" [label = "Iter"]
"j(4)" -> "1(4)" [label = "Iter"]
"game(0)$0" -> "game(0)" [label = "toss"]
"print[0]" -> "Player (0)" [label = "print"]
"print[1]" -> "game(0)$0" [label = "print"]
"print[2]" -> " has won the toss(0)" [label = "print"]
"print[0]" -> "Initial board state 
(0)" [label = "print"]
"print[1]" -> "game(0)$0" [label = "print"]
"print[0]" -> "Let first player place their mark on 0,0(0)" [label = "print"]
"game_status(0)$0" -> "game(0)$0" [label = "move"]
"board(0)$0" -> "game(0)$0" [label = "move"]
"game_status(0)$0" -> "game(0)$0" [label = "move"]
"board(0)$0" -> "game(0)$0" [label = "move"]
"game_status(0)$0" -> "0(0)" [label = "move"]
"board(0)$0" -> "0(0)" [label = "move"]
"game_status(0)$0" -> "0(0)" [label = "move"]
"board(0)$0" -> "0(0)" [label = "move"]
"print[0]" -> "New Board State: 
(0)" [label = "print"]
"print[1]" -> "board(0)$0" [label = "print"]
"print[0]" -> "Let second player place their mark on 0,1(0)" [label = "print"]
"game_status(0)$1" -> "game(0)$0" [label = "move"]
"board(0)$1" -> "game(0)$0" [label = "move"]
"game_status(0)$1" -> "game(0)$0" [label = "move"]
"board(0)$1" -> "game(0)$0" [label = "move"]
"game_status(0)$1" -> "0(0)" [label = "move"]
"board(0)$1" -> "0(0)" [label = "move"]
"game_status(0)$1" -> "1(0)" [label = "move"]
"board(0)$1" -> "1(0)" [label = "move"]
"print[0]" -> "New Board State: 
(0)" [label = "print"]
"print[1]" -> "board(0)$1" [label = "print"]
"print[0]" -> "Let first player place their mark on 1,1(0)" [label = "print"]
"game_status(0)$2" -> "game(0)$0" [label = "move"]
"board(0)$2" -> "game(0)$0" [label = "move"]
"game_status(0)$2" -> "game(0)$0" [label = "move"]
"board(0)$2" -> "game(0)$0" [label = "move"]
"game_status(0)$2" -> "1(0)" [label = "move"]
"board(0)$2" -> "1(0)" [label = "move"]
"game_status(0)$2" -> "1(0)" [label = "move"]
"board(0)$2" -> "1(0)" [label = "move"]
"print[0]" -> "New Board State: 
(0)" [label = "print"]
"print[1]" -> "board(0)$2" [label = "print"]
"print[0]" -> "Let second player place their mark on 0,2(0)" [label = "print"]
"game_status(0)$3" -> "game(0)$0" [label = "move"]
"board(0)$3" -> "game(0)$0" [label = "move"]
"game_status(0)$3" -> "game(0)$0" [label = "move"]
"board(0)$3" -> "game(0)$0" [label = "move"]
"game_status(0)$3" -> "0(0)" [label = "move"]
"board(0)$3" -> "0(0)" [label = "move"]
"game_status(0)$3" -> "2(0)" [label = "move"]
"board(0)$3" -> "2(0)" [label = "move"]
"print[0]" -> "New Board State: 
(0)" [label = "print"]
"print[1]" -> "board(0)$3" [label = "print"]
"print[0]" -> "Let first player place their mark on 2,2(0)" [label = "print"]
"game_status(0)$4" -> "game(0)$0" [label = "move"]
"board(0)$4" -> "game(0)$0" [label = "move"]
"game_status(0)$4" -> "game(0)$0" [label = "move"]
"board(0)$4" -> "game(0)$0" [label = "move"]
"game_status(0)$4" -> "2(0)" [label = "move"]
"board(0)$4" -> "2(0)" [label = "move"]
"game_status(0)$4" -> "2(0)" [label = "move"]
"board(0)$4" -> "2(0)" [label = "move"]
"print[0]" -> "New Board State: 
(0)" [label = "print"]
"print[1]" -> "board(0)$4" [label = "print"]
"print[0]" -> "Player (0)" [label = "print"]
"print[1]" -> "1(0)" [label = "print"]
"print[2]" -> "game(0)$0" [label = "print"]
"print[3]" -> " Has (0)" [label = "print"]
"print[4]" -> "game_status(0)$4" [label = "print"]
"current_board_state(5)" -> "legal_moves_generator[0]" [label = "_argToVar"]
"turn_monitor(5)" -> "legal_moves_generator[1]" [label = "_argToVar"]
"i(5)" -> "range(5)" [label = "Iter"]
"i(5)" -> "current_board_state(5)" [label = "Iter"]
"i(5)" -> "0(5)" [label = "Iter"]
"j(5)" -> "range(5)" [label = "Iter"]
"j(5)" -> "current_board_state(5)" [label = "Iter"]
"j(5)" -> "1(5)" [label = "Iter"]
"board_state_copy(5)$0" -> "current_board_state(5)" [label = "copy"]
"board_state_copy(5)$1" -> "board_state_copy(5)$0" [label = "eq"]
"board_state_copy(5)$1" -> "turn_monitor(5)" [label = "eq"]
"legal_moves_dict(5)$0" -> "legal_moves_dict(5)" [label = "flatten"]
"legal_moves_dict(5)$0" -> "board_state_copy(5)$1" [label = "flatten"]
"game(0)$1" -> "game(0)$0" [label = "toss"]
"print[0]" -> "Player (0)" [label = "print"]
"print[1]" -> "game(0)$1" [label = "print"]
"print[2]" -> " has won the toss(0)" [label = "print"]
"print[0]" -> "Current board state 
(0)" [label = "print"]
"print[1]" -> "game(0)$1" [label = "print"]
"legal_moves_dict(0)$0" -> "game(0)$1" [label = "legal_moves_generator"]
"legal_moves_dict(0)$0" -> "game(0)$1" [label = "legal_moves_generator"]
"print[0]" -> "Dictionary of Possible Next Legal Moves:(0)" [label = "print"]
"pprint(0)$0" -> "pprint(0)" [label = "pprint"]
"pprint(0)$0" -> "legal_moves_dict(0)$0" [label = "pprint"]
"model(0)$0" -> "model(0)" [label = "add"]
"model(0)$0" -> "Dense(0)" [label = "add"]
"model(0)$0" -> "18(0)" [label = "add"]
"model(0)$0" -> "9(0)" [label = "add"]
"model(0)$0" -> "normal(0)" [label = "add"]
"model(0)$0" -> "relu(0)" [label = "add"]
"model(0)$1" -> "model(0)$0" [label = "add"]
"model(0)$1" -> "Dropout(0)" [label = "add"]
"model(0)$1" -> "0.1(0)" [label = "add"]
"model(0)$2" -> "model(0)$1" [label = "add"]
"model(0)$2" -> "Dense(0)" [label = "add"]
"model(0)$2" -> "9(0)" [label = "add"]
"model(0)$2" -> "normal(0)" [label = "add"]
"model(0)$2" -> "relu(0)" [label = "add"]
"model(0)$3" -> "model(0)$2" [label = "add"]
"model(0)$3" -> "Dropout(0)" [label = "add"]
"model(0)$3" -> "0.1(0)" [label = "add"]
"model(0)$4" -> "model(0)$3" [label = "add"]
"model(0)$4" -> "Dense(0)" [label = "add"]
"model(0)$4" -> "1(0)" [label = "add"]
"model(0)$4" -> "normal(0)" [label = "add"]
"learning_rate(0)$0" -> "0.001(0)" [label = "eq"]
"momentum(0)$0" -> "0.8(0)" [label = "eq"]
"sgd(0)$0" -> "learning_rate(0)$0" [label = "SGD"]
"sgd(0)$0" -> "momentum(0)$0" [label = "SGD"]
"model(0)$5" -> "model(0)$4" [label = "compile"]
"model(0)$6" -> "model(0)$5" [label = "summary"]
"model(6)" -> "move_selector[0]" [label = "_argToVar"]
"current_board_state(6)" -> "move_selector[1]" [label = "_argToVar"]
"turn_monitor(6)" -> "move_selector[2]" [label = "_argToVar"]
"legal_moves_dict(6)$0" -> "current_board_state(6)" [label = "legal_moves_generator"]
"legal_moves_dict(6)$0" -> "turn_monitor(6)" [label = "legal_moves_generator"]
"legal_move_coord(6)" -> "legal_moves_dict(6)$0" [label = "Iter"]
"score(6)$0" -> "model(6)" [label = "predict"]
"score(6)$0" -> "legal_moves_dict(6)$0" [label = "predict"]
"score(6)$0" -> "legal_move_coord(6)" [label = "predict"]
"score(6)$0" -> "1(6)" [label = "predict"]
"score(6)$0" -> "9(6)" [label = "predict"]
"tracker(6)$0" -> "tracker(6)" [label = "eq"]
"tracker(6)$0" -> "score(6)$0" [label = "eq"]
"selected_move(6)$0" -> "tracker(6)$0" [label = "max"]
"selected_move(6)$0" -> "tracker(6)$0" [label = "max"]
"new_board_state(6)$0" -> "legal_moves_dict(6)$0" [label = "eq"]
"new_board_state(6)$0" -> "selected_move(6)$0" [label = "eq"]
"score(6)$1" -> "tracker(6)$0" [label = "eq"]
"score(6)$1" -> "selected_move(6)$0" [label = "eq"]
"game(0)$2" -> "game(0)$1" [label = "toss"]
"print[0]" -> "Player assigned mark 1(0)" [label = "print"]
"print[1]" -> "game(0)$2" [label = "print"]
"print[2]" -> " won the toss(0)" [label = "print"]
"print[0]" -> "Initial board state:(0)" [label = "print"]
"print[0]" -> "game(0)$2" [label = "print"]
"selected_move(0)$0" -> "model(0)$6" [label = "move_selector"]
"new_board_state(0)$0" -> "model(0)$6" [label = "move_selector"]
"score(0)$0" -> "model(0)$6" [label = "move_selector"]
"selected_move(0)$0" -> "game(0)$2" [label = "move_selector"]
"new_board_state(0)$0" -> "game(0)$2" [label = "move_selector"]
"score(0)$0" -> "game(0)$2" [label = "move_selector"]
"selected_move(0)$0" -> "game(0)$2" [label = "move_selector"]
"new_board_state(0)$0" -> "game(0)$2" [label = "move_selector"]
"score(0)$0" -> "game(0)$2" [label = "move_selector"]
"print[0]" -> "Selected move: (0)" [label = "print"]
"print[1]" -> "selected_move(0)$0" [label = "print"]
"print[0]" -> "Resulting new board state: (0)" [label = "print"]
"print[1]" -> "new_board_state(0)$0" [label = "print"]
"print[0]" -> "Score assigned to above board state by Evaluator(model): (0)" [label = "print"]
"print[1]" -> "score(0)$0" [label = "print"]
"current_board_state(7)" -> "row_winning_move_check[0]" [label = "_argToVar"]
"legal_moves_dict(7)" -> "row_winning_move_check[1]" [label = "_argToVar"]
"turn_monitor(7)" -> "row_winning_move_check[2]" [label = "_argToVar"]
"legal_move_coords(7)$0" -> "legal_moves_dict(7)" [label = "list"]
"random(7)$0" -> "random(7)" [label = "shuffle"]
"random(7)$0" -> "legal_move_coords(7)$0" [label = "shuffle"]
"legal_move_coord(7)" -> "legal_move_coords(7)$0" [label = "Iter"]
"current_board_state_copy(7)$0" -> "current_board_state(7)" [label = "copy"]
"current_board_state_copy(7)$1" -> "current_board_state_copy(7)$0" [label = "eq"]
"current_board_state_copy(7)$1" -> "turn_monitor(7)" [label = "eq"]
"i(7)" -> "range(7)" [label = "Iter"]
"i(7)" -> "current_board_state_copy(7)$1" [label = "Iter"]
"i(7)" -> "0(7)" [label = "Iter"]
"selected_move(7)$0" -> "legal_move_coord(7)" [label = "eq"]
"current_board_state(8)" -> "column_winning_move_check[0]" [label = "_argToVar"]
"legal_moves_dict(8)" -> "column_winning_move_check[1]" [label = "_argToVar"]
"turn_monitor(8)" -> "column_winning_move_check[2]" [label = "_argToVar"]
"legal_move_coords(8)$0" -> "legal_moves_dict(8)" [label = "list"]
"random(8)$0" -> "random(8)" [label = "shuffle"]
"random(8)$0" -> "legal_move_coords(8)$0" [label = "shuffle"]
"legal_move_coord(8)" -> "legal_move_coords(8)$0" [label = "Iter"]
"current_board_state_copy(8)$0" -> "current_board_state(8)" [label = "copy"]
"current_board_state_copy(8)$1" -> "current_board_state_copy(8)$0" [label = "eq"]
"current_board_state_copy(8)$1" -> "turn_monitor(8)" [label = "eq"]
"j(8)" -> "range(8)" [label = "Iter"]
"j(8)" -> "current_board_state_copy(8)$1" [label = "Iter"]
"j(8)" -> "1(8)" [label = "Iter"]
"selected_move(8)$0" -> "legal_move_coord(8)" [label = "eq"]
"current_board_state(9)" -> "diag1_winning_move_check[0]" [label = "_argToVar"]
"legal_moves_dict(9)" -> "diag1_winning_move_check[1]" [label = "_argToVar"]
"turn_monitor(9)" -> "diag1_winning_move_check[2]" [label = "_argToVar"]
"legal_move_coords(9)$0" -> "legal_moves_dict(9)" [label = "list"]
"random(9)$0" -> "random(9)" [label = "shuffle"]
"random(9)$0" -> "legal_move_coords(9)$0" [label = "shuffle"]
"legal_move_coord(9)" -> "legal_move_coords(9)$0" [label = "Iter"]
"current_board_state_copy(9)$0" -> "current_board_state(9)" [label = "copy"]
"current_board_state_copy(9)$1" -> "current_board_state_copy(9)$0" [label = "eq"]
"current_board_state_copy(9)$1" -> "turn_monitor(9)" [label = "eq"]
"selected_move(9)$0" -> "legal_move_coord(9)" [label = "eq"]
"current_board_state(10)" -> "diag2_winning_move_check[0]" [label = "_argToVar"]
"legal_moves_dict(10)" -> "diag2_winning_move_check[1]" [label = "_argToVar"]
"turn_monitor(10)" -> "diag2_winning_move_check[2]" [label = "_argToVar"]
"legal_move_coords(10)$0" -> "legal_moves_dict(10)" [label = "list"]
"random(10)$0" -> "random(10)" [label = "shuffle"]
"random(10)$0" -> "legal_move_coords(10)$0" [label = "shuffle"]
"legal_move_coord(10)" -> "legal_move_coords(10)$0" [label = "Iter"]
"current_board_state_copy(10)$0" -> "current_board_state(10)" [label = "copy"]
"current_board_state_copy(10)$1" -> "current_board_state_copy(10)$0" [label = "eq"]
"current_board_state_copy(10)$1" -> "turn_monitor(10)" [label = "eq"]
"selected_move(10)$0" -> "legal_move_coord(10)" [label = "eq"]
"current_board_state(11)" -> "row_block_move_check[0]" [label = "_argToVar"]
"legal_moves_dict(11)" -> "row_block_move_check[1]" [label = "_argToVar"]
"turn_monitor(11)" -> "row_block_move_check[2]" [label = "_argToVar"]
"legal_move_coords(11)$0" -> "legal_moves_dict(11)" [label = "list"]
"random(11)$0" -> "random(11)" [label = "shuffle"]
"random(11)$0" -> "legal_move_coords(11)$0" [label = "shuffle"]
"legal_move_coord(11)" -> "legal_move_coords(11)$0" [label = "Iter"]
"current_board_state_copy(11)$0" -> "current_board_state(11)" [label = "copy"]
"current_board_state_copy(11)$1" -> "current_board_state_copy(11)$0" [label = "eq"]
"current_board_state_copy(11)$1" -> "turn_monitor(11)" [label = "eq"]
"i(11)" -> "range(11)" [label = "Iter"]
"i(11)" -> "current_board_state_copy(11)$1" [label = "Iter"]
"i(11)" -> "0(11)" [label = "Iter"]
"selected_move(11)$0" -> "legal_move_coord(11)" [label = "eq"]
"current_board_state(12)" -> "column_block_move_check[0]" [label = "_argToVar"]
"legal_moves_dict(12)" -> "column_block_move_check[1]" [label = "_argToVar"]
"turn_monitor(12)" -> "column_block_move_check[2]" [label = "_argToVar"]
"legal_move_coords(12)$0" -> "legal_moves_dict(12)" [label = "list"]
"random(12)$0" -> "random(12)" [label = "shuffle"]
"random(12)$0" -> "legal_move_coords(12)$0" [label = "shuffle"]
"legal_move_coord(12)" -> "legal_move_coords(12)$0" [label = "Iter"]
"current_board_state_copy(12)$0" -> "current_board_state(12)" [label = "copy"]
"current_board_state_copy(12)$1" -> "current_board_state_copy(12)$0" [label = "eq"]
"current_board_state_copy(12)$1" -> "turn_monitor(12)" [label = "eq"]
"j(12)" -> "range(12)" [label = "Iter"]
"j(12)" -> "current_board_state_copy(12)$1" [label = "Iter"]
"j(12)" -> "1(12)" [label = "Iter"]
"selected_move(12)$0" -> "legal_move_coord(12)" [label = "eq"]
"current_board_state(13)" -> "diag1_block_move_check[0]" [label = "_argToVar"]
"legal_moves_dict(13)" -> "diag1_block_move_check[1]" [label = "_argToVar"]
"turn_monitor(13)" -> "diag1_block_move_check[2]" [label = "_argToVar"]
"legal_move_coords(13)$0" -> "legal_moves_dict(13)" [label = "list"]
"random(13)$0" -> "random(13)" [label = "shuffle"]
"random(13)$0" -> "legal_move_coords(13)$0" [label = "shuffle"]
"legal_move_coord(13)" -> "legal_move_coords(13)$0" [label = "Iter"]
"current_board_state_copy(13)$0" -> "current_board_state(13)" [label = "copy"]
"current_board_state_copy(13)$1" -> "current_board_state_copy(13)$0" [label = "eq"]
"current_board_state_copy(13)$1" -> "turn_monitor(13)" [label = "eq"]
"selected_move(13)$0" -> "legal_move_coord(13)" [label = "eq"]
"current_board_state(14)" -> "diag2_block_move_check[0]" [label = "_argToVar"]
"legal_moves_dict(14)" -> "diag2_block_move_check[1]" [label = "_argToVar"]
"turn_monitor(14)" -> "diag2_block_move_check[2]" [label = "_argToVar"]
"legal_move_coords(14)$0" -> "legal_moves_dict(14)" [label = "list"]
"random(14)$0" -> "random(14)" [label = "shuffle"]
"random(14)$0" -> "legal_move_coords(14)$0" [label = "shuffle"]
"legal_move_coord(14)" -> "legal_move_coords(14)$0" [label = "Iter"]
"current_board_state_copy(14)$0" -> "current_board_state(14)" [label = "copy"]
"current_board_state_copy(14)$1" -> "current_board_state_copy(14)$0" [label = "eq"]
"current_board_state_copy(14)$1" -> "turn_monitor(14)" [label = "eq"]
"selected_move(14)$0" -> "legal_move_coord(14)" [label = "eq"]
"current_board_state(15)" -> "row_second_move_check[0]" [label = "_argToVar"]
"legal_moves_dict(15)" -> "row_second_move_check[1]" [label = "_argToVar"]
"turn_monitor(15)" -> "row_second_move_check[2]" [label = "_argToVar"]
"legal_move_coords(15)$0" -> "legal_moves_dict(15)" [label = "list"]
"random(15)$0" -> "random(15)" [label = "shuffle"]
"random(15)$0" -> "legal_move_coords(15)$0" [label = "shuffle"]
"legal_move_coord(15)" -> "legal_move_coords(15)$0" [label = "Iter"]
"current_board_state_copy(15)$0" -> "current_board_state(15)" [label = "copy"]
"current_board_state_copy(15)$1" -> "current_board_state_copy(15)$0" [label = "eq"]
"current_board_state_copy(15)$1" -> "turn_monitor(15)" [label = "eq"]
"i(15)" -> "range(15)" [label = "Iter"]
"i(15)" -> "current_board_state_copy(15)$1" [label = "Iter"]
"i(15)" -> "0(15)" [label = "Iter"]
"selected_move(15)$0" -> "legal_move_coord(15)" [label = "eq"]
"current_board_state(16)" -> "column_second_move_check[0]" [label = "_argToVar"]
"legal_moves_dict(16)" -> "column_second_move_check[1]" [label = "_argToVar"]
"turn_monitor(16)" -> "column_second_move_check[2]" [label = "_argToVar"]
"legal_move_coords(16)$0" -> "legal_moves_dict(16)" [label = "list"]
"random(16)$0" -> "random(16)" [label = "shuffle"]
"random(16)$0" -> "legal_move_coords(16)$0" [label = "shuffle"]
"legal_move_coord(16)" -> "legal_move_coords(16)$0" [label = "Iter"]
"current_board_state_copy(16)$0" -> "current_board_state(16)" [label = "copy"]
"current_board_state_copy(16)$1" -> "current_board_state_copy(16)$0" [label = "eq"]
"current_board_state_copy(16)$1" -> "turn_monitor(16)" [label = "eq"]
"j(16)" -> "range(16)" [label = "Iter"]
"j(16)" -> "current_board_state_copy(16)$1" [label = "Iter"]
"j(16)" -> "1(16)" [label = "Iter"]
"selected_move(16)$0" -> "legal_move_coord(16)" [label = "eq"]
"current_board_state(17)" -> "diag1_second_move_check[0]" [label = "_argToVar"]
"legal_moves_dict(17)" -> "diag1_second_move_check[1]" [label = "_argToVar"]
"turn_monitor(17)" -> "diag1_second_move_check[2]" [label = "_argToVar"]
"legal_move_coords(17)$0" -> "legal_moves_dict(17)" [label = "list"]
"random(17)$0" -> "random(17)" [label = "shuffle"]
"random(17)$0" -> "legal_move_coords(17)$0" [label = "shuffle"]
"legal_move_coord(17)" -> "legal_move_coords(17)$0" [label = "Iter"]
"current_board_state_copy(17)$0" -> "current_board_state(17)" [label = "copy"]
"current_board_state_copy(17)$1" -> "current_board_state_copy(17)$0" [label = "eq"]
"current_board_state_copy(17)$1" -> "turn_monitor(17)" [label = "eq"]
"selected_move(17)$0" -> "legal_move_coord(17)" [label = "eq"]
"current_board_state(18)" -> "diag2_second_move_check[0]" [label = "_argToVar"]
"legal_moves_dict(18)" -> "diag2_second_move_check[1]" [label = "_argToVar"]
"turn_monitor(18)" -> "diag2_second_move_check[2]" [label = "_argToVar"]
"legal_move_coords(18)$0" -> "legal_moves_dict(18)" [label = "list"]
"random(18)$0" -> "random(18)" [label = "shuffle"]
"random(18)$0" -> "legal_move_coords(18)$0" [label = "shuffle"]
"legal_move_coord(18)" -> "legal_move_coords(18)$0" [label = "Iter"]
"current_board_state_copy(18)$0" -> "current_board_state(18)" [label = "copy"]
"current_board_state_copy(18)$1" -> "current_board_state_copy(18)$0" [label = "eq"]
"current_board_state_copy(18)$1" -> "turn_monitor(18)" [label = "eq"]
"selected_move(18)$0" -> "legal_move_coord(18)" [label = "eq"]
"current_board_state(19)" -> "opponent_move_selector[0]" [label = "_argToVar"]
"turn_monitor(19)" -> "opponent_move_selector[1]" [label = "_argToVar"]
"mode(19)" -> "opponent_move_selector[2]" [label = "_argToVar"]
"legal_moves_dict(19)$0" -> "current_board_state(19)" [label = "legal_moves_generator"]
"legal_moves_dict(19)$0" -> "turn_monitor(19)" [label = "legal_moves_generator"]
"winning_move_checks(19)$0" -> "[<_ast.Name object at 0x10caeda10>, <_ast.Name object at 0x10caedd90>, <_ast.Name object at 0x10caedc90>, <_ast.Name object at 0x10caed990>](19)" [label = "eq"]
"block_move_checks(19)$0" -> "[<_ast.Name object at 0x10caede10>, <_ast.Name object at 0x10caeda50>, <_ast.Name object at 0x10caed290>, <_ast.Name object at 0x10caed4d0>](19)" [label = "eq"]
"second_move_checks(19)$0" -> "[<_ast.Name object at 0x10caed890>, <_ast.Name object at 0x10caedb10>, <_ast.Name object at 0x10caede90>, <_ast.Name object at 0x10caed410>](19)" [label = "eq"]
"random(19)$0" -> "random(19)" [label = "shuffle"]
"random(19)$0" -> "winning_move_checks(19)$0" [label = "shuffle"]
"random(19)$1" -> "random(19)$0" [label = "shuffle"]
"random(19)$1" -> "block_move_checks(19)$0" [label = "shuffle"]
"random(19)$2" -> "random(19)$1" [label = "shuffle"]
"random(19)$2" -> "second_move_checks(19)$0" [label = "shuffle"]
"fn(19)" -> "winning_move_checks(19)$0" [label = "Iter"]
"fn(19)" -> "block_move_checks(19)$0" [label = "Iter"]
"fn(19)" -> "second_move_checks(19)$0" [label = "Iter"]
"selected_move(19)$0" -> "random(19)$2" [label = "choice"]
"selected_move(19)$0" -> "list(19)" [label = "choice"]
"selected_move(19)$0" -> "legal_moves_dict(19)$0" [label = "choice"]
"legal_moves_dict(19)$1" -> "current_board_state(19)" [label = "legal_moves_generator"]
"legal_moves_dict(19)$1" -> "turn_monitor(19)" [label = "legal_moves_generator"]
"selected_move(19)$1" -> "random(19)$2" [label = "choice"]
"selected_move(19)$1" -> "list(19)" [label = "choice"]
"selected_move(19)$1" -> "legal_moves_dict(19)$1" [label = "choice"]
"model(20)" -> "train[0]" [label = "_argToVar"]
"mode(20)" -> "train[1]" [label = "_argToVar"]
"print_progress(20)" -> "train[2]" [label = "_argToVar"]
"print[0]" -> "___________________________________________________________________(20)" [label = "print"]
"print[0]" -> "Starting a new game(20)" [label = "print"]
"game(20)$0" -> "game(20)" [label = "toss"]
"scores_list(20)$0" -> "[](20)" [label = "eq"]
"corrected_scores_list(20)$0" -> "[](20)" [label = "eq"]
"new_board_states_list(20)$0" -> "[](20)" [label = "eq"]
"selected_move(20)$0" -> "model(20)" [label = "move_selector"]
"new_board_state(20)$0" -> "model(20)" [label = "move_selector"]
"score(20)$0" -> "model(20)" [label = "move_selector"]
"selected_move(20)$0" -> "game(20)$0" [label = "move_selector"]
"new_board_state(20)$0" -> "game(20)$0" [label = "move_selector"]
"score(20)$0" -> "game(20)$0" [label = "move_selector"]
"selected_move(20)$0" -> "game(20)$0" [label = "move_selector"]
"new_board_state(20)$0" -> "game(20)$0" [label = "move_selector"]
"score(20)$0" -> "game(20)$0" [label = "move_selector"]
"scores_list(20)$1" -> "scores_list(20)$0" [label = "append"]
"scores_list(20)$1" -> "score(20)$0" [label = "append"]
"scores_list(20)$1" -> "0(20)" [label = "append"]
"scores_list(20)$1" -> "0(20)" [label = "append"]
"new_board_states_list(20)$1" -> "new_board_states_list(20)$0" [label = "append"]
"new_board_states_list(20)$1" -> "new_board_state(20)$0" [label = "append"]
"game_status(20)$0" -> "game(20)$0" [label = "move"]
"board(20)$0" -> "game(20)$0" [label = "move"]
"game_status(20)$0" -> "game(20)$0" [label = "move"]
"board(20)$0" -> "game(20)$0" [label = "move"]
"game_status(20)$0" -> "selected_move(20)$0" [label = "move"]
"board(20)$0" -> "selected_move(20)$0" [label = "move"]
"print[0]" -> "Program's Move(20)" [label = "print"]
"print[0]" -> "board(20)$0" [label = "print"]
"print[0]" -> "
(20)" [label = "print"]
"selected_move(20)$1" -> "game(20)$0" [label = "opponent_move_selector"]
"selected_move(20)$1" -> "game(20)$0" [label = "opponent_move_selector"]
"selected_move(20)$1" -> "mode(20)" [label = "opponent_move_selector"]
"game_status(20)$1" -> "game(20)$0" [label = "move"]
"board(20)$1" -> "game(20)$0" [label = "move"]
"game_status(20)$1" -> "game(20)$0" [label = "move"]
"board(20)$1" -> "game(20)$0" [label = "move"]
"game_status(20)$1" -> "selected_move(20)$1" [label = "move"]
"board(20)$1" -> "selected_move(20)$1" [label = "move"]
"print[0]" -> "Opponent's Move(20)" [label = "print"]
"print[0]" -> "board(20)$1" [label = "print"]
"print[0]" -> "
(20)" [label = "print"]
"new_board_states_list(20)$2" -> "new_board_states_list(20)$1" [label = "tuple"]
"new_board_states_list(20)$3" -> "np(20)" [label = "vstack"]
"new_board_states_list(20)$3" -> "new_board_states_list(20)$3" [label = "vstack"]
"corrected_scores_list(20)$1" -> "scores_list(20)$1" [label = "shift"]
"corrected_scores_list(20)$1" -> "1(20)" [label = "shift"]
"corrected_scores_list(20)$1" -> "1.0(20)" [label = "shift"]
"result(20)$0" -> "Won(20)" [label = "eq"]
"corrected_scores_list(20)$2" -> "scores_list(20)$1" [label = "shift"]
"corrected_scores_list(20)$2" -> "1(20)" [label = "shift"]
"corrected_scores_list(20)$2" -> "1.0(20)" [label = "shift"]
"result(20)$1" -> "Lost(20)" [label = "eq"]
"corrected_scores_list(20)$3" -> "scores_list(20)$1" [label = "shift"]
"corrected_scores_list(20)$3" -> "1(20)" [label = "shift"]
"corrected_scores_list(20)$3" -> "0.0(20)" [label = "shift"]
"result(20)$2" -> "Drawn(20)" [label = "eq"]
"print[0]" -> "Program has (20)" [label = "print"]
"print[1]" -> "result(20)$2" [label = "print"]
"print[0]" -> "
 Correcting the Scores and Updating the model weights:(20)" [label = "print"]
"print[0]" -> "___________________________________________________________________
(20)" [label = "print"]
"x(20)$0" -> "new_board_states_list(20)$3" [label = "eq"]
"y(20)$0" -> "corrected_scores_list(20)$3" [label = "eq"]
"a(21)" -> "unison_shuffled_copies[0]" [label = "_argToVar"]
"b(21)" -> "unison_shuffled_copies[1]" [label = "_argToVar"]
"p(21)$0" -> "np(21)" [label = "permutation"]
"p(21)$0" -> "len(21)" [label = "permutation"]
"p(21)$0" -> "a(21)" [label = "permutation"]
"x(20)$1" -> "x(20)$0" [label = "unison_shuffled_copies"]
"y(20)$1" -> "x(20)$0" [label = "unison_shuffled_copies"]
"x(20)$1" -> "y(20)$1" [label = "unison_shuffled_copies"]
"y(20)$1" -> "y(20)$1" [label = "unison_shuffled_copies"]
"x(20)$2" -> "x(20)$1" [label = "reshape"]
"x(20)$2" -> "1(20)" [label = "reshape"]
"x(20)$2" -> "9(20)" [label = "reshape"]
"model(20)$0" -> "model(20)" [label = "fit"]
"model(20)$0" -> "x(20)$2" [label = "fit"]
"model(20)$0" -> "y(20)$1" [label = "fit"]
"updated_model(0)$0" -> "model(0)$6" [label = "train"]
"y(0)$0" -> "model(0)$6" [label = "train"]
"result(0)$0" -> "model(0)$6" [label = "train"]
"updated_model(0)$0" -> "Hard(0)" [label = "train"]
"y(0)$0" -> "Hard(0)" [label = "train"]
"result(0)$0" -> "Hard(0)" [label = "train"]
"game_counter(0)$0" -> "1(0)" [label = "eq"]
"data_for_graph(0)$0" -> "pd(0)" [label = "DataFrame"]
"mode_list(0)$0" -> "[<_ast.Str object at 0x10d895090>, <_ast.Str object at 0x10d895d50>](0)" [label = "eq"]
"mode_selected(0)$0" -> "np(0)" [label = "choice"]
"mode_selected(0)$0" -> "mode_list(0)$0" [label = "choice"]
"mode_selected(0)$0" -> "1(0)" [label = "choice"]
"mode_selected(0)$0" -> "[<_ast.Num object at 0x10d895410>, <_ast.Num object at 0x10d895490>](0)" [label = "choice"]
"model(0)$7" -> "model(0)$6" [label = "train"]
"y(0)$1" -> "model(0)$6" [label = "train"]
"result(0)$1" -> "model(0)$6" [label = "train"]
"model(0)$7" -> "mode_selected(0)$0" [label = "train"]
"y(0)$1" -> "mode_selected(0)$0" [label = "train"]
"result(0)$1" -> "mode_selected(0)$0" [label = "train"]
"model(0)$7" -> "0(0)" [label = "train"]
"y(0)$1" -> "0(0)" [label = "train"]
"result(0)$1" -> "0(0)" [label = "train"]
"data_for_graph(0)$1" -> "data_for_graph(0)$0" [label = "append"]
"data_for_graph(0)$1" -> "game_counter(0)$0" [label = "append"]
"data_for_graph(0)$1" -> "result(0)$1" [label = "append"]
"data_for_graph(0)$1" -> "game_counter(0)$0" [label = "append"]
"data_for_graph(0)$1" -> "result(0)$1" [label = "append"]
"print[0]" -> "Game#: (0)" [label = "print"]
"print[1]" -> "game_counter(0)$0" [label = "print"]
"print[0]" -> "Mode: (0)" [label = "print"]
"print[1]" -> "mode_selected(0)$0" [label = "print"]
"print[2]" -> "0(0)" [label = "print"]
"game_counter(0)$1" -> "1(0)" [label = "Add"]
"game_counter(0)$1" -> "game_counter(0)$0" [label = "Add"]
"bins(0)$0" -> "np(0)" [label = "Mult"]
"bins(0)$0" -> "1(0)" [label = "Mult"]
"bins(0)$0" -> "game_counter(0)$1" [label = "Mult"]
"bins(0)$0" -> "10000(0)" [label = "Mult"]
"bins(0)$0" -> "10000(0)" [label = "Mult"]
"data_for_graph(0)$2" -> "data_for_graph(0)$1" [label = "digitize"]
"data_for_graph(0)$2" -> "np(0)" [label = "digitize"]
"data_for_graph(0)$2" -> "data_for_graph(0)$2" [label = "digitize"]
"data_for_graph(0)$2" -> "game_counter(0)$1" [label = "digitize"]
"data_for_graph(0)$2" -> "bins(0)$0" [label = "digitize"]
"counts(0)$0" -> "data_for_graph(0)$2" [label = "unstack"]
"counts(0)$0" -> "[<_ast.Str object at 0x10ca78290>, <_ast.Str object at 0x10ca78610>](0)" [label = "unstack"]
"ax(0)$0" -> "counts(0)$0" [label = "plot"]
"ax(0)$0" -> "bar(0)" [label = "plot"]
"ax(0)$0" -> "17(0)" [label = "plot"]
"ax(0)$0" -> "5(0)" [label = "plot"]
"ax(0)$1" -> "ax(0)$0" [label = "set_xlabel"]
"ax(0)$1" -> "Count of Games in Bins of 10,000s(0)" [label = "set_xlabel"]
"ax(0)$2" -> "ax(0)$1" [label = "set_ylabel"]
"ax(0)$2" -> "Counts of Draws/Losses/Wins(0)" [label = "set_ylabel"]
"ax(0)$3" -> "ax(0)$2" [label = "set_title"]
"ax(0)$3" -> "Distribution of Results Vs Count of Games Played(0)" [label = "set_title"]
"model(0)$8" -> "model(0)$7" [label = "save"]
"model(0)$8" -> "my_model.h5(0)" [label = "save"]
}