digraph { 
"IPython.display" -> "tensorflow-programming.ipynb" [label = "import"]
"YouTubeVideo" -> "IPython.display" [label = "import"]
"YouTubeVideo(0)" -> "tensorflow-programming.ipynb" [label = "appears"]
"YouTubeVideo(0)" -> "YouTubeVideo" [label = "assign"]
"sDG5tPtsbSA(0)" -> "tensorflow-programming.ipynb" [label = "appears"]
"YouTubeVideo[0]" -> "sDG5tPtsbSA(0)" [label = "YouTubeVideo"]
"800(0)" -> "tensorflow-programming.ipynb" [label = "appears"]
"YouTubeVideo[1]" -> "800(0)" [label = "YouTubeVideo"]
"450(0)" -> "tensorflow-programming.ipynb" [label = "appears"]
"YouTubeVideo[2]" -> "450(0)" [label = "YouTubeVideo"]
"os.path" -> "tensorflow-programming.ipynb" [label = "import"]
"join" -> "os.path" [label = "import"]
"join(0)" -> "tensorflow-programming.ipynb" [label = "appears"]
"join(0)" -> "join" [label = "assign"]
"../input/dog-breed-identification/train/(0)" -> "tensorflow-programming.ipynb" [label = "appears"]
"image_dir(0)$0" -> "../input/dog-breed-identification/train/(0)" [label = "assign"]
"img_paths(0)$0" -> "join(0)" [label = "assign"]
"img_paths(0)$0" -> "image_dir(0)$0" [label = "assign"]
"filename(0)" -> "tensorflow-programming.ipynb" [label = "appears"]
"img_paths(0)$0" -> "filename(0)" [label = "assign"]
"img_paths(0)$0" -> "filename(0)" [label = "assign"]
"[<_ast.Str object at 0x105b20d90>, <_ast.Str object at 0x105b206d0>, <_ast.Str object at 0x105b20cd0>, <_ast.Str object at 0x105b20fd0>](0)" -> "tensorflow-programming.ipynb" [label = "appears"]
"img_paths(0)$0" -> "[<_ast.Str object at 0x105b20d90>, <_ast.Str object at 0x105b206d0>, <_ast.Str object at 0x105b20cd0>, <_ast.Str object at 0x105b20fd0>](0)" [label = "assign"]
"numpy" -> "tensorflow-programming.ipynb" [label = "import"]
"np(0)" -> "tensorflow-programming.ipynb" [label = "appears"]
"np(0)" -> "numpy" [label = "assign"]
"tensorflow.python.keras.applications.resnet50" -> "tensorflow-programming.ipynb" [label = "import"]
"preprocess_input" -> "tensorflow.python.keras.applications.resnet50" [label = "import"]
"preprocess_input(0)" -> "tensorflow-programming.ipynb" [label = "appears"]
"preprocess_input(0)" -> "preprocess_input" [label = "assign"]
"tensorflow.python.keras.preprocessing.image" -> "tensorflow-programming.ipynb" [label = "import"]
"load_img" -> "tensorflow.python.keras.preprocessing.image" [label = "import"]
"load_img(0)" -> "tensorflow-programming.ipynb" [label = "appears"]
"load_img(0)" -> "load_img" [label = "assign"]
"img_to_array" -> "tensorflow.python.keras.preprocessing.image" [label = "import"]
"img_to_array(0)" -> "tensorflow-programming.ipynb" [label = "appears"]
"img_to_array(0)" -> "img_to_array" [label = "assign"]
"224(0)" -> "tensorflow-programming.ipynb" [label = "appears"]
"image_size(0)$0" -> "224(0)" [label = "assign"]
"img_paths(1)" -> "read_and_prep_images[0]" [label = "_argToVar"]
"img_height(1)" -> "read_and_prep_images[1]" [label = "_argToVar"]
"img_width(1)" -> "read_and_prep_images[2]" [label = "_argToVar"]
"imgs(1)$0" -> "load_img(1)" [label = "assign"]
"imgs(1)$0" -> "img_path(1)" [label = "assign"]
"imgs(1)$0" -> "img_height(1)" [label = "assign"]
"imgs(1)$0" -> "img_width(1)" [label = "assign"]
"imgs(1)$0" -> "img_path(1)" [label = "assign"]
"imgs(1)$0" -> "img_paths(1)" [label = "assign"]
"img_array(1)$0" -> "np(1)" [label = "array"]
"img_array(1)$0" -> "img_to_array(1)" [label = "array"]
"img_array(1)$0" -> "img(1)" [label = "array"]
"img_array(1)$0" -> "img(1)" [label = "array"]
"img_array(1)$0" -> "imgs(1)$0" [label = "array"]
"output(1)$0" -> "img_array(1)$0" [label = "preprocess_input"]
"tensorflow.python.keras.applications" -> "tensorflow-programming.ipynb" [label = "import"]
"ResNet50" -> "tensorflow.python.keras.applications" [label = "import"]
"ResNet50(0)" -> "tensorflow-programming.ipynb" [label = "appears"]
"ResNet50(0)" -> "ResNet50" [label = "assign"]
"../input/resnet50/resnet50_weights_tf_dim_ordering_tf_kernels.h5(0)" -> "tensorflow-programming.ipynb" [label = "appears"]
"my_model(0)$0" -> "../input/resnet50/resnet50_weights_tf_dim_ordering_tf_kernels.h5(0)" [label = "ResNet50"]
"test_data(0)$0" -> "img_paths(0)$0" [label = "read_and_prep_images"]
"preds(0)$0" -> "my_model(0)$0" [label = "predict"]
"preds(0)$0" -> "test_data(0)$0" [label = "predict"]
"learntools.deep_learning.decode_predictions" -> "tensorflow-programming.ipynb" [label = "import"]
"decode_predictions" -> "learntools.deep_learning.decode_predictions" [label = "import"]
"decode_predictions(0)" -> "tensorflow-programming.ipynb" [label = "appears"]
"decode_predictions(0)" -> "decode_predictions" [label = "assign"]
"IPython.display" -> "tensorflow-programming.ipynb" [label = "import"]
"Image" -> "IPython.display" [label = "import"]
"Image(0)" -> "tensorflow-programming.ipynb" [label = "appears"]
"Image(0)" -> "Image" [label = "assign"]
"display" -> "IPython.display" [label = "import"]
"display(0)" -> "tensorflow-programming.ipynb" [label = "appears"]
"display(0)" -> "display" [label = "assign"]
"most_likely_labels(0)$0" -> "preds(0)$0" [label = "decode_predictions"]
"3(0)" -> "tensorflow-programming.ipynb" [label = "appears"]
"most_likely_labels(0)$0" -> "3(0)" [label = "decode_predictions"]
"../input/resnet50/imagenet_class_index.json(0)" -> "tensorflow-programming.ipynb" [label = "appears"]
"most_likely_labels(0)$0" -> "../input/resnet50/imagenet_class_index.json(0)" [label = "decode_predictions"]
"enumerate(0)" -> "tensorflow-programming.ipynb" [label = "appears"]
"i(0)" -> "tensorflow-programming.ipynb" [label = "appears"]
"i(0)" -> "enumerate(0)" [label = "Iter"]
"img_path(0)" -> "tensorflow-programming.ipynb" [label = "appears"]
"img_path(0)" -> "enumerate(0)" [label = "Iter"]
"i(0)" -> "img_paths(0)$0" [label = "Iter"]
"img_path(0)" -> "img_paths(0)$0" [label = "Iter"]
"display[0]" -> "Image(0)" [label = "display"]
"display[1]" -> "img_path(0)" [label = "display"]
"print[0]" -> "most_likely_labels(0)$0" [label = "print"]
"print[1]" -> "i(0)" [label = "print"]
}