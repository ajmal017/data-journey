digraph { 
"tensorflow" -> "gan-for-artwork-duplication.ipynb" [label = "import"]
"tf(0)" -> "gan-for-artwork-duplication.ipynb" [label = "appears"]
"tf(0)" -> "tensorflow" [label = "assign"]
"matplotlib.pyplot" -> "gan-for-artwork-duplication.ipynb" [label = "import"]
"plt(0)" -> "gan-for-artwork-duplication.ipynb" [label = "appears"]
"plt(0)" -> "matplotlib.pyplot" [label = "assign"]
"numpy" -> "gan-for-artwork-duplication.ipynb" [label = "import"]
"np(0)" -> "gan-for-artwork-duplication.ipynb" [label = "appears"]
"np(0)" -> "numpy" [label = "assign"]
"pandas" -> "gan-for-artwork-duplication.ipynb" [label = "import"]
"pd(0)" -> "gan-for-artwork-duplication.ipynb" [label = "appears"]
"pd(0)" -> "pandas" [label = "assign"]
"os" -> "gan-for-artwork-duplication.ipynb" [label = "import"]
"os(0)" -> "gan-for-artwork-duplication.ipynb" [label = "appears"]
"os(0)" -> "os" [label = "assign"]
"sys" -> "gan-for-artwork-duplication.ipynb" [label = "import"]
"sys(0)" -> "gan-for-artwork-duplication.ipynb" [label = "appears"]
"sys(0)" -> "sys" [label = "assign"]
"tqdm" -> "gan-for-artwork-duplication.ipynb" [label = "import"]
"tqdm" -> "tqdm" [label = "import"]
"tqdm(0)" -> "gan-for-artwork-duplication.ipynb" [label = "appears"]
"tqdm(0)" -> "tqdm" [label = "assign"]
"skimage.transform" -> "gan-for-artwork-duplication.ipynb" [label = "import"]
"resize" -> "skimage.transform" [label = "import"]
"resize(0)" -> "gan-for-artwork-duplication.ipynb" [label = "appears"]
"resize(0)" -> "resize" [label = "assign"]
"Reading all CSV files...(0)" -> "gan-for-artwork-duplication.ipynb" [label = "appears"]
"print[0]" -> "Reading all CSV files...(0)" [label = "print"]
"../input/best-artworks-of-all-time/(0)" -> "gan-for-artwork-duplication.ipynb" [label = "appears"]
"root_dir(0)$0" -> "../input/best-artworks-of-all-time/(0)" [label = "assign"]
"images_dir(0)$0" -> "root_dir(0)$0" [label = "Add"]
"images/images/(0)" -> "gan-for-artwork-duplication.ipynb" [label = "appears"]
"images_dir(0)$0" -> "images/images/(0)" [label = "Add"]
"df(0)$0" -> "pd(0)" [label = "read_csv"]
"df(0)$0" -> "root_dir(0)$0" [label = "read_csv"]
"artists.csv(0)" -> "gan-for-artwork-duplication.ipynb" [label = "appears"]
"df(0)$0" -> "artists.csv(0)" [label = "read_csv"]
"df(0)$1" -> "df(0)$0" [label = "replace"]
" (0)" -> "gan-for-artwork-duplication.ipynb" [label = "appears"]
"df(0)$1" -> " (0)" [label = "replace"]
"_(0)" -> "gan-for-artwork-duplication.ipynb" [label = "appears"]
"df(0)$1" -> "_(0)" [label = "replace"]
"all_authors(0)$0" -> "df(0)$1" [label = "list"]
"all_paintings(0)$0" -> "df(0)$1" [label = "list"]
"random" -> "gan-for-artwork-duplication.ipynb" [label = "import"]
"choice" -> "random" [label = "import"]
"rc(0)" -> "gan-for-artwork-duplication.ipynb" [label = "appears"]
"rc(0)" -> "choice" [label = "assign"]
"random" -> "gan-for-artwork-duplication.ipynb" [label = "import"]
"randint" -> "random" [label = "import"]
"ri(0)" -> "gan-for-artwork-duplication.ipynb" [label = "appears"]
"ri(0)" -> "randint" [label = "assign"]
"n(1)" -> "read_input[0]" [label = "_argToVar"]
"_(1)" -> "range(1)" [label = "Iter"]
"_(1)" -> "n(1)" [label = "Iter"]
"path(1)$0" -> "nonexistent(1)" [label = "assign"]
"auth(1)$0" -> "all_authors(1)" [label = "rc"]
"n(1)$0" -> "1(1)" [label = "ri"]
"n(1)$0" -> "all_paintings(1)" [label = "ri"]
"n(1)$0" -> "all_authors(1)" [label = "ri"]
"n(1)$0" -> "auth(1)$0" [label = "ri"]
"path(1)$1" -> "images_dir(1)" [label = "Add"]
"path(1)$1" -> "auth(1)$0" [label = "Add"]
"path(1)$1" -> "/(1)" [label = "Add"]
"path(1)$1" -> "auth(1)$0" [label = "Add"]
"path(1)$1" -> "_(1)" [label = "Add"]
"path(1)$1" -> "str(1)" [label = "Add"]
"path(1)$1" -> "n(1)$0" [label = "Add"]
"path(1)$1" -> ".jpg(1)" [label = "Add"]
"print[0]" -> "Current Author: %s	Number: %i(1)" [label = "print"]
"print[1]" -> "auth(1)$0" [label = "print"]
"print[2]" -> "n(1)$0" [label = "print"]
"print[3]" -> "sys(1)" [label = "print"]
"image(1)$0" -> "plt(1)" [label = "imread"]
"image(1)$0" -> "path(1)$1" [label = "imread"]
"new_image(1)$0" -> "image(1)$0" [label = "resize"]
"new_image(1)$0" -> "512(1)" [label = "resize"]
"new_image(1)$0" -> "512(1)" [label = "resize"]
"new_image(1)$1" -> "new_image(1)$0" [label = "Div"]
"new_image(1)$1" -> "256(1)" [label = "Div"]
"tensorflow.keras.models" -> "gan-for-artwork-duplication.ipynb" [label = "import"]
"Model" -> "tensorflow.keras.models" [label = "import"]
"Model(0)" -> "gan-for-artwork-duplication.ipynb" [label = "appears"]
"Model(0)" -> "Model" [label = "assign"]
"Sequential" -> "tensorflow.keras.models" [label = "import"]
"Sequential(0)" -> "gan-for-artwork-duplication.ipynb" [label = "appears"]
"Sequential(0)" -> "Sequential" [label = "assign"]
"tensorflow.keras.layers" -> "gan-for-artwork-duplication.ipynb" [label = "import"]
"Dense" -> "tensorflow.keras.layers" [label = "import"]
"Dense(0)" -> "gan-for-artwork-duplication.ipynb" [label = "appears"]
"Dense(0)" -> "Dense" [label = "assign"]
"Dropout" -> "tensorflow.keras.layers" [label = "import"]
"Dropout(0)" -> "gan-for-artwork-duplication.ipynb" [label = "appears"]
"Dropout(0)" -> "Dropout" [label = "assign"]
"Input" -> "tensorflow.keras.layers" [label = "import"]
"Input(0)" -> "gan-for-artwork-duplication.ipynb" [label = "appears"]
"Input(0)" -> "Input" [label = "assign"]
"LeakyReLU" -> "tensorflow.keras.layers" [label = "import"]
"LeakyReLU(0)" -> "gan-for-artwork-duplication.ipynb" [label = "appears"]
"LeakyReLU(0)" -> "LeakyReLU" [label = "assign"]
"tensorflow.keras.optimizers" -> "gan-for-artwork-duplication.ipynb" [label = "import"]
"Adam" -> "tensorflow.keras.optimizers" [label = "import"]
"Adam(0)" -> "gan-for-artwork-duplication.ipynb" [label = "appears"]
"Adam(0)" -> "Adam" [label = "assign"]
"generator(3)$0" -> "generator(3)" [label = "add"]
"generator(3)$0" -> "Dense(3)" [label = "add"]
"generator(3)$0" -> "256(3)" [label = "add"]
"generator(3)$0" -> "100(3)" [label = "add"]
"generator(3)$1" -> "generator(3)$0" [label = "add"]
"generator(3)$1" -> "LeakyReLU(3)" [label = "add"]
"generator(3)$1" -> "0.2(3)" [label = "add"]
"generator(3)$2" -> "generator(3)$1" [label = "add"]
"generator(3)$2" -> "Dense(3)" [label = "add"]
"generator(3)$2" -> "512(3)" [label = "add"]
"generator(3)$3" -> "generator(3)$2" [label = "add"]
"generator(3)$3" -> "LeakyReLU(3)" [label = "add"]
"generator(3)$3" -> "0.2(3)" [label = "add"]
"generator(3)$4" -> "generator(3)$3" [label = "add"]
"generator(3)$4" -> "Dense(3)" [label = "add"]
"generator(3)$4" -> "512(3)" [label = "add"]
"generator(3)$4" -> "512(3)" [label = "add"]
"generator(3)$4" -> "3(3)" [label = "add"]
"generator(3)$4" -> "sigmoid(3)" [label = "add"]
"generator(3)$5" -> "generator(3)$4" [label = "compile"]
"g(0)" -> "gan-for-artwork-duplication.ipynb" [label = "appears"]
"g(0)$0" -> "g(0)" [label = "summary"]
"discriminator(4)$0" -> "discriminator(4)" [label = "add"]
"discriminator(4)$0" -> "Dense(4)" [label = "add"]
"discriminator(4)$0" -> "512(4)" [label = "add"]
"discriminator(4)$0" -> "512(4)" [label = "add"]
"discriminator(4)$0" -> "512(4)" [label = "add"]
"discriminator(4)$0" -> "3(4)" [label = "add"]
"discriminator(4)$1" -> "discriminator(4)$0" [label = "add"]
"discriminator(4)$1" -> "LeakyReLU(4)" [label = "add"]
"discriminator(4)$1" -> "0.2(4)" [label = "add"]
"discriminator(4)$2" -> "discriminator(4)$1" [label = "add"]
"discriminator(4)$2" -> "Dropout(4)" [label = "add"]
"discriminator(4)$2" -> "0.3(4)" [label = "add"]
"discriminator(4)$3" -> "discriminator(4)$2" [label = "add"]
"discriminator(4)$3" -> "Dense(4)" [label = "add"]
"discriminator(4)$3" -> "256(4)" [label = "add"]
"discriminator(4)$4" -> "discriminator(4)$3" [label = "add"]
"discriminator(4)$4" -> "LeakyReLU(4)" [label = "add"]
"discriminator(4)$4" -> "0.2(4)" [label = "add"]
"discriminator(4)$5" -> "discriminator(4)$4" [label = "add"]
"discriminator(4)$5" -> "Dropout(4)" [label = "add"]
"discriminator(4)$5" -> "0.3(4)" [label = "add"]
"discriminator(4)$6" -> "discriminator(4)$5" [label = "add"]
"discriminator(4)$6" -> "Dense(4)" [label = "add"]
"discriminator(4)$6" -> "128(4)" [label = "add"]
"discriminator(4)$7" -> "discriminator(4)$6" [label = "add"]
"discriminator(4)$7" -> "LeakyReLU(4)" [label = "add"]
"discriminator(4)$7" -> "0.2(4)" [label = "add"]
"discriminator(4)$8" -> "discriminator(4)$7" [label = "add"]
"discriminator(4)$8" -> "Dense(4)" [label = "add"]
"discriminator(4)$8" -> "1(4)" [label = "add"]
"discriminator(4)$8" -> "sigmoid(4)" [label = "add"]
"discriminator(4)$9" -> "discriminator(4)$8" [label = "compile"]
"d(0)" -> "gan-for-artwork-duplication.ipynb" [label = "appears"]
"d(0)$0" -> "d(0)" [label = "summary"]
"discriminator(5)" -> "create_gan[0]" [label = "_argToVar"]
"generator(5)" -> "create_gan[1]" [label = "_argToVar"]
"gan_input(5)$0" -> "100(5)" [label = "Input"]
"x(5)$0" -> "gan_input(5)$0" [label = "generator"]
"gan_output(5)$0" -> "x(5)$0" [label = "discriminator"]
"gan(5)$0" -> "gan_input(5)$0" [label = "Model"]
"gan(5)$0" -> "gan_output(5)$0" [label = "Model"]
"gan(5)$1" -> "gan(5)$0" [label = "compile"]
"test(0)$0" -> "d(0)$0" [label = "create_gan"]
"test(0)$0" -> "g(0)$0" [label = "create_gan"]
"test(0)$1" -> "test(0)$0" [label = "summary"]
"epoch(6)" -> "plot_generated_images[0]" [label = "_argToVar"]
"generator(6)" -> "plot_generated_images[1]" [label = "_argToVar"]
"examples(6)" -> "plot_generated_images[2]" [label = "_argToVar"]
"dim(6)" -> "plot_generated_images[3]" [label = "_argToVar"]
"figsize(6)" -> "plot_generated_images[4]" [label = "_argToVar"]
"noise(6)$0" -> "np(6)" [label = "normal"]
"noise(6)$0" -> "0(6)" [label = "normal"]
"noise(6)$0" -> "1(6)" [label = "normal"]
"noise(6)$0" -> "[<_ast.Name object at 0x105e35b10>, <_ast.Num object at 0x105e35bd0>](6)" [label = "normal"]
"generated_images(6)$0" -> "generator(6)" [label = "predict"]
"generated_images(6)$0" -> "noise(6)$0" [label = "predict"]
"generated_images(6)$1" -> "generated_images(6)$0" [label = "reshape"]
"generated_images(6)$1" -> "examples(6)" [label = "reshape"]
"generated_images(6)$1" -> "512(6)" [label = "reshape"]
"generated_images(6)$1" -> "512(6)" [label = "reshape"]
"generated_images(6)$1" -> "3(6)" [label = "reshape"]
"plt(6)$0" -> "plt(6)" [label = "figure"]
"i(6)" -> "range(6)" [label = "Iter"]
"i(6)" -> "generated_images(6)$1" [label = "Iter"]
"i(6)" -> "0(6)" [label = "Iter"]
"plt(6)$1" -> "plt(6)$0" [label = "subplot"]
"plt(6)$1" -> "dim(6)" [label = "subplot"]
"plt(6)$1" -> "0(6)" [label = "subplot"]
"plt(6)$1" -> "dim(6)" [label = "subplot"]
"plt(6)$1" -> "1(6)" [label = "subplot"]
"plt(6)$1" -> "i(6)" [label = "subplot"]
"plt(6)$1" -> "1(6)" [label = "subplot"]
"plt(6)$2" -> "plt(6)$1" [label = "imshow"]
"plt(6)$2" -> "generated_images(6)$1" [label = "imshow"]
"plt(6)$2" -> "i(6)" [label = "imshow"]
"plt(6)$3" -> "plt(6)$2" [label = "axis"]
"plt(6)$3" -> "off(6)" [label = "axis"]
"plt(6)$4" -> "plt(6)$3" [label = "tight_layout"]
"plt(6)$5" -> "plt(6)$4" [label = "savefig"]
"plt(6)$5" -> "gan_generated_image %d.png(6)" [label = "savefig"]
"plt(6)$5" -> "epoch(6)" [label = "savefig"]
"n(7)" -> "load_data[0]" [label = "_argToVar"]
"x_train(7)$0" -> "np(7)" [label = "array"]
"x_train(7)$0" -> "x(7)" [label = "array"]
"x_train(7)$0" -> "x(7)" [label = "array"]
"x_train(7)$0" -> "read_input(7)" [label = "array"]
"x_train(7)$0" -> "n(7)" [label = "array"]
"y_train(7)$0" -> "np(7)" [label = "array"]
"y_train(7)$0" -> "1(7)" [label = "array"]
"y_train(7)$0" -> "x(7)" [label = "array"]
"y_train(7)$0" -> "range(7)" [label = "array"]
"y_train(7)$0" -> "n(7)" [label = "array"]
"epochs(8)" -> "training[0]" [label = "_argToVar"]
"batch_size(8)" -> "training[1]" [label = "_argToVar"]
"gan(8)$0" -> "discriminator(8)" [label = "create_gan"]
"gan(8)$0" -> "generator(8)" [label = "create_gan"]
"e(8)" -> "range(8)" [label = "Iter"]
"e(8)" -> "1(8)" [label = "Iter"]
"e(8)" -> "epochs(8)" [label = "Iter"]
"e(8)" -> "1(8)" [label = "Iter"]
"print[0]" -> "Epoch %d(8)" [label = "print"]
"print[1]" -> "e(8)" [label = "print"]
"X_train(8)$0" -> "batch_size(8)" [label = "load_data"]
"y_train(8)$0" -> "batch_size(8)" [label = "load_data"]
"batch_count(8)$0" -> "X_train(8)$0" [label = "Div"]
"batch_count(8)$0" -> "0(8)" [label = "Div"]
"batch_count(8)$0" -> "batch_size(8)" [label = "Div"]
"_(8)" -> "tqdm(8)" [label = "Iter"]
"_(8)" -> "range(8)" [label = "Iter"]
"_(8)" -> "batch_size(8)" [label = "Iter"]
"noise(8)$0" -> "np(8)" [label = "normal"]
"noise(8)$0" -> "0(8)" [label = "normal"]
"noise(8)$0" -> "1(8)" [label = "normal"]
"noise(8)$0" -> "[<_ast.Name object at 0x105acc590>, <_ast.Num object at 0x105acc250>](8)" [label = "normal"]
"generated_images(8)$0" -> "generator(8)" [label = "predict"]
"generated_images(8)$0" -> "noise(8)$0" [label = "predict"]
"image_batch(8)$0" -> "X_train(8)$0" [label = "assign"]
"print[0]" -> "Error in shape!(8)" [label = "print"]
"image_batch(8)$1" -> "generated_images(8)$0" [label = "assign"]
"X(8)$0" -> "np(8)" [label = "concatenate"]
"X(8)$0" -> "[<_ast.Name object at 0x105b1a2d0>, <_ast.Name object at 0x105b1ae10>](8)" [label = "concatenate"]
"y_dis(8)$0" -> "np(8)" [label = "zeros"]
"y_dis(8)$0" -> "2(8)" [label = "zeros"]
"y_dis(8)$0" -> "batch_size(8)" [label = "zeros"]
"y_dis(8)$1" -> "y_dis(8)$0" [label = "assign"]
"y_dis(8)$1" -> "1.0(8)" [label = "assign"]
"discriminator(8)$0" -> "discriminator(8)" [label = "train_on_batch"]
"discriminator(8)$0" -> "X(8)$0" [label = "train_on_batch"]
"discriminator(8)$0" -> "y_dis(8)$1" [label = "train_on_batch"]
"noise(8)$1" -> "np(8)" [label = "normal"]
"noise(8)$1" -> "0(8)" [label = "normal"]
"noise(8)$1" -> "1(8)" [label = "normal"]
"noise(8)$1" -> "[<_ast.Name object at 0x105b2cfd0>, <_ast.Num object at 0x105b2c690>](8)" [label = "normal"]
"y_gen(8)$0" -> "np(8)" [label = "ones"]
"y_gen(8)$0" -> "batch_size(8)" [label = "ones"]
"gan(8)$1" -> "gan(8)$0" [label = "train_on_batch"]
"gan(8)$1" -> "noise(8)$1" [label = "train_on_batch"]
"gan(8)$1" -> "y_gen(8)$0" [label = "train_on_batch"]
"plot_generated_images[0]" -> "e(8)" [label = "plot_generated_images"]
"plot_generated_images[1]" -> "generator(8)" [label = "plot_generated_images"]
"500(0)" -> "gan-for-artwork-duplication.ipynb" [label = "appears"]
"training[0]" -> "500(0)" [label = "training"]
"3(0)" -> "gan-for-artwork-duplication.ipynb" [label = "appears"]
"training[1]" -> "3(0)" [label = "training"]
}