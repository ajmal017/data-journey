digraph { 
"pandas" -> "the-importance-of-cleaning-text.ipynb" [label = "import"]
"pd(0)" -> "the-importance-of-cleaning-text.ipynb" [label = "appears"]
"pd(0)" -> "pandas" [label = "assign"]
"numpy" -> "the-importance-of-cleaning-text.ipynb" [label = "import"]
"np(0)" -> "the-importance-of-cleaning-text.ipynb" [label = "appears"]
"np(0)" -> "numpy" [label = "assign"]
"nltk" -> "the-importance-of-cleaning-text.ipynb" [label = "import"]
"nltk(0)" -> "the-importance-of-cleaning-text.ipynb" [label = "appears"]
"nltk(0)" -> "nltk" [label = "assign"]
"nltk.corpus" -> "the-importance-of-cleaning-text.ipynb" [label = "import"]
"stopwords" -> "nltk.corpus" [label = "import"]
"stopwords(0)" -> "the-importance-of-cleaning-text.ipynb" [label = "appears"]
"stopwords(0)" -> "stopwords" [label = "assign"]
"nltk.stem" -> "the-importance-of-cleaning-text.ipynb" [label = "import"]
"SnowballStemmer" -> "nltk.stem" [label = "import"]
"SnowballStemmer(0)" -> "the-importance-of-cleaning-text.ipynb" [label = "appears"]
"SnowballStemmer(0)" -> "SnowballStemmer" [label = "assign"]
"re" -> "the-importance-of-cleaning-text.ipynb" [label = "import"]
"re(0)" -> "the-importance-of-cleaning-text.ipynb" [label = "appears"]
"re(0)" -> "re" [label = "assign"]
"string" -> "the-importance-of-cleaning-text.ipynb" [label = "import"]
"punctuation" -> "string" [label = "import"]
"punctuation(0)" -> "the-importance-of-cleaning-text.ipynb" [label = "appears"]
"punctuation(0)" -> "punctuation" [label = "assign"]
"train(0)$0" -> "pd(0)" [label = "assign"]
"../input/train.csv(0)" -> "the-importance-of-cleaning-text.ipynb" [label = "appears"]
"train(0)$0" -> "../input/train.csv(0)" [label = "assign"]
"100(0)" -> "the-importance-of-cleaning-text.ipynb" [label = "appears"]
"train(0)$0" -> "100(0)" [label = "assign"]
"test(0)$0" -> "pd(0)" [label = "assign"]
"../input/test.csv(0)" -> "the-importance-of-cleaning-text.ipynb" [label = "appears"]
"test(0)$0" -> "../input/test.csv(0)" [label = "assign"]
"test(0)$0" -> "100(0)" [label = "assign"]
"print[0]" -> "train(0)$0" [label = "print"]
"print[0]" -> "test(0)$0" [label = "print"]
"train(0)$1" -> "train(0)$0" [label = "fillna"]
"empty(0)" -> "the-importance-of-cleaning-text.ipynb" [label = "appears"]
"train(0)$1" -> "empty(0)" [label = "fillna"]
"test(0)$1" -> "test(0)$0" [label = "fillna"]
"test(0)$1" -> "empty(0)" [label = "fillna"]
"0(0)" -> "the-importance-of-cleaning-text.ipynb" [label = "appears"]
"a(0)$0" -> "0(0)" [label = "assign"]
"range(0)" -> "the-importance-of-cleaning-text.ipynb" [label = "appears"]
"i(0)" -> "the-importance-of-cleaning-text.ipynb" [label = "appears"]
"i(0)" -> "range(0)" [label = "Iter"]
"i(0)" -> "a(0)$0" [label = "Iter"]
"i(0)" -> "a(0)$0" [label = "Iter"]
"10(0)" -> "the-importance-of-cleaning-text.ipynb" [label = "appears"]
"i(0)" -> "10(0)" [label = "Iter"]
"print[0]" -> "train(0)$1" [label = "print"]
"print[1]" -> "i(0)" [label = "print"]
"print[0]" -> "train(0)$1" [label = "print"]
"print[1]" -> "i(0)" [label = "print"]
"[<_ast.Str object at 0x1066c7e50>, <_ast.Str object at 0x10669d2d0>, <_ast.Str object at 0x10669dc50>, <_ast.Str object at 0x10669d990>, <_ast.Str object at 0x10669d9d0>, <_ast.Str object at 0x10669de10>, <_ast.Str object at 0x10669dc90>, <_ast.Str object at 0x10669d810>, <_ast.Str object at 0x10669dbd0>, <_ast.Str object at 0x10669dc10>, <_ast.Str object at 0x10669dad0>, <_ast.Str object at 0x10669d210>, <_ast.Str object at 0x10669d910>, <_ast.Str object at 0x10669d7d0>, <_ast.Str object at 0x10669d610>, <_ast.Str object at 0x10669d790>, <_ast.Str object at 0x10669d3d0>, <_ast.Str object at 0x10669d650>, <_ast.Str object at 0x10669d150>, <_ast.Str object at 0x10669d8d0>, <_ast.Str object at 0x10669d0d0>, <_ast.Str object at 0x10669d350>, <_ast.Str object at 0x10669d890>, <_ast.Str object at 0x10669d1d0>, <_ast.Str object at 0x10669d310>, <_ast.Str object at 0x10669d390>, <_ast.Str object at 0x10669d710>, <_ast.Str object at 0x10669d5d0>, <_ast.Str object at 0x10669d450>, <_ast.Str object at 0x10669d590>, <_ast.Str object at 0x10669d490>, <_ast.Str object at 0x10669d090>, <_ast.Str object at 0x10669d550>, <_ast.Str object at 0x10669d690>, <_ast.Str object at 0x10669d750>](0)" -> "the-importance-of-cleaning-text.ipynb" [label = "appears"]
"stop_words(0)$0" -> "[<_ast.Str object at 0x1066c7e50>, <_ast.Str object at 0x10669d2d0>, <_ast.Str object at 0x10669dc50>, <_ast.Str object at 0x10669d990>, <_ast.Str object at 0x10669d9d0>, <_ast.Str object at 0x10669de10>, <_ast.Str object at 0x10669dc90>, <_ast.Str object at 0x10669d810>, <_ast.Str object at 0x10669dbd0>, <_ast.Str object at 0x10669dc10>, <_ast.Str object at 0x10669dad0>, <_ast.Str object at 0x10669d210>, <_ast.Str object at 0x10669d910>, <_ast.Str object at 0x10669d7d0>, <_ast.Str object at 0x10669d610>, <_ast.Str object at 0x10669d790>, <_ast.Str object at 0x10669d3d0>, <_ast.Str object at 0x10669d650>, <_ast.Str object at 0x10669d150>, <_ast.Str object at 0x10669d8d0>, <_ast.Str object at 0x10669d0d0>, <_ast.Str object at 0x10669d350>, <_ast.Str object at 0x10669d890>, <_ast.Str object at 0x10669d1d0>, <_ast.Str object at 0x10669d310>, <_ast.Str object at 0x10669d390>, <_ast.Str object at 0x10669d710>, <_ast.Str object at 0x10669d5d0>, <_ast.Str object at 0x10669d450>, <_ast.Str object at 0x10669d590>, <_ast.Str object at 0x10669d490>, <_ast.Str object at 0x10669d090>, <_ast.Str object at 0x10669d550>, <_ast.Str object at 0x10669d690>, <_ast.Str object at 0x10669d750>](0)" [label = "assign"]
"text(1)" -> "text_to_wordlist[0]" [label = "_argToVar"]
"remove_stop_words(1)" -> "text_to_wordlist[1]" [label = "_argToVar"]
"stem_words(1)" -> "text_to_wordlist[2]" [label = "_argToVar"]
"text(1)$0" -> "re(1)" [label = "sub"]
"text(1)$0" -> "[^A-Za-z0-9](1)" [label = "sub"]
"text(1)$0" -> " (1)" [label = "sub"]
"text(1)$0" -> "text(1)$0" [label = "sub"]
"text(1)$1" -> "re(1)" [label = "sub"]
"text(1)$1" -> "what's(1)" [label = "sub"]
"text(1)$1" -> "(1)" [label = "sub"]
"text(1)$1" -> "text(1)$1" [label = "sub"]
"text(1)$2" -> "re(1)" [label = "sub"]
"text(1)$2" -> "What's(1)" [label = "sub"]
"text(1)$2" -> "(1)" [label = "sub"]
"text(1)$2" -> "text(1)$2" [label = "sub"]
"text(1)$3" -> "re(1)" [label = "sub"]
"text(1)$3" -> "\'s(1)" [label = "sub"]
"text(1)$3" -> " (1)" [label = "sub"]
"text(1)$3" -> "text(1)$3" [label = "sub"]
"text(1)$4" -> "re(1)" [label = "sub"]
"text(1)$4" -> "\'ve(1)" [label = "sub"]
"text(1)$4" -> " have (1)" [label = "sub"]
"text(1)$4" -> "text(1)$4" [label = "sub"]
"text(1)$5" -> "re(1)" [label = "sub"]
"text(1)$5" -> "can't(1)" [label = "sub"]
"text(1)$5" -> "cannot (1)" [label = "sub"]
"text(1)$5" -> "text(1)$5" [label = "sub"]
"text(1)$6" -> "re(1)" [label = "sub"]
"text(1)$6" -> "n't(1)" [label = "sub"]
"text(1)$6" -> " not (1)" [label = "sub"]
"text(1)$6" -> "text(1)$6" [label = "sub"]
"text(1)$7" -> "re(1)" [label = "sub"]
"text(1)$7" -> "I'm(1)" [label = "sub"]
"text(1)$7" -> "I am(1)" [label = "sub"]
"text(1)$7" -> "text(1)$7" [label = "sub"]
"text(1)$8" -> "re(1)" [label = "sub"]
"text(1)$8" -> " m (1)" [label = "sub"]
"text(1)$8" -> " am (1)" [label = "sub"]
"text(1)$8" -> "text(1)$8" [label = "sub"]
"text(1)$9" -> "re(1)" [label = "sub"]
"text(1)$9" -> "\'re(1)" [label = "sub"]
"text(1)$9" -> " are (1)" [label = "sub"]
"text(1)$9" -> "text(1)$9" [label = "sub"]
"text(1)$10" -> "re(1)" [label = "sub"]
"text(1)$10" -> "\'d(1)" [label = "sub"]
"text(1)$10" -> " would (1)" [label = "sub"]
"text(1)$10" -> "text(1)$10" [label = "sub"]
"text(1)$11" -> "re(1)" [label = "sub"]
"text(1)$11" -> "\'ll(1)" [label = "sub"]
"text(1)$11" -> " will (1)" [label = "sub"]
"text(1)$11" -> "text(1)$11" [label = "sub"]
"text(1)$12" -> "re(1)" [label = "sub"]
"text(1)$12" -> "60k(1)" [label = "sub"]
"text(1)$12" -> " 60000 (1)" [label = "sub"]
"text(1)$12" -> "text(1)$12" [label = "sub"]
"text(1)$13" -> "re(1)" [label = "sub"]
"text(1)$13" -> " e g (1)" [label = "sub"]
"text(1)$13" -> " eg (1)" [label = "sub"]
"text(1)$13" -> "text(1)$13" [label = "sub"]
"text(1)$14" -> "re(1)" [label = "sub"]
"text(1)$14" -> " b g (1)" [label = "sub"]
"text(1)$14" -> " bg (1)" [label = "sub"]
"text(1)$14" -> "text(1)$14" [label = "sub"]
"text(1)$15" -> "re(1)" [label = "sub"]
"text(1)$15" -> "\0s(1)" [label = "sub"]
"text(1)$15" -> "0(1)" [label = "sub"]
"text(1)$15" -> "text(1)$15" [label = "sub"]
"text(1)$16" -> "re(1)" [label = "sub"]
"text(1)$16" -> " 9 11 (1)" [label = "sub"]
"text(1)$16" -> "911(1)" [label = "sub"]
"text(1)$16" -> "text(1)$16" [label = "sub"]
"text(1)$17" -> "re(1)" [label = "sub"]
"text(1)$17" -> "e-mail(1)" [label = "sub"]
"text(1)$17" -> "email(1)" [label = "sub"]
"text(1)$17" -> "text(1)$17" [label = "sub"]
"text(1)$18" -> "re(1)" [label = "sub"]
"text(1)$18" -> "\s{2,}(1)" [label = "sub"]
"text(1)$18" -> " (1)" [label = "sub"]
"text(1)$18" -> "text(1)$18" [label = "sub"]
"text(1)$19" -> "re(1)" [label = "sub"]
"text(1)$19" -> "quikly(1)" [label = "sub"]
"text(1)$19" -> "quickly(1)" [label = "sub"]
"text(1)$19" -> "text(1)$19" [label = "sub"]
"text(1)$20" -> "re(1)" [label = "sub"]
"text(1)$20" -> " usa (1)" [label = "sub"]
"text(1)$20" -> " America (1)" [label = "sub"]
"text(1)$20" -> "text(1)$20" [label = "sub"]
"text(1)$21" -> "re(1)" [label = "sub"]
"text(1)$21" -> " USA (1)" [label = "sub"]
"text(1)$21" -> " America (1)" [label = "sub"]
"text(1)$21" -> "text(1)$21" [label = "sub"]
"text(1)$22" -> "re(1)" [label = "sub"]
"text(1)$22" -> " u s (1)" [label = "sub"]
"text(1)$22" -> " America (1)" [label = "sub"]
"text(1)$22" -> "text(1)$22" [label = "sub"]
"text(1)$23" -> "re(1)" [label = "sub"]
"text(1)$23" -> " uk (1)" [label = "sub"]
"text(1)$23" -> " England (1)" [label = "sub"]
"text(1)$23" -> "text(1)$23" [label = "sub"]
"text(1)$24" -> "re(1)" [label = "sub"]
"text(1)$24" -> " UK (1)" [label = "sub"]
"text(1)$24" -> " England (1)" [label = "sub"]
"text(1)$24" -> "text(1)$24" [label = "sub"]
"text(1)$25" -> "re(1)" [label = "sub"]
"text(1)$25" -> "india(1)" [label = "sub"]
"text(1)$25" -> "India(1)" [label = "sub"]
"text(1)$25" -> "text(1)$25" [label = "sub"]
"text(1)$26" -> "re(1)" [label = "sub"]
"text(1)$26" -> "switzerland(1)" [label = "sub"]
"text(1)$26" -> "Switzerland(1)" [label = "sub"]
"text(1)$26" -> "text(1)$26" [label = "sub"]
"text(1)$27" -> "re(1)" [label = "sub"]
"text(1)$27" -> "china(1)" [label = "sub"]
"text(1)$27" -> "China(1)" [label = "sub"]
"text(1)$27" -> "text(1)$27" [label = "sub"]
"text(1)$28" -> "re(1)" [label = "sub"]
"text(1)$28" -> "chinese(1)" [label = "sub"]
"text(1)$28" -> "Chinese(1)" [label = "sub"]
"text(1)$28" -> "text(1)$28" [label = "sub"]
"text(1)$29" -> "re(1)" [label = "sub"]
"text(1)$29" -> "imrovement(1)" [label = "sub"]
"text(1)$29" -> "improvement(1)" [label = "sub"]
"text(1)$29" -> "text(1)$29" [label = "sub"]
"text(1)$30" -> "re(1)" [label = "sub"]
"text(1)$30" -> "intially(1)" [label = "sub"]
"text(1)$30" -> "initially(1)" [label = "sub"]
"text(1)$30" -> "text(1)$30" [label = "sub"]
"text(1)$31" -> "re(1)" [label = "sub"]
"text(1)$31" -> "quora(1)" [label = "sub"]
"text(1)$31" -> "Quora(1)" [label = "sub"]
"text(1)$31" -> "text(1)$31" [label = "sub"]
"text(1)$32" -> "re(1)" [label = "sub"]
"text(1)$32" -> " dms (1)" [label = "sub"]
"text(1)$32" -> "direct messages (1)" [label = "sub"]
"text(1)$32" -> "text(1)$32" [label = "sub"]
"text(1)$33" -> "re(1)" [label = "sub"]
"text(1)$33" -> "demonitization(1)" [label = "sub"]
"text(1)$33" -> "demonetization(1)" [label = "sub"]
"text(1)$33" -> "text(1)$33" [label = "sub"]
"text(1)$34" -> "re(1)" [label = "sub"]
"text(1)$34" -> "actived(1)" [label = "sub"]
"text(1)$34" -> "active(1)" [label = "sub"]
"text(1)$34" -> "text(1)$34" [label = "sub"]
"text(1)$35" -> "re(1)" [label = "sub"]
"text(1)$35" -> "kms(1)" [label = "sub"]
"text(1)$35" -> " kilometers (1)" [label = "sub"]
"text(1)$35" -> "text(1)$35" [label = "sub"]
"text(1)$36" -> "re(1)" [label = "sub"]
"text(1)$36" -> "KMs(1)" [label = "sub"]
"text(1)$36" -> " kilometers (1)" [label = "sub"]
"text(1)$36" -> "text(1)$36" [label = "sub"]
"text(1)$37" -> "re(1)" [label = "sub"]
"text(1)$37" -> " cs (1)" [label = "sub"]
"text(1)$37" -> " computer science (1)" [label = "sub"]
"text(1)$37" -> "text(1)$37" [label = "sub"]
"text(1)$38" -> "re(1)" [label = "sub"]
"text(1)$38" -> " upvotes (1)" [label = "sub"]
"text(1)$38" -> " up votes (1)" [label = "sub"]
"text(1)$38" -> "text(1)$38" [label = "sub"]
"text(1)$39" -> "re(1)" [label = "sub"]
"text(1)$39" -> " iPhone (1)" [label = "sub"]
"text(1)$39" -> " phone (1)" [label = "sub"]
"text(1)$39" -> "text(1)$39" [label = "sub"]
"text(1)$40" -> "re(1)" [label = "sub"]
"text(1)$40" -> "\0rs (1)" [label = "sub"]
"text(1)$40" -> " rs (1)" [label = "sub"]
"text(1)$40" -> "text(1)$40" [label = "sub"]
"text(1)$41" -> "re(1)" [label = "sub"]
"text(1)$41" -> "calender(1)" [label = "sub"]
"text(1)$41" -> "calendar(1)" [label = "sub"]
"text(1)$41" -> "text(1)$41" [label = "sub"]
"text(1)$42" -> "re(1)" [label = "sub"]
"text(1)$42" -> "ios(1)" [label = "sub"]
"text(1)$42" -> "operating system(1)" [label = "sub"]
"text(1)$42" -> "text(1)$42" [label = "sub"]
"text(1)$43" -> "re(1)" [label = "sub"]
"text(1)$43" -> "gps(1)" [label = "sub"]
"text(1)$43" -> "GPS(1)" [label = "sub"]
"text(1)$43" -> "text(1)$43" [label = "sub"]
"text(1)$44" -> "re(1)" [label = "sub"]
"text(1)$44" -> "gst(1)" [label = "sub"]
"text(1)$44" -> "GST(1)" [label = "sub"]
"text(1)$44" -> "text(1)$44" [label = "sub"]
"text(1)$45" -> "re(1)" [label = "sub"]
"text(1)$45" -> "programing(1)" [label = "sub"]
"text(1)$45" -> "programming(1)" [label = "sub"]
"text(1)$45" -> "text(1)$45" [label = "sub"]
"text(1)$46" -> "re(1)" [label = "sub"]
"text(1)$46" -> "bestfriend(1)" [label = "sub"]
"text(1)$46" -> "best friend(1)" [label = "sub"]
"text(1)$46" -> "text(1)$46" [label = "sub"]
"text(1)$47" -> "re(1)" [label = "sub"]
"text(1)$47" -> "dna(1)" [label = "sub"]
"text(1)$47" -> "DNA(1)" [label = "sub"]
"text(1)$47" -> "text(1)$47" [label = "sub"]
"text(1)$48" -> "re(1)" [label = "sub"]
"text(1)$48" -> "III(1)" [label = "sub"]
"text(1)$48" -> "3(1)" [label = "sub"]
"text(1)$48" -> "text(1)$48" [label = "sub"]
"text(1)$49" -> "re(1)" [label = "sub"]
"text(1)$49" -> "the US(1)" [label = "sub"]
"text(1)$49" -> "America(1)" [label = "sub"]
"text(1)$49" -> "text(1)$49" [label = "sub"]
"text(1)$50" -> "re(1)" [label = "sub"]
"text(1)$50" -> "Astrology(1)" [label = "sub"]
"text(1)$50" -> "astrology(1)" [label = "sub"]
"text(1)$50" -> "text(1)$50" [label = "sub"]
"text(1)$51" -> "re(1)" [label = "sub"]
"text(1)$51" -> "Method(1)" [label = "sub"]
"text(1)$51" -> "method(1)" [label = "sub"]
"text(1)$51" -> "text(1)$51" [label = "sub"]
"text(1)$52" -> "re(1)" [label = "sub"]
"text(1)$52" -> "Find(1)" [label = "sub"]
"text(1)$52" -> "find(1)" [label = "sub"]
"text(1)$52" -> "text(1)$52" [label = "sub"]
"text(1)$53" -> "re(1)" [label = "sub"]
"text(1)$53" -> "banglore(1)" [label = "sub"]
"text(1)$53" -> "Banglore(1)" [label = "sub"]
"text(1)$53" -> "text(1)$53" [label = "sub"]
"text(1)$54" -> "re(1)" [label = "sub"]
"text(1)$54" -> " J K (1)" [label = "sub"]
"text(1)$54" -> " JK (1)" [label = "sub"]
"text(1)$54" -> "text(1)$54" [label = "sub"]
"text(1)$55" -> "(1)" [label = "join"]
"text(1)$55" -> "c(1)" [label = "join"]
"text(1)$55" -> "c(1)" [label = "join"]
"text(1)$55" -> "text(1)$55" [label = "join"]
"text(1)$55" -> "c(1)" [label = "join"]
"text(1)$55" -> "punctuation(1)" [label = "join"]
"text(1)$56" -> "text(1)$55" [label = "split"]
"text(1)$57" -> "w(1)" [label = "assign"]
"text(1)$57" -> "w(1)" [label = "assign"]
"text(1)$57" -> "text(1)$57" [label = "assign"]
"text(1)$57" -> "w(1)" [label = "assign"]
"text(1)$57" -> "stop_words(1)" [label = "assign"]
"text(1)$58" -> " (1)" [label = "join"]
"text(1)$58" -> "text(1)$58" [label = "join"]
"text(1)$59" -> "text(1)$58" [label = "split"]
"stemmer(1)$0" -> "english(1)" [label = "SnowballStemmer"]
"stemmed_words(1)$0" -> "stemmer(1)$0" [label = "assign"]
"stemmed_words(1)$0" -> "word(1)" [label = "assign"]
"stemmed_words(1)$0" -> "word(1)" [label = "assign"]
"stemmed_words(1)$0" -> "text(1)$59" [label = "assign"]
"text(1)$60" -> " (1)" [label = "join"]
"text(1)$60" -> "stemmed_words(1)$0" [label = "join"]
"question_list(2)" -> "process_questions[0]" [label = "_argToVar"]
"questions(2)" -> "process_questions[1]" [label = "_argToVar"]
"question_list_name(2)" -> "process_questions[2]" [label = "_argToVar"]
"dataframe(2)" -> "process_questions[3]" [label = "_argToVar"]
"question(2)" -> "questions(2)" [label = "Iter"]
"question_list(2)$0" -> "question_list(2)" [label = "append"]
"question_list(2)$0" -> "text_to_wordlist(2)" [label = "append"]
"question_list(2)$0" -> "question(2)" [label = "append"]
"progress(2)$0" -> "len(2)" [label = "Mult"]
"progress(2)$0" -> "question_list(2)$0" [label = "Mult"]
"progress(2)$0" -> "len(2)" [label = "Mult"]
"progress(2)$0" -> "dataframe(2)" [label = "Mult"]
"progress(2)$0" -> "100(2)" [label = "Mult"]
"print[0]" -> "{} is {}% complete.(2)" [label = "print"]
"print[1]" -> "question_list_name(2)" [label = "print"]
"print[2]" -> "round(2)" [label = "print"]
"print[3]" -> "progress(2)$0" [label = "print"]
"print[4]" -> "1(2)" [label = "print"]
"[](0)" -> "the-importance-of-cleaning-text.ipynb" [label = "appears"]
"train_question1(0)$0" -> "[](0)" [label = "assign"]
"process_questions[0]" -> "train_question1(0)$0" [label = "process_questions"]
"process_questions[1]" -> "train(0)$1" [label = "process_questions"]
"process_questions[2]" -> "train_question1(0)$0" [label = "process_questions"]
"process_questions[3]" -> "train(0)$1" [label = "process_questions"]
"train_question2(0)$0" -> "[](0)" [label = "assign"]
"process_questions[0]" -> "train_question2(0)$0" [label = "process_questions"]
"process_questions[1]" -> "train(0)$1" [label = "process_questions"]
"process_questions[2]" -> "train_question2(0)$0" [label = "process_questions"]
"process_questions[3]" -> "train(0)$1" [label = "process_questions"]
"test_question1(0)$0" -> "[](0)" [label = "assign"]
"process_questions[0]" -> "test_question1(0)$0" [label = "process_questions"]
"process_questions[1]" -> "test(0)$1" [label = "process_questions"]
"process_questions[2]" -> "test_question1(0)$0" [label = "process_questions"]
"process_questions[3]" -> "test(0)$1" [label = "process_questions"]
"test_question2(0)$0" -> "[](0)" [label = "assign"]
"process_questions[0]" -> "test_question2(0)$0" [label = "process_questions"]
"process_questions[1]" -> "test(0)$1" [label = "process_questions"]
"process_questions[2]" -> "test_question2(0)$0" [label = "process_questions"]
"process_questions[3]" -> "test(0)$1" [label = "process_questions"]
"a(0)$1" -> "0(0)" [label = "assign"]
"i(0)" -> "range(0)" [label = "Iter"]
"i(0)" -> "a(0)$1" [label = "Iter"]
"i(0)" -> "a(0)$1" [label = "Iter"]
"i(0)" -> "10(0)" [label = "Iter"]
"print[0]" -> "train_question1(0)$0" [label = "print"]
"print[1]" -> "i(0)" [label = "print"]
"print[0]" -> "train_question2(0)$0" [label = "print"]
"print[1]" -> "i(0)" [label = "print"]
}