digraph { 
"numpy" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "import"]
"np(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"np(0)" -> "numpy" [label = "assign"]
"pandas" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "import"]
"pd(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"pd(0)" -> "pandas" [label = "assign"]
"seaborn" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "import"]
"sns(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"sns(0)" -> "seaborn" [label = "assign"]
"sns(0)$0" -> "sns(0)" [label = "set"]
"matplotlib.pyplot" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "import"]
"plt(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"plt(0)" -> "matplotlib.pyplot" [label = "assign"]
"tqdm" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "import"]
"tqdm_notebook" -> "tqdm" [label = "import"]
"tqdm(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"tqdm(0)" -> "tqdm_notebook" [label = "assign"]
"re" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "import"]
"re(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"re(0)" -> "re" [label = "assign"]
"random" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "import"]
"rd(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"rd(0)" -> "random" [label = "assign"]
"os" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "import"]
"os(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"os(0)" -> "os" [label = "assign"]
"codecs" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "import"]
"codecs(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"codecs(0)" -> "codecs" [label = "assign"]
"time" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "import"]
"time(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"time(0)" -> "time" [label = "assign"]
"datetime" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "import"]
"datetime(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"datetime(0)" -> "datetime" [label = "assign"]
"gc" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "import"]
"gc(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"gc(0)" -> "gc" [label = "assign"]
"numba" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "import"]
"jit" -> "numba" [label = "import"]
"jit(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"jit(0)" -> "jit" [label = "assign"]
"collections" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "import"]
"Counter" -> "collections" [label = "import"]
"Counter(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"Counter(0)" -> "Counter" [label = "assign"]
"copy" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "import"]
"copy(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"copy(0)" -> "copy" [label = "assign"]
"typing" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "import"]
"Any" -> "typing" [label = "import"]
"Any(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"Any(0)" -> "Any" [label = "assign"]
"12345(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"seed(0)$0" -> "12345(0)" [label = "assign"]
"np(0)$0" -> "np(0)" [label = "seed"]
"np(0)$0" -> "seed(0)$0" [label = "seed"]
"rd(0)$0" -> "rd(0)" [label = "seed"]
"rd(0)$0" -> "seed(0)$0" [label = "seed"]
"os(0)$0" -> "os(0)" [label = "str"]
"os(0)$0" -> "seed(0)$0" [label = "str"]
"warnings" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "import"]
"warnings(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"warnings(0)" -> "warnings" [label = "assign"]
"warnings(0)$0" -> "warnings(0)" [label = "filterwarnings"]
"ignore(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"warnings(0)$0" -> "ignore(0)" [label = "filterwarnings"]
"pd(0)$0" -> "pd(0)" [label = "set_option"]
"display.max_columns(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"pd(0)$0" -> "display.max_columns(0)" [label = "set_option"]
"200(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"pd(0)$0" -> "200(0)" [label = "set_option"]
"pd(0)$1" -> "pd(0)$0" [label = "set_option"]
"display.max_rows(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"pd(0)$1" -> "display.max_rows(0)" [label = "set_option"]
"pd(0)$1" -> "200(0)" [label = "set_option"]
"sklearn.ensemble" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "import"]
"RandomForestClassifier" -> "sklearn.ensemble" [label = "import"]
"RandomForestClassifier(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"RandomForestClassifier(0)" -> "RandomForestClassifier" [label = "assign"]
"RandomForestRegressor" -> "sklearn.ensemble" [label = "import"]
"RandomForestRegressor(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"RandomForestRegressor(0)" -> "RandomForestRegressor" [label = "assign"]
"lightgbm" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "import"]
"lgb(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"lgb(0)" -> "lightgbm" [label = "assign"]
"xgboost" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "import"]
"xgb(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"xgb(0)" -> "xgboost" [label = "assign"]
"keras" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "import"]
"keras(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"keras(0)" -> "keras" [label = "assign"]
"keras.losses" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "import"]
"binary_crossentropy" -> "keras.losses" [label = "import"]
"binary_crossentropy(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"binary_crossentropy(0)" -> "binary_crossentropy" [label = "assign"]
"categorical_crossentropy" -> "keras.losses" [label = "import"]
"categorical_crossentropy(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"categorical_crossentropy(0)" -> "categorical_crossentropy" [label = "assign"]
"keras.utils" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "import"]
"to_categorical" -> "keras.utils" [label = "import"]
"to_categorical(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"to_categorical(0)" -> "to_categorical" [label = "assign"]
"keras.layers" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "import"]
"Dense" -> "keras.layers" [label = "import"]
"Dense(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"Dense(0)" -> "Dense" [label = "assign"]
"Input" -> "keras.layers" [label = "import"]
"Input(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"Input(0)" -> "Input" [label = "assign"]
"Flatten" -> "keras.layers" [label = "import"]
"Flatten(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"Flatten(0)" -> "Flatten" [label = "assign"]
"concatenate" -> "keras.layers" [label = "import"]
"concatenate(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"concatenate(0)" -> "concatenate" [label = "assign"]
"Dropout" -> "keras.layers" [label = "import"]
"Dropout(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"Dropout(0)" -> "Dropout" [label = "assign"]
"Lambda" -> "keras.layers" [label = "import"]
"Lambda(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"Lambda(0)" -> "Lambda" [label = "assign"]
"BatchNormalization" -> "keras.layers" [label = "import"]
"BatchNormalization(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"BatchNormalization(0)" -> "BatchNormalization" [label = "assign"]
"keras.layers" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "import"]
"Activation" -> "keras.layers" [label = "import"]
"Activation(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"Activation(0)" -> "Activation" [label = "assign"]
"keras.models" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "import"]
"Sequential" -> "keras.models" [label = "import"]
"Sequential(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"Sequential(0)" -> "Sequential" [label = "assign"]
"Model" -> "keras.models" [label = "import"]
"Model(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"Model(0)" -> "Model" [label = "assign"]
"keras.callbacks" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "import"]
"Callback" -> "keras.callbacks" [label = "import"]
"Callback(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"Callback(0)" -> "Callback" [label = "assign"]
"EarlyStopping" -> "keras.callbacks" [label = "import"]
"EarlyStopping(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"EarlyStopping(0)" -> "EarlyStopping" [label = "assign"]
"ModelCheckpoint" -> "keras.callbacks" [label = "import"]
"ModelCheckpoint(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"ModelCheckpoint(0)" -> "ModelCheckpoint" [label = "assign"]
"ReduceLROnPlateau" -> "keras.callbacks" [label = "import"]
"ReduceLROnPlateau(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"ReduceLROnPlateau(0)" -> "ReduceLROnPlateau" [label = "assign"]
"keras.backend" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "import"]
"K(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"K(0)" -> "keras.backend" [label = "assign"]
"keras.optimizers" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "import"]
"Adam" -> "keras.optimizers" [label = "import"]
"Adam(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"Adam(0)" -> "Adam" [label = "assign"]
"keras" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "import"]
"optimizers" -> "keras" [label = "import"]
"optimizers(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"optimizers(0)" -> "optimizers" [label = "assign"]
"keras.utils" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "import"]
"np_utils" -> "keras.utils" [label = "import"]
"np_utils(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"np_utils(0)" -> "np_utils" [label = "assign"]
"sklearn" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "import"]
"preprocessing" -> "sklearn" [label = "import"]
"preprocessing(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"preprocessing(0)" -> "preprocessing" [label = "assign"]
"sklearn.metrics" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "import"]
"mtr(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"mtr(0)" -> "sklearn.metrics" [label = "assign"]
"sklearn.model_selection" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "import"]
"KFold" -> "sklearn.model_selection" [label = "import"]
"KFold(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"KFold(0)" -> "KFold" [label = "assign"]
"GridSearchCV" -> "sklearn.model_selection" [label = "import"]
"GridSearchCV(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"GridSearchCV(0)" -> "GridSearchCV" [label = "assign"]
"sklearn.metrics" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "import"]
"mean_squared_error" -> "sklearn.metrics" [label = "import"]
"mean_squared_error(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"mean_squared_error(0)" -> "mean_squared_error" [label = "assign"]
"log_loss" -> "sklearn.metrics" [label = "import"]
"log_loss(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"log_loss(0)" -> "log_loss" [label = "assign"]
"confusion_matrix" -> "sklearn.metrics" [label = "import"]
"confusion_matrix(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"confusion_matrix(0)" -> "confusion_matrix" [label = "assign"]
"sklearn.preprocessing" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "import"]
"OneHotEncoder" -> "sklearn.preprocessing" [label = "import"]
"OneHotEncoder(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"OneHotEncoder(0)" -> "OneHotEncoder" [label = "assign"]
"LabelEncoder" -> "sklearn.preprocessing" [label = "import"]
"LabelEncoder(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"LabelEncoder(0)" -> "LabelEncoder" [label = "assign"]
"sklearn.preprocessing" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "import"]
"scale" -> "sklearn.preprocessing" [label = "import"]
"scale(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"scale(0)" -> "scale" [label = "assign"]
"MinMaxScaler" -> "sklearn.preprocessing" [label = "import"]
"MinMaxScaler(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"MinMaxScaler(0)" -> "MinMaxScaler" [label = "assign"]
"StandardScaler" -> "sklearn.preprocessing" [label = "import"]
"StandardScaler(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"StandardScaler(0)" -> "StandardScaler" [label = "assign"]
"sklearn" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "import"]
"model_selection" -> "sklearn" [label = "import"]
"model_selection(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"model_selection(0)" -> "model_selection" [label = "assign"]
"sklearn.utils" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "import"]
"class_weight" -> "sklearn.utils" [label = "import"]
"class_weight(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"class_weight(0)" -> "class_weight" [label = "assign"]
"sklearn.preprocessing" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "import"]
"StandardScaler" -> "sklearn.preprocessing" [label = "import"]
"SS(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"SS(0)" -> "StandardScaler" [label = "assign"]
"sklearn.model_selection" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "import"]
"train_test_split" -> "sklearn.model_selection" [label = "import"]
"TTS(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"TTS(0)" -> "train_test_split" [label = "assign"]
"keras.callbacks" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "import"]
"ReduceLROnPlateau" -> "keras.callbacks" [label = "import"]
"RLRP(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"RLRP(0)" -> "ReduceLROnPlateau" [label = "assign"]
"keras.callbacks" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "import"]
"EarlyStopping" -> "keras.callbacks" [label = "import"]
"ES(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"ES(0)" -> "EarlyStopping" [label = "assign"]
"print[0]" -> "Carregando arquivo dataset_treino.csv....(1)" [label = "print"]
"train(1)$0" -> "pd(1)" [label = "read_csv"]
"train(1)$0" -> "../dataset/dataset_treino.csv(1)" [label = "read_csv"]
"print[0]" -> "dataset_treino.csv tem {} linhas and {} colunas(1)" [label = "print"]
"print[1]" -> "train(1)$0" [label = "print"]
"print[2]" -> "0(1)" [label = "print"]
"print[3]" -> "train(1)$0" [label = "print"]
"print[4]" -> "1(1)" [label = "print"]
"print[0]" -> "Carregando arquivo dataset_teste.csv....(1)" [label = "print"]
"test(1)$0" -> "pd(1)" [label = "read_csv"]
"test(1)$0" -> "../dataset/dataset_teste.csv(1)" [label = "read_csv"]
"print[0]" -> "dataset_teste.csv tem {} linhas and {} colunas(1)" [label = "print"]
"print[1]" -> "test(1)$0" [label = "print"]
"print[2]" -> "0(1)" [label = "print"]
"print[3]" -> "test(1)$0" [label = "print"]
"print[4]" -> "1(1)" [label = "print"]
"print[0]" -> "Carregando arquivo dataset_treino.csv....(1)" [label = "print"]
"train(1)$1" -> "pd(1)" [label = "read_csv"]
"train(1)$1" -> "/kaggle/input/competicao-dsa-machine-learning-dec-2019/dataset_treino.csv(1)" [label = "read_csv"]
"print[0]" -> "dataset_treino.csv tem {} linhas and {} colunas(1)" [label = "print"]
"print[1]" -> "train(1)$1" [label = "print"]
"print[2]" -> "0(1)" [label = "print"]
"print[3]" -> "train(1)$1" [label = "print"]
"print[4]" -> "1(1)" [label = "print"]
"print[0]" -> "Carregando arquivo dataset_treino.csv....(1)" [label = "print"]
"test(1)$1" -> "pd(1)" [label = "read_csv"]
"test(1)$1" -> "/kaggle/input/competicao-dsa-machine-learning-dec-2019/dataset_teste.csv(1)" [label = "read_csv"]
"print[0]" -> "dataset_teste.csv tem {} linhas and {} colunas(1)" [label = "print"]
"print[1]" -> "test(1)$1" [label = "print"]
"print[2]" -> "0(1)" [label = "print"]
"print[3]" -> "test(1)$1" [label = "print"]
"print[4]" -> "1(1)" [label = "print"]
"[<_ast.Str object at 0x10602a610>, <_ast.Str object at 0x10602a2d0>, <_ast.Str object at 0x10602a7d0>, <_ast.Str object at 0x10602ae90>, <_ast.Str object at 0x10602aa90>](0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"drop_columns(0)$0" -> "[<_ast.Str object at 0x10602a610>, <_ast.Str object at 0x10602a2d0>, <_ast.Str object at 0x10602a7d0>, <_ast.Str object at 0x10602ae90>, <_ast.Str object at 0x10602aa90>](0)" [label = "assign"]
"train(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"train(0)$0" -> "train(0)" [label = "drop"]
"train(0)$0" -> "drop_columns(0)$0" [label = "drop"]
"1(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"train(0)$0" -> "1(0)" [label = "drop"]
"test(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"test(0)$0" -> "test(0)" [label = "drop"]
"test(0)$0" -> "drop_columns(0)$0" [label = "drop"]
"test(0)$0" -> "1(0)" [label = "drop"]
"c(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"c(0)" -> "train(0)$0" [label = "Iter"]
"c(0)" -> "train(0)$0" [label = "Iter"]
"object(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"c(0)" -> "object(0)" [label = "Iter"]
"train(0)$1" -> "train(0)$0" [label = "assign"]
"train(0)$1" -> "train(0)$0" [label = "assign"]
"train(0)$1" -> "c(0)" [label = "assign"]
"0(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"train(0)$1" -> "0(0)" [label = "assign"]
"c(0)" -> "test(0)$0" [label = "Iter"]
"c(0)" -> "test(0)$0" [label = "Iter"]
"c(0)" -> "object(0)" [label = "Iter"]
"test(0)$1" -> "test(0)$0" [label = "assign"]
"test(0)$1" -> "test(0)$0" [label = "assign"]
"test(0)$1" -> "c(0)" [label = "assign"]
"test(0)$1" -> "0(0)" [label = "assign"]
"train(0)$2" -> "train(0)$1" [label = "fillna"]
"train(0)$2" -> "train(0)$2" [label = "fillna"]
"test(0)$2" -> "test(0)$1" [label = "fillna"]
"test(0)$2" -> "train(0)$2" [label = "fillna"]
"boruta" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "import"]
"BorutaPy" -> "boruta" [label = "import"]
"BorutaPy(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"BorutaPy(0)" -> "BorutaPy" [label = "assign"]
"X(0)$0" -> "train(0)$2" [label = "drop"]
"[<_ast.Str object at 0x105b2c450>, <_ast.Str object at 0x105b2ce50>](0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"X(0)$0" -> "[<_ast.Str object at 0x105b2c450>, <_ast.Str object at 0x105b2ce50>](0)" [label = "drop"]
"X(0)$0" -> "1(0)" [label = "drop"]
"y(0)$0" -> "train(0)$2" [label = "assign"]
"target(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"y(0)$0" -> "target(0)" [label = "assign"]
"X(0)$1" -> "X(0)$0" [label = "assign"]
"y(0)$1" -> "y(0)$0" [label = "assign"]
"y(0)$2" -> "y(0)$1" [label = "ravel"]
"rf(0)$0" -> "1(0)" [label = "RandomForestClassifier"]
"balanced(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"rf(0)$0" -> "balanced(0)" [label = "RandomForestClassifier"]
"5(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"rf(0)$0" -> "5(0)" [label = "RandomForestClassifier"]
"rf(0)$1" -> "rf(0)$0" [label = "fit"]
"rf(0)$1" -> "X(0)$1" [label = "fit"]
"rf(0)$1" -> "y(0)$2" [label = "fit"]
"feat_selector(0)$0" -> "rf(0)$1" [label = "BorutaPy"]
"100(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"feat_selector(0)$0" -> "100(0)" [label = "BorutaPy"]
"2(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"feat_selector(0)$0" -> "2(0)" [label = "BorutaPy"]
"feat_selector(0)$0" -> "1(0)" [label = "BorutaPy"]
"feat_selector(0)$1" -> "feat_selector(0)$0" [label = "fit"]
"feat_selector(0)$1" -> "X(0)$1" [label = "fit"]
"feat_selector(0)$1" -> "y(0)$2" [label = "fit"]
"X_filtered(0)$0" -> "feat_selector(0)$1" [label = "transform"]
"X_filtered(0)$0" -> "X(0)$1" [label = "transform"]
"train_x(0)$0" -> "X_filtered(0)$0" [label = "copy"]
"train_y(0)$0" -> "train(0)$2" [label = "assign"]
"train_y(0)$0" -> "target(0)" [label = "assign"]
"train_y(0)$1" -> "train_y(0)$0" [label = "to_categorical"]
"scaler(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"train_x(0)$1" -> "scaler(0)" [label = "fit_transform"]
"train_x(0)$1" -> "train_x(0)$1" [label = "fit_transform"]
"gc(0)$0" -> "gc(0)" [label = "collect"]
"x_tr(2)" -> "get_nn[0]" [label = "_argToVar"]
"y_tr(2)" -> "get_nn[1]" [label = "_argToVar"]
"x_val(2)" -> "get_nn[2]" [label = "_argToVar"]
"y_val(2)" -> "get_nn[3]" [label = "_argToVar"]
"shape(2)" -> "get_nn[4]" [label = "_argToVar"]
"K(2)$0" -> "K(2)" [label = "clear_session"]
"inp(2)$0" -> "x_tr(2)" [label = "Input"]
"inp(2)$0" -> "1(2)" [label = "Input"]
"x(2)$0" -> "Dense(2)" [label = "assign"]
"x(2)$0" -> "512(2)" [label = "assign"]
"x(2)$0" -> "x_tr(2)" [label = "assign"]
"x(2)$0" -> "1(2)" [label = "assign"]
"x(2)$0" -> "relu(2)" [label = "assign"]
"x(2)$0" -> "inp(2)$0" [label = "assign"]
"x(2)$1" -> "Dropout(2)" [label = "assign"]
"x(2)$1" -> "0.5(2)" [label = "assign"]
"x(2)$1" -> "x(2)$1" [label = "assign"]
"x(2)$2" -> "BatchNormalization(2)" [label = "assign"]
"x(2)$2" -> "x(2)$2" [label = "assign"]
"x(2)$3" -> "Dense(2)" [label = "assign"]
"x(2)$3" -> "256(2)" [label = "assign"]
"x(2)$3" -> "relu(2)" [label = "assign"]
"x(2)$3" -> "x(2)$3" [label = "assign"]
"x(2)$4" -> "Dropout(2)" [label = "assign"]
"x(2)$4" -> "0.5(2)" [label = "assign"]
"x(2)$4" -> "x(2)$4" [label = "assign"]
"x(2)$5" -> "BatchNormalization(2)" [label = "assign"]
"x(2)$5" -> "x(2)$5" [label = "assign"]
"x(2)$6" -> "Dense(2)" [label = "assign"]
"x(2)$6" -> "32(2)" [label = "assign"]
"x(2)$6" -> "relu(2)" [label = "assign"]
"x(2)$6" -> "x(2)$6" [label = "assign"]
"x(2)$7" -> "Dropout(2)" [label = "assign"]
"x(2)$7" -> "0.1(2)" [label = "assign"]
"x(2)$7" -> "x(2)$7" [label = "assign"]
"x(2)$8" -> "BatchNormalization(2)" [label = "assign"]
"x(2)$8" -> "x(2)$8" [label = "assign"]
"x(2)$9" -> "Dense(2)" [label = "assign"]
"x(2)$9" -> "16(2)" [label = "assign"]
"x(2)$9" -> "relu(2)" [label = "assign"]
"x(2)$9" -> "x(2)$9" [label = "assign"]
"x(2)$10" -> "Dropout(2)" [label = "assign"]
"x(2)$10" -> "0.25(2)" [label = "assign"]
"x(2)$10" -> "x(2)$10" [label = "assign"]
"x(2)$11" -> "BatchNormalization(2)" [label = "assign"]
"x(2)$11" -> "x(2)$11" [label = "assign"]
"out(2)$0" -> "Dense(2)" [label = "assign"]
"out(2)$0" -> "2(2)" [label = "assign"]
"out(2)$0" -> "softmax(2)" [label = "assign"]
"out(2)$0" -> "x(2)$11" [label = "assign"]
"model(2)$0" -> "inp(2)$0" [label = "Model"]
"model(2)$0" -> "out(2)$0" [label = "Model"]
"model(2)$1" -> "model(2)$0" [label = "compile"]
"es(2)$0" -> "val_loss(2)" [label = "EarlyStopping"]
"es(2)$0" -> "min(2)" [label = "EarlyStopping"]
"es(2)$0" -> "1(2)" [label = "EarlyStopping"]
"es(2)$0" -> "20(2)" [label = "EarlyStopping"]
"mc(2)$0" -> "best_model.h5(2)" [label = "ModelCheckpoint"]
"mc(2)$0" -> "val_loss(2)" [label = "ModelCheckpoint"]
"mc(2)$0" -> "min(2)" [label = "ModelCheckpoint"]
"mc(2)$0" -> "1(2)" [label = "ModelCheckpoint"]
"rl(2)$0" -> "val_loss(2)" [label = "ReduceLROnPlateau"]
"rl(2)$0" -> "0.1(2)" [label = "ReduceLROnPlateau"]
"rl(2)$0" -> "10(2)" [label = "ReduceLROnPlateau"]
"rl(2)$0" -> "1(2)" [label = "ReduceLROnPlateau"]
"rl(2)$0" -> "0.0001(2)" [label = "ReduceLROnPlateau"]
"rl(2)$0" -> "min(2)" [label = "ReduceLROnPlateau"]
"model(2)$2" -> "model(2)$1" [label = "fit"]
"model(2)$2" -> "x_tr(2)" [label = "fit"]
"model(2)$2" -> "y_tr(2)" [label = "fit"]
"model(2)$3" -> "model(2)$2" [label = "load_weights"]
"model(2)$3" -> "best_model.h5(2)" [label = "load_weights"]
"y_pred(2)$0" -> "model(2)$3" [label = "predict"]
"y_pred(2)$0" -> "x_val(2)" [label = "predict"]
"y_valid(2)$0" -> "y_val(2)" [label = "assign"]
"logloss(2)$0" -> "y_valid(2)$0" [label = "log_loss"]
"logloss(2)$0" -> "y_pred(2)$0" [label = "log_loss"]
"logloss(2)$0" -> "1e-15(2)" [label = "log_loss"]
"loop(0)$0" -> "2(0)" [label = "assign"]
"fold(0)$0" -> "5(0)" [label = "assign"]
"oof_nn(0)$0" -> "np(0)$0" [label = "zeros"]
"[<_ast.Name object at 0x105b25bd0>, <_ast.Subscript object at 0x105b25610>, <_ast.Subscript object at 0x105b25690>](0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"oof_nn(0)$0" -> "[<_ast.Name object at 0x105b25bd0>, <_ast.Subscript object at 0x105b25610>, <_ast.Subscript object at 0x105b25690>](0)" [label = "zeros"]
"[](0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"models_nn(0)$0" -> "[](0)" [label = "assign"]
"logloss_csv_nn(0)$0" -> "[](0)" [label = "assign"]
"range(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"k(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"k(0)" -> "range(0)" [label = "Iter"]
"k(0)" -> "loop(0)$0" [label = "Iter"]
"kfold(0)$0" -> "fold(0)$0" [label = "KFold"]
"42(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"kfold(0)$0" -> "42(0)" [label = "KFold"]
"kfold(0)$0" -> "k(0)" [label = "KFold"]
"enumerate(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"k_fold(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"k_fold(0)" -> "enumerate(0)" [label = "Iter"]
"tr_inds(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"tr_inds(0)" -> "enumerate(0)" [label = "Iter"]
"val_inds(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"val_inds(0)" -> "enumerate(0)" [label = "Iter"]
"k_fold(0)" -> "kfold(0)$0" [label = "Iter"]
"tr_inds(0)" -> "kfold(0)$0" [label = "Iter"]
"val_inds(0)" -> "kfold(0)$0" [label = "Iter"]
"k_fold(0)" -> "train_y(0)$1" [label = "Iter"]
"tr_inds(0)" -> "train_y(0)$1" [label = "Iter"]
"val_inds(0)" -> "train_y(0)$1" [label = "Iter"]
"-----------(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"print[0]" -> "-----------(0)" [label = "print"]
"Loop (0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"print[0]" -> "Loop (0)" [label = "print"]
"print[1]" -> "k(0)" [label = "print"]
"print[2]" -> "1(0)" [label = "print"]
"/(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"print[3]" -> "/(0)" [label = "print"]
"print[4]" -> "loop(0)$0" [label = "print"]
" Fold (0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"print[5]" -> " Fold (0)" [label = "print"]
"print[6]" -> "k_fold(0)" [label = "print"]
"print[7]" -> "1(0)" [label = "print"]
"print[8]" -> "/(0)" [label = "print"]
"print[9]" -> "fold(0)$0" [label = "print"]
"print[0]" -> "-----------(0)" [label = "print"]
"tr_x(0)$0" -> "train_x(0)$1" [label = "assign"]
"tr_y(0)$0" -> "train_x(0)$1" [label = "assign"]
"tr_x(0)$0" -> "tr_inds(0)" [label = "assign"]
"tr_y(0)$0" -> "tr_inds(0)" [label = "assign"]
"tr_x(0)$0" -> "train_y(0)$1" [label = "assign"]
"tr_y(0)$0" -> "train_y(0)$1" [label = "assign"]
"tr_x(0)$0" -> "tr_inds(0)" [label = "assign"]
"tr_y(0)$0" -> "tr_inds(0)" [label = "assign"]
"val_x(0)$0" -> "train_x(0)$1" [label = "assign"]
"val_y(0)$0" -> "train_x(0)$1" [label = "assign"]
"val_x(0)$0" -> "val_inds(0)" [label = "assign"]
"val_y(0)$0" -> "val_inds(0)" [label = "assign"]
"val_x(0)$0" -> "train_y(0)$1" [label = "assign"]
"val_y(0)$0" -> "train_y(0)$1" [label = "assign"]
"val_x(0)$0" -> "val_inds(0)" [label = "assign"]
"val_y(0)$0" -> "val_inds(0)" [label = "assign"]
"nn(0)$0" -> "tr_x(0)$0" [label = "get_nn"]
"logloss_nn(0)$0" -> "tr_x(0)$0" [label = "get_nn"]
"nn(0)$0" -> "tr_y(0)$0" [label = "get_nn"]
"logloss_nn(0)$0" -> "tr_y(0)$0" [label = "get_nn"]
"nn(0)$0" -> "val_x(0)$0" [label = "get_nn"]
"logloss_nn(0)$0" -> "val_x(0)$0" [label = "get_nn"]
"nn(0)$0" -> "val_y(0)$0" [label = "get_nn"]
"logloss_nn(0)$0" -> "val_y(0)$0" [label = "get_nn"]
"nn(0)$0" -> "val_x(0)$0" [label = "get_nn"]
"logloss_nn(0)$0" -> "val_x(0)$0" [label = "get_nn"]
"nn(0)$0" -> "0(0)" [label = "get_nn"]
"logloss_nn(0)$0" -> "0(0)" [label = "get_nn"]
"models_nn(0)$1" -> "models_nn(0)$0" [label = "append"]
"models_nn(0)$1" -> "nn(0)$0" [label = "append"]
"the %d fold Log-Loss (NN) is %f(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"print[0]" -> "the %d fold Log-Loss (NN) is %f(0)" [label = "print"]
"print[1]" -> "k_fold(0)" [label = "print"]
"print[2]" -> "1(0)" [label = "print"]
"print[3]" -> "logloss_nn(0)$0" [label = "print"]
"logloss_csv_nn(0)$1" -> "logloss_csv_nn(0)$0" [label = "append"]
"logloss_csv_nn(0)$1" -> "logloss_nn(0)$0" [label = "append"]
"oof_nn(0)$1" -> "oof_nn(0)$0" [label = "predict"]
"oof_nn(0)$1" -> "nn(0)$0" [label = "predict"]
"oof_nn(0)$1" -> "val_x(0)$0" [label = "predict"]
"PARTIAL: mean Log-Loss (NN) is %f(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"print[0]" -> "PARTIAL: mean Log-Loss (NN) is %f(0)" [label = "print"]
"print[1]" -> "np(0)$0" [label = "print"]
"print[2]" -> "logloss_csv_nn(0)$1" [label = "print"]
"loss_oof_nn(0)$0" -> "[](0)" [label = "assign"]
"k(0)" -> "range(0)" [label = "Iter"]
"k(0)" -> "loop(0)$0" [label = "Iter"]
"loss_oof_nn(0)$1" -> "loss_oof_nn(0)$0" [label = "append"]
"loss_oof_nn(0)$1" -> "log_loss(0)" [label = "append"]
"loss_oof_nn(0)$1" -> "train_y(0)$1" [label = "append"]
"loss_oof_nn(0)$1" -> "oof_nn(0)$1" [label = "append"]
"loss_oof_nn(0)$1" -> "k(0)" [label = "append"]
"1e-15(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"loss_oof_nn(0)$1" -> "1e-15(0)" [label = "append"]
"Média log-loss:  %f(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"print[0]" -> "Média log-loss:  %f(0)" [label = "print"]
"print[1]" -> "np(0)$0" [label = "print"]
"print[2]" -> "logloss_csv_nn(0)$1" [label = "print"]
"Média OOF log-loss: %f(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"print[0]" -> "Média OOF log-loss: %f(0)" [label = "print"]
"print[1]" -> "np(0)$0" [label = "print"]
"print[2]" -> "loss_oof_nn(0)$1" [label = "print"]
"plt(0)$0" -> "plt(0)" [label = "figure"]
"plt(0)$1" -> "plt(0)$0" [label = "subplot"]
"plt(0)$1" -> "2(0)" [label = "subplot"]
"plt(0)$1" -> "1(0)" [label = "subplot"]
"plt(0)$1" -> "1(0)" [label = "subplot"]
"plt(0)$2" -> "plt(0)$1" [label = "plot"]
"plt(0)$2" -> "models_nn(0)$1" [label = "plot"]
"plt(0)$2" -> "0(0)" [label = "plot"]
"loss(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"plt(0)$2" -> "loss(0)" [label = "plot"]
"o-(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"plt(0)$2" -> "o-(0)" [label = "plot"]
"plt(0)$3" -> "plt(0)$2" [label = "plot"]
"plt(0)$3" -> "models_nn(0)$1" [label = "plot"]
"plt(0)$3" -> "0(0)" [label = "plot"]
"val_loss(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"plt(0)$3" -> "val_loss(0)" [label = "plot"]
"plt(0)$3" -> "o-(0)" [label = "plot"]
"plt(0)$4" -> "plt(0)$3" [label = "axhline"]
"plt(0)$4" -> "1(0)" [label = "axhline"]
"plt(0)$5" -> "plt(0)$4" [label = "legend"]
"plt(0)$6" -> "plt(0)$5" [label = "subplot"]
"plt(0)$6" -> "2(0)" [label = "subplot"]
"plt(0)$6" -> "1(0)" [label = "subplot"]
"plt(0)$6" -> "2(0)" [label = "subplot"]
"plt(0)$7" -> "plt(0)$6" [label = "plot"]
"plt(0)$7" -> "models_nn(0)$1" [label = "plot"]
"plt(0)$7" -> "0(0)" [label = "plot"]
"categorical_accuracy(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"plt(0)$7" -> "categorical_accuracy(0)" [label = "plot"]
"plt(0)$7" -> "o-(0)" [label = "plot"]
"plt(0)$8" -> "plt(0)$7" [label = "plot"]
"plt(0)$8" -> "models_nn(0)$1" [label = "plot"]
"plt(0)$8" -> "0(0)" [label = "plot"]
"val_categorical_accuracy(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"plt(0)$8" -> "val_categorical_accuracy(0)" [label = "plot"]
"plt(0)$8" -> "o-(0)" [label = "plot"]
"plt(0)$9" -> "plt(0)$8" [label = "axhline"]
"0.7(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"plt(0)$9" -> "0.7(0)" [label = "axhline"]
"plt(0)$10" -> "plt(0)$9" [label = "legend"]
"plt(0)$11" -> "plt(0)$10" [label = "show"]
"new_test(0)$0" -> "test(0)$2" [label = "assign"]
"[<_ast.Str object at 0x105bce8d0>](0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"new_test(0)$0" -> "[<_ast.Str object at 0x105bce8d0>](0)" [label = "assign"]
"new_test(0)$0" -> "1(0)" [label = "assign"]
"test_filtered(0)$0" -> "feat_selector(0)$1" [label = "transform"]
"test_filtered(0)$0" -> "new_test(0)$0" [label = "transform"]
"test_filtered(0)$1" -> "scaler(0)" [label = "fit_transform"]
"test_filtered(0)$1" -> "test_filtered(0)$1" [label = "fit_transform"]
"model(3)" -> "predict_proba[0]" [label = "_argToVar"]
"x(3)" -> "predict_proba[1]" [label = "_argToVar"]
"batch_size(3)" -> "predict_proba[2]" [label = "_argToVar"]
"verbose(3)" -> "predict_proba[3]" [label = "_argToVar"]
"preds(3)$0" -> "model(3)" [label = "predict"]
"preds(3)$0" -> "x(3)" [label = "predict"]
"preds(3)$0" -> "batch_size(3)" [label = "predict"]
"preds(3)$0" -> "verbose(3)" [label = "predict"]
"warnings(3)$0" -> "warnings(3)" [label = "warn"]
"warnings(3)$0" -> "Network returning invalid probability values.(3)" [label = "warn"]
"x_te(4)" -> "predict[0]" [label = "_argToVar"]
"models_nn(4)" -> "predict[1]" [label = "_argToVar"]
"model_num_nn(4)$0" -> "models_nn(4)" [label = "len"]
"k(4)" -> "enumerate(4)" [label = "Iter"]
"m(4)" -> "enumerate(4)" [label = "Iter"]
"k(4)" -> "models_nn(4)" [label = "Iter"]
"m(4)" -> "models_nn(4)" [label = "Iter"]
"y_pred_nn(4)$0" -> "m(4)" [label = "predict_proba"]
"y_pred_nn(4)$0" -> "x_te(4)" [label = "predict_proba"]
"y_pred_nn(4)$0" -> "1024(4)" [label = "predict_proba"]
"y_pred_nn(4)$1" -> "predict_proba(4)" [label = "Add"]
"y_pred_nn(4)$1" -> "y_pred_nn(4)$0" [label = "Add"]
"y_pred_nn(4)$1" -> "m(4)" [label = "Add"]
"y_pred_nn(4)$1" -> "y_pred_nn(4)$0" [label = "Add"]
"y_pred_nn(4)$1" -> "x_te(4)" [label = "Add"]
"y_pred_nn(4)$1" -> "y_pred_nn(4)$0" [label = "Add"]
"y_pred_nn(4)$1" -> "1024(4)" [label = "Add"]
"y_pred_nn(4)$1" -> "y_pred_nn(4)$0" [label = "Add"]
"y_pred_nn(4)$2" -> "y_pred_nn(4)$1" [label = "Div"]
"y_pred_nn(4)$2" -> "model_num_nn(4)$0" [label = "Div"]
"test_pred(0)$0" -> "test_filtered(0)$1" [label = "predict"]
"test_pred(0)$0" -> "models_nn(0)$1" [label = "predict"]
"submission(0)$0" -> "pd(0)$1" [label = "read_csv"]
"/kaggle/input/competicao-dsa-machine-learning-dec-2019/sample_submission.csv(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"submission(0)$0" -> "/kaggle/input/competicao-dsa-machine-learning-dec-2019/sample_submission.csv(0)" [label = "read_csv"]
"submission(0)$1" -> "submission(0)$0" [label = "assign"]
"submission(0)$1" -> "test_pred(0)$0" [label = "assign"]
"submission(0)$1" -> "1(0)" [label = "assign"]
"print[0]" -> "submission(0)$1" [label = "print"]
"submission(0)$2" -> "submission(0)$1" [label = "head"]
"submission(0)$3" -> "submission(0)$2" [label = "to_csv"]
"submission_nn_v1.0.2.csv(0)" -> "kernel-nn-multi-layer-perceptron.ipynb" [label = "appears"]
"submission(0)$3" -> "submission_nn_v1.0.2.csv(0)" [label = "to_csv"]
"submission(0)$4" -> "submission(0)$3" [label = "value_counts"]
"plt(0)$12" -> "plt(0)$11" [label = "hist"]
"plt(0)$12" -> "submission(0)$4" [label = "hist"]
"plt(0)$13" -> "plt(0)$12" [label = "show"]
}