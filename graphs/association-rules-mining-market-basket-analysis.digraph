digraph { 
"orders(0)$0" -> "np(0)" [label = "array"]
"orders(0)$0" -> "[<_ast.List object at 0x10341dcd0>, <_ast.List object at 0x10341d990>, <_ast.List object at 0x10341d390>, <_ast.List object at 0x10341dc90>, <_ast.List object at 0x10341d510>](0)" [label = "array"]
"orders(0)$0" -> "object(0)" [label = "array"]
"order_item(1)" -> "get_item_pairs[0]" [label = "_argToVar"]
"order_id(1)" -> "groupby(1)" [label = "Iter"]
"order_object(1)" -> "groupby(1)" [label = "Iter"]
"order_id(1)" -> "orders(1)" [label = "Iter"]
"order_object(1)" -> "orders(1)" [label = "Iter"]
"order_id(1)" -> "x(1)" [label = "Iter"]
"order_object(1)" -> "x(1)" [label = "Iter"]
"order_id(1)" -> "0(1)" [label = "Iter"]
"order_object(1)" -> "0(1)" [label = "Iter"]
"item_list(1)$0" -> "item(1)" [label = "eq"]
"item_list(1)$0" -> "1(1)" [label = "eq"]
"item_list(1)$0" -> "item(1)" [label = "eq"]
"item_list(1)$0" -> "order_object(1)" [label = "eq"]
"item_pair(1)" -> "combinations(1)" [label = "Iter"]
"item_pair(1)" -> "item_list(1)$0" [label = "Iter"]
"item_pair(1)" -> "2(1)" [label = "Iter"]
"Counter[0]" -> "get_item_pairs(0)" [label = "Counter"]
"Counter[1]" -> "orders(0)$0" [label = "Counter"]
"obj(2)" -> "size[0]" [label = "_argToVar"]
"orders(0)$1" -> "pd(0)" [label = "read_csv"]
"orders(0)$1" -> "../input/order_products__prior.csv(0)" [label = "read_csv"]
"print[0]" -> "orders -- dimensions: {0};   size: {1}(0)" [label = "print"]
"print[1]" -> "orders(0)$1" [label = "print"]
"print[2]" -> "size(0)" [label = "print"]
"print[3]" -> "orders(0)$1" [label = "print"]
"display[0]" -> "orders(0)$1" [label = "display"]
"orders(0)$2" -> "orders(0)$1" [label = "rename"]
"orders(0)$2" -> "order_id(0)" [label = "rename"]
"orders(0)$2" -> "product_id(0)" [label = "rename"]
"orders(0)$2" -> "item_id(0)" [label = "rename"]
"display[0]" -> "orders(0)$2" [label = "display"]
"display[1]" -> "10(0)" [label = "display"]
"type[0]" -> "orders(0)$2" [label = "type"]
"print[0]" -> "dimensions: {0};   size: {1};   unique_orders: {2};   unique_items: {3}(0)" [label = "print"]
"print[1]" -> "orders(0)$2" [label = "print"]
"print[2]" -> "size(0)" [label = "print"]
"print[3]" -> "orders(0)$2" [label = "print"]
"print[4]" -> "len(0)" [label = "print"]
"print[5]" -> "orders(0)$2" [label = "print"]
"print[6]" -> "len(0)" [label = "print"]
"print[7]" -> "orders(0)$2" [label = "print"]
"iterable(3)" -> "freq[0]" [label = "_argToVar"]
"order_item(4)" -> "order_count[0]" [label = "_argToVar"]
"order_item(5)" -> "get_item_pairs[0]" [label = "_argToVar"]
"order_item(5)$0" -> "order_item(5)" [label = "as_matrix"]
"order_id(5)" -> "groupby(5)" [label = "Iter"]
"order_object(5)" -> "groupby(5)" [label = "Iter"]
"order_id(5)" -> "order_item(5)$0" [label = "Iter"]
"order_object(5)" -> "order_item(5)$0" [label = "Iter"]
"order_id(5)" -> "x(5)" [label = "Iter"]
"order_object(5)" -> "x(5)" [label = "Iter"]
"order_id(5)" -> "0(5)" [label = "Iter"]
"order_object(5)" -> "0(5)" [label = "Iter"]
"item_list(5)$0" -> "item(5)" [label = "eq"]
"item_list(5)$0" -> "1(5)" [label = "eq"]
"item_list(5)$0" -> "item(5)" [label = "eq"]
"item_list(5)$0" -> "order_object(5)" [label = "eq"]
"item_pair(5)" -> "combinations(5)" [label = "Iter"]
"item_pair(5)" -> "item_list(5)$0" [label = "Iter"]
"item_pair(5)" -> "2(5)" [label = "Iter"]
"item_pairs(6)" -> "merge_item_stats[0]" [label = "_argToVar"]
"item_stats(6)" -> "merge_item_stats[1]" [label = "_argToVar"]
"rules(7)" -> "merge_item_name[0]" [label = "_argToVar"]
"item_name(7)" -> "merge_item_name[1]" [label = "_argToVar"]
"columns(7)$0" -> "[<_ast.Str object at 0x103449590>, <_ast.Str object at 0x103449790>, <_ast.Str object at 0x103449a90>, <_ast.Str object at 0x103449b50>, <_ast.Str object at 0x1034494d0>, <_ast.Str object at 0x1034496d0>, <_ast.Str object at 0x103449410>, <_ast.Str object at 0x1034492d0>, <_ast.Str object at 0x103449890>, <_ast.Str object at 0x103449490>, <_ast.Str object at 0x103449810>](7)" [label = "eq"]
"rules(7)$0" -> "rules(7)" [label = "merge"]
"rules(7)$0" -> "item_name(7)" [label = "merge"]
"rules(7)$0" -> "item_name(7)" [label = "merge"]
"rules(7)$0" -> "itemA(7)" [label = "merge"]
"rules(7)$0" -> "item_A(7)" [label = "merge"]
"rules(7)$0" -> "item_id(7)" [label = "merge"]
"rules(7)$0" -> "item_name(7)" [label = "merge"]
"rules(7)$0" -> "item_name(7)" [label = "merge"]
"rules(7)$0" -> "itemB(7)" [label = "merge"]
"rules(7)$0" -> "item_B(7)" [label = "merge"]
"rules(7)$0" -> "item_id(7)" [label = "merge"]
"order_item(8)" -> "association_rules[0]" [label = "_argToVar"]
"min_support(8)" -> "association_rules[1]" [label = "_argToVar"]
"print[0]" -> "Starting order_item: {:22d}(8)" [label = "print"]
"print[1]" -> "len(8)" [label = "print"]
"print[2]" -> "order_item(8)" [label = "print"]
"item_stats(8)$0" -> "freq(8)" [label = "to_frame"]
"item_stats(8)$0" -> "order_item(8)" [label = "to_frame"]
"item_stats(8)$0" -> "freq(8)" [label = "to_frame"]
"item_stats(8)$1" -> "item_stats(8)$0" [label = "Mult"]
"item_stats(8)$1" -> "item_stats(8)$0" [label = "Mult"]
"item_stats(8)$1" -> "freq(8)" [label = "Mult"]
"item_stats(8)$1" -> "order_count(8)" [label = "Mult"]
"item_stats(8)$1" -> "order_item(8)" [label = "Mult"]
"item_stats(8)$1" -> "100(8)" [label = "Mult"]
"qualifying_items(8)$0" -> "item_stats(8)$1" [label = "eq"]
"qualifying_items(8)$0" -> "item_stats(8)$1" [label = "eq"]
"qualifying_items(8)$0" -> "support(8)" [label = "eq"]
"qualifying_items(8)$0" -> "min_support(8)" [label = "eq"]
"order_item(8)$0" -> "order_item(8)" [label = "eq"]
"order_item(8)$0" -> "order_item(8)$0" [label = "eq"]
"order_item(8)$0" -> "qualifying_items(8)$0" [label = "eq"]
"print[0]" -> "Items with support >= {}: {:15d}(8)" [label = "print"]
"print[1]" -> "min_support(8)" [label = "print"]
"print[2]" -> "len(8)" [label = "print"]
"print[3]" -> "qualifying_items(8)$0" [label = "print"]
"print[0]" -> "Remaining order_item: {:21d}(8)" [label = "print"]
"print[1]" -> "len(8)" [label = "print"]
"print[2]" -> "order_item(8)$0" [label = "print"]
"order_size(8)$0" -> "order_item(8)$0" [label = "freq"]
"qualifying_orders(8)$0" -> "order_size(8)$0" [label = "eq"]
"qualifying_orders(8)$0" -> "order_size(8)$0" [label = "eq"]
"qualifying_orders(8)$0" -> "2(8)" [label = "eq"]
"order_item(8)$1" -> "order_item(8)$0" [label = "eq"]
"order_item(8)$1" -> "order_item(8)$1" [label = "eq"]
"order_item(8)$1" -> "qualifying_orders(8)$0" [label = "eq"]
"print[0]" -> "Remaining orders with 2+ items: {:11d}(8)" [label = "print"]
"print[1]" -> "len(8)" [label = "print"]
"print[2]" -> "qualifying_orders(8)$0" [label = "print"]
"print[0]" -> "Remaining order_item: {:21d}(8)" [label = "print"]
"print[1]" -> "len(8)" [label = "print"]
"print[2]" -> "order_item(8)$1" [label = "print"]
"item_stats(8)$2" -> "freq(8)" [label = "to_frame"]
"item_stats(8)$2" -> "order_item(8)$1" [label = "to_frame"]
"item_stats(8)$2" -> "freq(8)" [label = "to_frame"]
"item_stats(8)$3" -> "item_stats(8)$2" [label = "Mult"]
"item_stats(8)$3" -> "item_stats(8)$2" [label = "Mult"]
"item_stats(8)$3" -> "freq(8)" [label = "Mult"]
"item_stats(8)$3" -> "order_count(8)" [label = "Mult"]
"item_stats(8)$3" -> "order_item(8)$1" [label = "Mult"]
"item_stats(8)$3" -> "100(8)" [label = "Mult"]
"item_pair_gen(8)$0" -> "order_item(8)$1" [label = "get_item_pairs"]
"item_pairs(8)$0" -> "freq(8)" [label = "to_frame"]
"item_pairs(8)$0" -> "item_pair_gen(8)$0" [label = "to_frame"]
"item_pairs(8)$0" -> "freqAB(8)" [label = "to_frame"]
"item_pairs(8)$1" -> "item_pairs(8)$0" [label = "Mult"]
"item_pairs(8)$1" -> "item_pairs(8)$0" [label = "Mult"]
"item_pairs(8)$1" -> "freqAB(8)" [label = "Mult"]
"item_pairs(8)$1" -> "len(8)" [label = "Mult"]
"item_pairs(8)$1" -> "qualifying_orders(8)$0" [label = "Mult"]
"item_pairs(8)$1" -> "100(8)" [label = "Mult"]
"print[0]" -> "Item pairs: {:31d}(8)" [label = "print"]
"print[1]" -> "len(8)" [label = "print"]
"print[2]" -> "item_pairs(8)$1" [label = "print"]
"item_pairs(8)$2" -> "item_pairs(8)$1" [label = "eq"]
"item_pairs(8)$2" -> "item_pairs(8)$2" [label = "eq"]
"item_pairs(8)$2" -> "supportAB(8)" [label = "eq"]
"item_pairs(8)$2" -> "min_support(8)" [label = "eq"]
"print[0]" -> "Item pairs with support >= {}: {:10d}
(8)" [label = "print"]
"print[1]" -> "min_support(8)" [label = "print"]
"print[2]" -> "len(8)" [label = "print"]
"print[3]" -> "item_pairs(8)$2" [label = "print"]
"item_pairs(8)$3" -> "item_pairs(8)$2" [label = "rename"]
"item_pairs(8)$3" -> "level_0(8)" [label = "rename"]
"item_pairs(8)$3" -> "level_1(8)" [label = "rename"]
"item_pairs(8)$3" -> "item_A(8)" [label = "rename"]
"item_pairs(8)$3" -> "item_B(8)" [label = "rename"]
"item_pairs(8)$4" -> "item_pairs(8)$3" [label = "merge_item_stats"]
"item_pairs(8)$4" -> "item_stats(8)$3" [label = "merge_item_stats"]
"item_pairs(8)$5" -> "item_pairs(8)$4" [label = "Div"]
"item_pairs(8)$5" -> "item_pairs(8)$4" [label = "Div"]
"item_pairs(8)$5" -> "supportAB(8)" [label = "Div"]
"item_pairs(8)$5" -> "item_pairs(8)$5" [label = "Div"]
"item_pairs(8)$5" -> "supportA(8)" [label = "Div"]
"item_pairs(8)$6" -> "item_pairs(8)$5" [label = "Div"]
"item_pairs(8)$6" -> "item_pairs(8)$5" [label = "Div"]
"item_pairs(8)$6" -> "supportAB(8)" [label = "Div"]
"item_pairs(8)$6" -> "item_pairs(8)$6" [label = "Div"]
"item_pairs(8)$6" -> "supportB(8)" [label = "Div"]
"item_pairs(8)$7" -> "item_pairs(8)$6" [label = "Div"]
"item_pairs(8)$7" -> "item_pairs(8)$6" [label = "Div"]
"item_pairs(8)$7" -> "supportAB(8)" [label = "Div"]
"item_pairs(8)$7" -> "item_pairs(8)$7" [label = "Div"]
"item_pairs(8)$7" -> "supportA(8)" [label = "Div"]
"item_pairs(8)$7" -> "item_pairs(8)$7" [label = "Div"]
"item_pairs(8)$7" -> "supportB(8)" [label = "Div"]
"rules(0)$0" -> "orders(0)$2" [label = "association_rules"]
"rules(0)$0" -> "0.01(0)" [label = "association_rules"]
"item_name(0)$0" -> "pd(0)" [label = "read_csv"]
"item_name(0)$0" -> "../input/products.csv(0)" [label = "read_csv"]
"item_name(0)$1" -> "item_name(0)$0" [label = "rename"]
"item_name(0)$1" -> "product_id(0)" [label = "rename"]
"item_name(0)$1" -> "product_name(0)" [label = "rename"]
"item_name(0)$1" -> "item_id(0)" [label = "rename"]
"item_name(0)$1" -> "item_name(0)$1" [label = "rename"]
"rules_final(0)$0" -> "merge_item_name(0)" [label = "sort_values"]
"rules_final(0)$0" -> "rules(0)$0" [label = "sort_values"]
"rules_final(0)$0" -> "item_name(0)$1" [label = "sort_values"]
"rules_final(0)$0" -> "lift(0)" [label = "sort_values"]
"display[0]" -> "rules_final(0)$0" [label = "display"]
}