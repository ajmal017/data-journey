digraph { 
"numpy" -> "bert-and-bidaf.ipynb" [label = "import"]
"np(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"np(0)" -> "numpy" [label = "assign"]
"pandas" -> "bert-and-bidaf.ipynb" [label = "import"]
"pd(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"pd(0)" -> "pandas" [label = "assign"]
"os" -> "bert-and-bidaf.ipynb" [label = "import"]
"os(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"os(0)" -> "os" [label = "assign"]
"sys" -> "bert-and-bidaf.ipynb" [label = "import"]
"sys(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"sys(0)" -> "sys" [label = "assign"]
"random" -> "bert-and-bidaf.ipynb" [label = "import"]
"random(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"random(0)" -> "random" [label = "assign"]
"keras" -> "bert-and-bidaf.ipynb" [label = "import"]
"keras(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"keras(0)" -> "keras" [label = "assign"]
"tensorflow" -> "bert-and-bidaf.ipynb" [label = "import"]
"tf(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"tf(0)" -> "tensorflow" [label = "assign"]
"json" -> "bert-and-bidaf.ipynb" [label = "import"]
"json(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"json(0)" -> "json" [label = "assign"]
"gc" -> "bert-and-bidaf.ipynb" [label = "import"]
"gc(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"gc(0)" -> "gc" [label = "assign"]
"tqdm" -> "bert-and-bidaf.ipynb" [label = "import"]
"tqdm" -> "tqdm" [label = "import"]
"tqdm(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"tqdm(0)" -> "tqdm" [label = "assign"]
"sys(0)$0" -> "sys(0)" [label = "insert"]
"0(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"sys(0)$0" -> "0(0)" [label = "insert"]
"../input/pretrained-bert-including-scripts/master/bert-master(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"sys(0)$0" -> "../input/pretrained-bert-including-scripts/master/bert-master(0)" [label = "insert"]
"../input/pretrained-bert-including-scripts/uncased_l-12_h-768_a-12/uncased_L-12_H-768_A-12(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"BERT_PRETRAINED_DIR(0)$0" -> "../input/pretrained-bert-including-scripts/uncased_l-12_h-768_a-12/uncased_L-12_H-768_A-12(0)" [label = "assign"]
"***** BERT pretrained directory: {} *****(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"print[0]" -> "***** BERT pretrained directory: {} *****(0)" [label = "print"]
"print[1]" -> "BERT_PRETRAINED_DIR(0)$0" [label = "print"]
"tokenization" -> "bert-and-bidaf.ipynb" [label = "import"]
"tokenization(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"tokenization(0)" -> "tokenization" [label = "assign"]
"tensorflow.keras.models" -> "bert-and-bidaf.ipynb" [label = "import"]
"Model" -> "tensorflow.keras.models" [label = "import"]
"Model(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"Model(0)" -> "Model" [label = "assign"]
"tensorflow.python.ops.rnn_cell" -> "bert-and-bidaf.ipynb" [label = "import"]
"DropoutWrapper" -> "tensorflow.python.ops.rnn_cell" [label = "import"]
"DropoutWrapper(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"DropoutWrapper(0)" -> "DropoutWrapper" [label = "assign"]
"tensorflow.python.ops" -> "bert-and-bidaf.ipynb" [label = "import"]
"variable_scope" -> "tensorflow.python.ops" [label = "import"]
"vs(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"vs(0)" -> "variable_scope" [label = "assign"]
"tensorflow.keras.layers" -> "bert-and-bidaf.ipynb" [label = "import"]
"GRU" -> "tensorflow.keras.layers" [label = "import"]
"GRU(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"GRU(0)" -> "GRU" [label = "assign"]
"Bidirectional" -> "tensorflow.keras.layers" [label = "import"]
"Bidirectional(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"Bidirectional(0)" -> "Bidirectional" [label = "assign"]
"tensorflow.keras.layers" -> "bert-and-bidaf.ipynb" [label = "import"]
"Layer" -> "tensorflow.keras.layers" [label = "import"]
"Layer(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"Layer(0)" -> "Layer" [label = "assign"]
"tensorflow.keras.layers" -> "bert-and-bidaf.ipynb" [label = "import"]
"Dense" -> "tensorflow.keras.layers" [label = "import"]
"Dense(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"Dense(0)" -> "Dense" [label = "assign"]
"keras_bert.keras_bert.bert" -> "bert-and-bidaf.ipynb" [label = "import"]
"get_model" -> "keras_bert.keras_bert.bert" [label = "import"]
"get_model(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"get_model(0)" -> "get_model" [label = "assign"]
"keras_bert.keras_bert.loader" -> "bert-and-bidaf.ipynb" [label = "import"]
"load_trained_model_from_checkpoint" -> "keras_bert.keras_bert.loader" [label = "import"]
"load_trained_model_from_checkpoint(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"load_trained_model_from_checkpoint(0)" -> "load_trained_model_from_checkpoint" [label = "assign"]
"keras.optimizers" -> "bert-and-bidaf.ipynb" [label = "import"]
"Adam" -> "keras.optimizers" [label = "import"]
"Adam(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"Adam(0)" -> "Adam" [label = "assign"]
"2e-05(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"adam(0)$0" -> "2e-05(0)" [label = "Adam"]
"0.01(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"adam(0)$0" -> "0.01(0)" [label = "Adam"]
"begin_build(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"print[0]" -> "begin_build(0)" [label = "print"]
"config_file(0)$0" -> "os(0)" [label = "join"]
"config_file(0)$0" -> "BERT_PRETRAINED_DIR(0)$0" [label = "join"]
"bert_config.json(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"config_file(0)$0" -> "bert_config.json(0)" [label = "join"]
"checkpoint_file(0)$0" -> "os(0)" [label = "join"]
"checkpoint_file(0)$0" -> "BERT_PRETRAINED_DIR(0)$0" [label = "join"]
"bert_model.ckpt(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"checkpoint_file(0)$0" -> "bert_model.ckpt(0)" [label = "join"]
"sys(0)$1" -> "sys(0)$0" [label = "insert"]
"sys(0)$1" -> "0(0)" [label = "insert"]
"../input/bert-and-bidaf/model_bidaf.h5(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"sys(0)$1" -> "../input/bert-and-bidaf/model_bidaf.h5(0)" [label = "insert"]
"512(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"cont_len(0)$0" -> "512(0)" [label = "assign"]
"126(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"ques_len(0)$0" -> "126(0)" [label = "assign"]
"cont_model(0)$0" -> "config_file(0)$0" [label = "load_trained_model_from_checkpoint"]
"cont_model(0)$0" -> "checkpoint_file(0)$0" [label = "load_trained_model_from_checkpoint"]
"cont_model(0)$0" -> "cont_len(0)$0" [label = "load_trained_model_from_checkpoint"]
"ques_model(0)$0" -> "config_file(0)$0" [label = "load_trained_model_from_checkpoint"]
"ques_model(0)$0" -> "checkpoint_file(0)$0" [label = "load_trained_model_from_checkpoint"]
"ques_model(0)$0" -> "ques_len(0)$0" [label = "load_trained_model_from_checkpoint"]
"dict_path(0)$0" -> "os(0)" [label = "join"]
"dict_path(0)$0" -> "BERT_PRETRAINED_DIR(0)$0" [label = "join"]
"vocab.txt(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"dict_path(0)$0" -> "vocab.txt(0)" [label = "join"]
"tokenizer(0)$0" -> "tokenization(0)" [label = "FullTokenizer"]
"tokenizer(0)$0" -> "dict_path(0)$0" [label = "FullTokenizer"]
"tokens(1)" -> "get_masks[0]" [label = "_argToVar"]
"max_seq_length(1)" -> "get_masks[1]" [label = "_argToVar"]
"print[0]" -> "Token length more than max seq length!(1)" [label = "print"]
"tokens(2)" -> "get_segments[0]" [label = "_argToVar"]
"max_seq_length(2)" -> "get_segments[1]" [label = "_argToVar"]
"segments(2)$0" -> "[](2)" [label = "assign"]
"current_segment_id(2)$0" -> "0(2)" [label = "assign"]
"token(2)" -> "tokens(2)" [label = "Iter"]
"segments(2)$1" -> "segments(2)$0" [label = "append"]
"segments(2)$1" -> "current_segment_id(2)$0" [label = "append"]
"current_segment_id(2)$1" -> "1(2)" [label = "assign"]
"tokens(3)" -> "get_ids[0]" [label = "_argToVar"]
"tokenizer(3)" -> "get_ids[1]" [label = "_argToVar"]
"max_seq_length(3)" -> "get_ids[2]" [label = "_argToVar"]
"token_ids(3)$0" -> "tokenizer(3)" [label = "convert_tokens_to_ids"]
"token_ids(3)$0" -> "tokens(3)" [label = "convert_tokens_to_ids"]
"input_ids(3)$0" -> "token_ids(3)$0" [label = "Add"]
"input_ids(3)$0" -> "[<_ast.Num object at 0x105ac3690>](3)" [label = "Add"]
"input_ids(3)$0" -> "max_seq_length(3)" [label = "Add"]
"input_ids(3)$0" -> "len(3)" [label = "Add"]
"input_ids(3)$0" -> "token_ids(3)$0" [label = "Add"]
"os" -> "bert-and-bidaf.ipynb" [label = "import"]
"os(0)" -> "os" [label = "assign"]
"dirname(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"dirname(0)" -> "os(0)" [label = "Iter"]
"_(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"_(0)" -> "os(0)" [label = "Iter"]
"filenames(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"filenames(0)" -> "os(0)" [label = "Iter"]
"/kaggle/input(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"dirname(0)" -> "/kaggle/input(0)" [label = "Iter"]
"_(0)" -> "/kaggle/input(0)" [label = "Iter"]
"filenames(0)" -> "/kaggle/input(0)" [label = "Iter"]
"filename(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"filename(0)" -> "filenames(0)" [label = "Iter"]
"print[0]" -> "os(0)" [label = "print"]
"print[1]" -> "dirname(0)" [label = "print"]
"print[2]" -> "filename(0)" [label = "print"]
"/kaggle/input/tensorflow2-question-answering/(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"path(0)$0" -> "/kaggle/input/tensorflow2-question-answering/(0)" [label = "assign"]
"simplified-nq-train.jsonl(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"train_path(0)$0" -> "simplified-nq-train.jsonl(0)" [label = "assign"]
"simplified-nq-test.jsonl(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"test_path(0)$0" -> "simplified-nq-test.jsonl(0)" [label = "assign"]
"sample_submission.csv(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"sample_submission_path(0)$0" -> "sample_submission.csv(0)" [label = "assign"]
"path(4)" -> "read_data[0]" [label = "_argToVar"]
"sample(4)" -> "read_data[1]" [label = "_argToVar"]
"chunksize(4)" -> "read_data[2]" [label = "_argToVar"]
"df(4)$0" -> "[](4)" [label = "assign"]
"i(4)" -> "range(4)" [label = "Iter"]
"i(4)" -> "chunksize(4)" [label = "Iter"]
"df(4)$1" -> "df(4)$0" [label = "append"]
"df(4)$1" -> "json(4)" [label = "append"]
"df(4)$1" -> "reader(4)" [label = "append"]
"df(4)$2" -> "pd(4)" [label = "DataFrame"]
"df(4)$2" -> "df(4)$2" [label = "DataFrame"]
"print[0]" -> "Our sampled dataset have {} rows and {} columns(4)" [label = "print"]
"print[1]" -> "df(4)$2" [label = "print"]
"print[2]" -> "0(4)" [label = "print"]
"print[3]" -> "df(4)$2" [label = "print"]
"print[4]" -> "1(4)" [label = "print"]
"df(4)$3" -> "pd(4)" [label = "read_json"]
"df(4)$3" -> "path(4)" [label = "read_json"]
"df(4)$3" -> "records(4)" [label = "read_json"]
"print[0]" -> "Our dataset have {} rows and {} columns(4)" [label = "print"]
"print[1]" -> "df(4)$3" [label = "print"]
"print[2]" -> "0(4)" [label = "print"]
"print[3]" -> "df(4)$3" [label = "print"]
"print[4]" -> "1(4)" [label = "print"]
"gc(4)$0" -> "gc(4)" [label = "collect"]
"train(0)$0" -> "path(0)$0" [label = "read_data"]
"train(0)$0" -> "train_path(0)$0" [label = "read_data"]
"test(0)$0" -> "path(0)$0" [label = "read_data"]
"test(0)$0" -> "test_path(0)$0" [label = "read_data"]
"train(0)$1" -> "train(0)$0" [label = "head"]
"self(6)" -> "__init__[0]" [label = "_argToVar"]
"super(6)$0" -> "super(6)" [label = "__init__"]
"init_op(6)$0" -> "tf(6)" [label = "assign"]
"self(7)" -> "build[0]" [label = "_argToVar"]
"input_shape(7)" -> "build[1]" [label = "_argToVar"]
"print[0]" -> "input_shape(7)" [label = "print"]
"self(7)$0" -> "self(7)" [label = "add_weight"]
"self(7)$0" -> "self(7)" [label = "add_weight"]
"self(7)$0" -> "S_W(7)" [label = "add_weight"]
"self(7)$0" -> "768(7)" [label = "add_weight"]
"self(7)$0" -> "3(7)" [label = "add_weight"]
"self(7)$0" -> "uniform(7)" [label = "add_weight"]
"init_op(7)$0" -> "tf(7)" [label = "assign"]
"super(7)$0" -> "super(7)" [label = "build"]
"super(7)$0" -> "input_shape(7)" [label = "build"]
"self(8)" -> "call[0]" [label = "_argToVar"]
"ccmqqm(8)" -> "call[1]" [label = "_argToVar"]
"c(8)$0" -> "ccmqqm(8)" [label = "assign"]
"c(8)$0" -> "0(8)" [label = "assign"]
"c_mask(8)$0" -> "ccmqqm(8)" [label = "assign"]
"c_mask(8)$0" -> "1(8)" [label = "assign"]
"q(8)$0" -> "ccmqqm(8)" [label = "assign"]
"q(8)$0" -> "2(8)" [label = "assign"]
"q_mask(8)$0" -> "ccmqqm(8)" [label = "assign"]
"q_mask(8)$0" -> "3(8)" [label = "assign"]
"c_expand(8)$0" -> "tf(8)" [label = "expand_dims"]
"c_expand(8)$0" -> "c(8)$0" [label = "expand_dims"]
"c_expand(8)$0" -> "2(8)" [label = "expand_dims"]
"q_expand(8)$0" -> "tf(8)" [label = "expand_dims"]
"q_expand(8)$0" -> "q(8)$0" [label = "expand_dims"]
"q_expand(8)$0" -> "1(8)" [label = "expand_dims"]
"c_pointWise_q(8)$0" -> "c_expand(8)$0" [label = "Mult"]
"c_pointWise_q(8)$0" -> "q_expand(8)$0" [label = "Mult"]
"c_input(8)$0" -> "tf(8)" [label = "tile"]
"c_input(8)$0" -> "c_expand(8)$0" [label = "tile"]
"c_input(8)$0" -> "[<_ast.Num object at 0x105b23950>, <_ast.Num object at 0x105b23b90>, <_ast.Subscript object at 0x105b23ed0>, <_ast.Num object at 0x105e12e50>](8)" [label = "tile"]
"q_input(8)$0" -> "tf(8)" [label = "tile"]
"q_input(8)$0" -> "q_expand(8)$0" [label = "tile"]
"q_input(8)$0" -> "[<_ast.Num object at 0x105e12350>, <_ast.Subscript object at 0x105e123d0>, <_ast.Num object at 0x105e12290>, <_ast.Num object at 0x105e12d50>](8)" [label = "tile"]
"concat_input(8)$0" -> "tf(8)" [label = "concat"]
"concat_input(8)$0" -> "[<_ast.Name object at 0x105e12d90>, <_ast.Name object at 0x105e12050>, <_ast.Name object at 0x105e12c10>](8)" [label = "concat"]
"concat_input(8)$0" -> "1(8)" [label = "concat"]
"print[0]" -> "concat_in(8)" [label = "print"]
"print[1]" -> "concat_input(8)$0" [label = "print"]
"similarity(8)$0" -> "tf(8)" [label = "reduce_sum"]
"similarity(8)$0" -> "concat_input(8)$0" [label = "reduce_sum"]
"similarity(8)$0" -> "self(8)" [label = "reduce_sum"]
"similarity(8)$0" -> "1(8)" [label = "reduce_sum"]
"print[0]" -> "similarity(8)$0" [label = "print"]
"print[1]" -> "similarity(8)$0" [label = "print"]
"similarity_mask(8)$0" -> "tf(8)" [label = "expand_dims"]
"similarity_mask(8)$0" -> "q_mask(8)$0" [label = "expand_dims"]
"similarity_mask(8)$0" -> "1(8)" [label = "expand_dims"]
"print[0]" -> "sim mask(8)" [label = "print"]
"print[1]" -> "similarity_mask(8)$0" [label = "print"]
"exp_mask_c2q(8)$0" -> "1(8)" [label = "Mult"]
"exp_mask_c2q(8)$0" -> "tf(8)" [label = "Mult"]
"exp_mask_c2q(8)$0" -> "similarity_mask(8)$0" [label = "Mult"]
"exp_mask_c2q(8)$0" -> "float(8)" [label = "Mult"]
"exp_mask_c2q(8)$0" -> "1e+30(8)" [label = "Mult"]
"print[0]" -> "exp mask(8)" [label = "print"]
"print[1]" -> "exp_mask_c2q(8)$0" [label = "print"]
"masked_logits_c2q(8)$0" -> "tf(8)" [label = "add"]
"masked_logits_c2q(8)$0" -> "similarity(8)$0" [label = "add"]
"masked_logits_c2q(8)$0" -> "exp_mask_c2q(8)$0" [label = "add"]
"c2q_dist(8)$0" -> "tf(8)" [label = "softmax"]
"c2q_dist(8)$0" -> "masked_logits_c2q(8)$0" [label = "softmax"]
"c2q_dist(8)$0" -> "1(8)" [label = "softmax"]
"c2q(8)$0" -> "tf(8)" [label = "matmul"]
"c2q(8)$0" -> "c2q_dist(8)$0" [label = "matmul"]
"c2q(8)$0" -> "q(8)$0" [label = "matmul"]
"S_max(8)$0" -> "tf(8)" [label = "reduce_max"]
"S_max(8)$0" -> "similarity(8)$0" [label = "reduce_max"]
"S_max(8)$0" -> "2(8)" [label = "reduce_max"]
"exp_mask_S(8)$0" -> "1(8)" [label = "Mult"]
"exp_mask_S(8)$0" -> "tf(8)" [label = "Mult"]
"exp_mask_S(8)$0" -> "c_mask(8)$0" [label = "Mult"]
"exp_mask_S(8)$0" -> "float(8)" [label = "Mult"]
"exp_mask_S(8)$0" -> "1e+30(8)" [label = "Mult"]
"masked_logits_S(8)$0" -> "tf(8)" [label = "add"]
"masked_logits_S(8)$0" -> "S_max(8)$0" [label = "add"]
"masked_logits_S(8)$0" -> "exp_mask_S(8)$0" [label = "add"]
"c_dash_dist(8)$0" -> "tf(8)" [label = "softmax"]
"c_dash_dist(8)$0" -> "masked_logits_S(8)$0" [label = "softmax"]
"c_dash_dist(8)$0" -> "1(8)" [label = "softmax"]
"c_dash_dist_expand(8)$0" -> "tf(8)" [label = "expand_dims"]
"c_dash_dist_expand(8)$0" -> "c_dash_dist(8)$0" [label = "expand_dims"]
"c_dash_dist_expand(8)$0" -> "1(8)" [label = "expand_dims"]
"c_dash(8)$0" -> "tf(8)" [label = "matmul"]
"c_dash(8)$0" -> "c_dash_dist_expand(8)$0" [label = "matmul"]
"c_dash(8)$0" -> "c(8)$0" [label = "matmul"]
"c_c2q(8)$0" -> "c(8)$0" [label = "Mult"]
"c_c2q(8)$0" -> "c2q(8)$0" [label = "Mult"]
"print[0]" -> "c_c2q(8)$0" [label = "print"]
"print[1]" -> "c_c2q(8)$0" [label = "print"]
"c_c_dash(8)$0" -> "c(8)$0" [label = "Mult"]
"c_c_dash(8)$0" -> "c_dash(8)$0" [label = "Mult"]
"print[0]" -> "cdash(8)" [label = "print"]
"print[1]" -> "c_c_dash(8)$0" [label = "print"]
"output(8)$0" -> "tf(8)" [label = "concat"]
"output(8)$0" -> "[<_ast.Name object at 0x105decb90>, <_ast.Name object at 0x105dec6d0>, <_ast.Name object at 0x105dec3d0>](8)" [label = "concat"]
"output(8)$0" -> "2(8)" [label = "concat"]
"attn_output(8)$0" -> "tf(8)" [label = "dropout"]
"attn_output(8)$0" -> "output(8)$0" [label = "dropout"]
"attn_output(8)$0" -> "0.9(8)" [label = "dropout"]
"blended_reps(8)$0" -> "tf(8)" [label = "concat"]
"blended_reps(8)$0" -> "[<_ast.Name object at 0x105dec790>, <_ast.Name object at 0x105deced0>](8)" [label = "concat"]
"blended_reps(8)$0" -> "2(8)" [label = "concat"]
"print[0]" -> "blended(8)" [label = "print"]
"print[1]" -> "blended_reps(8)$0" [label = "print"]
"self(10)" -> "__init__[0]" [label = "_argToVar"]
"super(10)$0" -> "super(10)" [label = "__init__"]
"self(11)" -> "build[0]" [label = "_argToVar"]
"input_shape(11)" -> "build[1]" [label = "_argToVar"]
"print[0]" -> "input_shape(11)" [label = "print"]
"super(11)$0" -> "super(11)" [label = "build"]
"super(11)$0" -> "input_shape(11)" [label = "build"]
"self(12)" -> "call[0]" [label = "_argToVar"]
"lcm(12)" -> "call[1]" [label = "_argToVar"]
"logits_start(12)$0" -> "lcm(12)" [label = "assign"]
"logits_start(12)$0" -> "0(12)" [label = "assign"]
"c_mask(12)$0" -> "lcm(12)" [label = "assign"]
"c_mask(12)$0" -> "1(12)" [label = "assign"]
"logits_start(12)$1" -> "tf(12)" [label = "squeeze"]
"logits_start(12)$1" -> "logits_start(12)$1" [label = "squeeze"]
"logits_start(12)$1" -> "[<_ast.Num object at 0x105ac4b90>](12)" [label = "squeeze"]
"exp_mask_start(12)$0" -> "1(12)" [label = "Mult"]
"exp_mask_start(12)$0" -> "tf(12)" [label = "Mult"]
"exp_mask_start(12)$0" -> "c_mask(12)$0" [label = "Mult"]
"exp_mask_start(12)$0" -> "float(12)" [label = "Mult"]
"exp_mask_start(12)$0" -> "1e+30(12)" [label = "Mult"]
"masked_logits_start(12)$0" -> "tf(12)" [label = "add"]
"masked_logits_start(12)$0" -> "logits_start(12)$1" [label = "add"]
"masked_logits_start(12)$0" -> "exp_mask_start(12)$0" [label = "add"]
"start_prob(12)$0" -> "tf(12)" [label = "softmax"]
"start_prob(12)$0" -> "masked_logits_start(12)$0" [label = "softmax"]
"start_prob(12)$0" -> "1(12)" [label = "softmax"]
"cont_embs(0)$0" -> "tf(0)" [label = "Input"]
"cont_embs(0)$0" -> "cont_len(0)$0" [label = "Input"]
"768(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"cont_embs(0)$0" -> "768(0)" [label = "Input"]
"cont_embs(0)$0" -> "tf(0)" [label = "Input"]
"cont_embs(0)$0" -> "cont_embs(0)$0" [label = "Input"]
"cont_masks(0)$0" -> "tf(0)" [label = "Input"]
"cont_masks(0)$0" -> "cont_len(0)$0" [label = "Input"]
"cont_masks(0)$0" -> "tf(0)" [label = "Input"]
"cont_masks(0)$0" -> "cont_masks(0)$0" [label = "Input"]
"ques_embs(0)$0" -> "tf(0)" [label = "Input"]
"ques_embs(0)$0" -> "ques_len(0)$0" [label = "Input"]
"ques_embs(0)$0" -> "768(0)" [label = "Input"]
"ques_embs(0)$0" -> "tf(0)" [label = "Input"]
"ques_embs(0)$0" -> "ques_embs(0)$0" [label = "Input"]
"ques_masks(0)$0" -> "tf(0)" [label = "Input"]
"ques_masks(0)$0" -> "ques_len(0)$0" [label = "Input"]
"ques_masks(0)$0" -> "tf(0)" [label = "Input"]
"ques_masks(0)$0" -> "ques_masks(0)$0" [label = "Input"]
"[<_ast.Name object at 0x105b2c410>, <_ast.Name object at 0x105b2c190>, <_ast.Name object at 0x105b2c8d0>, <_ast.Name object at 0x105b2c090>](0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"blended_reps(0)$0" -> "[<_ast.Name object at 0x105b2c410>, <_ast.Name object at 0x105b2c190>, <_ast.Name object at 0x105b2c8d0>, <_ast.Name object at 0x105b2c090>](0)" [label = "bidaf_model_partA"]
"blended_reps_final(0)$0" -> "Bidirectional(0)" [label = "assign"]
"blended_reps_final(0)$0" -> "GRU(0)" [label = "assign"]
"128(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"blended_reps_final(0)$0" -> "128(0)" [label = "assign"]
"glorot_uniform(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"blended_reps_final(0)$0" -> "glorot_uniform(0)" [label = "assign"]
"0.1(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"blended_reps_final(0)$0" -> "0.1(0)" [label = "assign"]
"blended_reps_final(0)$0" -> "blended_reps(0)$0" [label = "assign"]
"blended_reps_final(0)$1" -> "Bidirectional(0)" [label = "assign"]
"blended_reps_final(0)$1" -> "GRU(0)" [label = "assign"]
"blended_reps_final(0)$1" -> "128(0)" [label = "assign"]
"blended_reps_final(0)$1" -> "glorot_uniform(0)" [label = "assign"]
"blended_reps_final(0)$1" -> "0.1(0)" [label = "assign"]
"blended_reps_final(0)$1" -> "blended_reps_final(0)$1" [label = "assign"]
"logits_start(0)$0" -> "GRU(0)" [label = "assign"]
"1(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"logits_start(0)$0" -> "1(0)" [label = "assign"]
"logits_start(0)$0" -> "glorot_uniform(0)" [label = "assign"]
"logits_start(0)$0" -> "0.1(0)" [label = "assign"]
"logits_start(0)$0" -> "blended_reps_final(0)$1" [label = "assign"]
"logits_end(0)$0" -> "GRU(0)" [label = "assign"]
"logits_end(0)$0" -> "1(0)" [label = "assign"]
"logits_end(0)$0" -> "glorot_uniform(0)" [label = "assign"]
"logits_end(0)$0" -> "0.1(0)" [label = "assign"]
"logits_end(0)$0" -> "blended_reps_final(0)$1" [label = "assign"]
"logits_present(0)$0" -> "GRU(0)" [label = "assign"]
"logits_present(0)$0" -> "1(0)" [label = "assign"]
"logits_present(0)$0" -> "glorot_uniform(0)" [label = "assign"]
"logits_present(0)$0" -> "0.1(0)" [label = "assign"]
"logits_present(0)$0" -> "blended_reps_final(0)$1" [label = "assign"]
"[<_ast.Name object at 0x106534210>, <_ast.Name object at 0x106534410>](0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"start_prob(0)$0" -> "[<_ast.Name object at 0x106534210>, <_ast.Name object at 0x106534410>](0)" [label = "bidaf_startlogits"]
"[<_ast.Name object at 0x106534590>, <_ast.Name object at 0x106534150>](0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"end_prob(0)$0" -> "[<_ast.Name object at 0x106534590>, <_ast.Name object at 0x106534150>](0)" [label = "bidaf_endlogits"]
"[<_ast.Name object at 0x1066e5dd0>, <_ast.Name object at 0x1066e58d0>](0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"present_prob(0)$0" -> "[<_ast.Name object at 0x1066e5dd0>, <_ast.Name object at 0x1066e58d0>](0)" [label = "bidaf_presentlogits"]
"[<_ast.Name object at 0x1066e50d0>, <_ast.Name object at 0x1066e5b50>, <_ast.Name object at 0x1066e51d0>, <_ast.Name object at 0x1066e53d0>](0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"list_of_inputs(0)$0" -> "[<_ast.Name object at 0x1066e50d0>, <_ast.Name object at 0x1066e5b50>, <_ast.Name object at 0x1066e51d0>, <_ast.Name object at 0x1066e53d0>](0)" [label = "assign"]
"[<_ast.Name object at 0x1066e5310>, <_ast.Name object at 0x1066e5c50>, <_ast.Name object at 0x1066e5590>](0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"dist_probs(0)$0" -> "[<_ast.Name object at 0x1066e5310>, <_ast.Name object at 0x1066e5c50>, <_ast.Name object at 0x1066e5590>](0)" [label = "assign"]
"model_bidaf(0)$0" -> "list_of_inputs(0)$0" [label = "Model"]
"model_bidaf(0)$0" -> "dist_probs(0)$0" [label = "Model"]
"print[0]" -> "model_bidaf(0)$0" [label = "print"]
"model_bidaf(0)$1" -> "model_bidaf(0)$0" [label = "compile"]
"keras.models" -> "bert-and-bidaf.ipynb" [label = "import"]
"Model" -> "keras.models" [label = "import"]
"Model(0)" -> "Model" [label = "assign"]
"cont_embs_output(0)$0" -> "cont_model(0)$0" [label = "assign"]
"6(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"cont_embs_output(0)$0" -> "6(0)" [label = "assign"]
"cont_bert(0)$0" -> "cont_model(0)$0" [label = "Model"]
"cont_bert(0)$0" -> "cont_embs_output(0)$0" [label = "Model"]
"cont_bert(0)$1" -> "cont_bert(0)$0" [label = "compile"]
"cont_bert(0)$2" -> "cont_bert(0)$1" [label = "summary"]
"ques_embs_output(0)$0" -> "ques_model(0)$0" [label = "assign"]
"ques_embs_output(0)$0" -> "6(0)" [label = "assign"]
"ques_bert(0)$0" -> "ques_model(0)$0" [label = "Model"]
"ques_bert(0)$0" -> "ques_embs_output(0)$0" [label = "Model"]
"ques_bert(0)$1" -> "ques_bert(0)$0" [label = "compile"]
"ques_bert(0)$2" -> "ques_bert(0)$1" [label = "summary"]
"model_bidaf(0)$2" -> "model_bidaf(0)$1" [label = "load_weights"]
"model_bidaf(0)$2" -> "../input/bert-and-bidaf/model_bidaf.h5(0)" [label = "load_weights"]
"sess(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"sess(0)$0" -> "sess(0)" [label = "run"]
"sess(0)$0" -> "tf(0)" [label = "run"]
"model_bidaf(0)$3" -> "model_bidaf(0)$2" [label = "load_weights"]
"model_bidaf(0)$3" -> "../input/bert-and-bidaf/model_bidaf.h5(0)" [label = "load_weights"]
"range(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"i_main(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"i_main(0)" -> "range(0)" [label = "Iter"]
"15(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"i_main(0)" -> "15(0)" [label = "Iter"]
"35(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"i_main(0)" -> "35(0)" [label = "Iter"]
"[](0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"sample_weight(0)$0" -> "[](0)" [label = "assign"]
"row(0)$0" -> "train(0)$1" [label = "assign"]
"row(0)$0" -> "i_main(0)" [label = "assign"]
"row no (0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"print[0]" -> "row no (0)" [label = "print"]
"print[1]" -> "i_main(0)" [label = "print"]
"annotation short ans(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"print[0]" -> "annotation short ans(0)" [label = "print"]
"print[1]" -> "row(0)$0" [label = "print"]
"annotations(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"print[2]" -> "annotations(0)" [label = "print"]
"print[3]" -> "0(0)" [label = "print"]
"short_answers(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"print[4]" -> "short_answers(0)" [label = "print"]
"document_text(0)$0" -> "row(0)$0" [label = "split"]
"document_text(0)$0" -> "document_text(0)$0" [label = "split"]
"question_text(0)$0" -> "row(0)$0" [label = "assign"]
"question_text(0)$0" -> "question_text(0)$0" [label = "assign"]
"ques_ans_tokens(0)$0" -> "tokenizer(0)$0" [label = "tokenize"]
"ques_ans_tokens(0)$0" -> "question_text(0)$0" [label = "tokenize"]
"ques_ids(0)$0" -> "np(0)" [label = "asarray"]
"[<_ast.Call object at 0x105b21e10>](0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"ques_ids(0)$0" -> "[<_ast.Call object at 0x105b21e10>](0)" [label = "asarray"]
"ques_masks(0)$1" -> "np(0)" [label = "asarray"]
"[<_ast.Call object at 0x105b21990>](0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"ques_masks(0)$1" -> "[<_ast.Call object at 0x105b21990>](0)" [label = "asarray"]
"batch_of_cont_embs(0)$0" -> "[](0)" [label = "assign"]
"batch_of_cont_masks(0)$0" -> "[](0)" [label = "assign"]
"batch_of_ques_embs(0)$0" -> "[](0)" [label = "assign"]
"batch_of_ques_masks(0)$0" -> "[](0)" [label = "assign"]
"batch_of_target_st(0)$0" -> "[](0)" [label = "assign"]
"batch_of_target_en(0)$0" -> "[](0)" [label = "assign"]
"batch_of_target_pr(0)$0" -> "[](0)" [label = "assign"]
"enumerate(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"candidate_no(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"candidate_no(0)" -> "enumerate(0)" [label = "Iter"]
"long_answer_candidate(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"long_answer_candidate(0)" -> "enumerate(0)" [label = "Iter"]
"candidate_no(0)" -> "row(0)$0" [label = "Iter"]
"long_answer_candidate(0)" -> "row(0)$0" [label = "Iter"]
"long_answer_candidates(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"candidate_no(0)" -> "long_answer_candidates(0)" [label = "Iter"]
"long_answer_candidate(0)" -> "long_answer_candidates(0)" [label = "Iter"]
"[<_ast.Num object at 0x105b21a10>](0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"target_start(0)$0" -> "[<_ast.Num object at 0x105b21a10>](0)" [label = "Mult"]
"target_start(0)$0" -> "cont_len(0)$0" [label = "Mult"]
"[<_ast.Num object at 0x105bce610>](0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"target_end(0)$0" -> "[<_ast.Num object at 0x105bce610>](0)" [label = "Mult"]
"target_end(0)$0" -> "cont_len(0)$0" [label = "Mult"]
"[<_ast.Num object at 0x105bce050>](0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"target_present(0)$0" -> "[<_ast.Num object at 0x105bce050>](0)" [label = "Mult"]
"target_present(0)$0" -> "cont_len(0)$0" [label = "Mult"]
"long_ans_start_tok(0)$0" -> "long_answer_candidate(0)" [label = "assign"]
"start_token(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"long_ans_start_tok(0)$0" -> "start_token(0)" [label = "assign"]
"long_ans_end_tok(0)$0" -> "long_answer_candidate(0)" [label = "assign"]
"end_token(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"long_ans_end_tok(0)$0" -> "end_token(0)" [label = "assign"]
" (0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"long_sentence(0)$0" -> " (0)" [label = "join"]
"long_sentence(0)$0" -> "document_text(0)$0" [label = "join"]
"long_sentence(0)$0" -> "long_ans_start_tok(0)$0" [label = "join"]
"long_sentence(0)$0" -> "long_ans_end_tok(0)$0" [label = "join"]
"short_answer_start_token(0)$0" -> "row(0)$0" [label = "assign"]
"short_answer_start_token(0)$0" -> "annotations(0)" [label = "assign"]
"short_answer_start_token(0)$0" -> "0(0)" [label = "assign"]
"short_answer_start_token(0)$0" -> "short_answers(0)" [label = "assign"]
"short_answer_start_token(0)$0" -> "0(0)" [label = "assign"]
"short_answer_start_token(0)$0" -> "start_token(0)" [label = "assign"]
"short_answer_end_token(0)$0" -> "row(0)$0" [label = "assign"]
"short_answer_end_token(0)$0" -> "annotations(0)" [label = "assign"]
"short_answer_end_token(0)$0" -> "0(0)" [label = "assign"]
"short_answer_end_token(0)$0" -> "short_answers(0)" [label = "assign"]
"short_answer_end_token(0)$0" -> "0(0)" [label = "assign"]
"short_answer_end_token(0)$0" -> "end_token(0)" [label = "assign"]
"short_start_idx(0)$0" -> "short_answer_start_token(0)$0" [label = "Sub"]
"short_start_idx(0)$0" -> "long_ans_start_tok(0)$0" [label = "Sub"]
"short_end_idx(0)$0" -> "short_answer_end_token(0)$0" [label = "Sub"]
"short_end_idx(0)$0" -> "long_ans_start_tok(0)$0" [label = "Sub"]
"target_start(0)$1" -> "target_start(0)$0" [label = "assign"]
"target_start(0)$1" -> "1(0)" [label = "assign"]
"target_end(0)$1" -> "target_end(0)$0" [label = "assign"]
"target_end(0)$1" -> "1(0)" [label = "assign"]
"sample_weight(0)$1" -> "sample_weight(0)$0" [label = "append"]
"900(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"sample_weight(0)$1" -> "900(0)" [label = "append"]
"i(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"i(0)" -> "range(0)" [label = "Iter"]
"i(0)" -> "short_start_idx(0)$0" [label = "Iter"]
"i(0)" -> "short_end_idx(0)$0" [label = "Iter"]
"target_present(0)$1" -> "target_present(0)$0" [label = "assign"]
"target_present(0)$1" -> "1(0)" [label = "assign"]
"short answer beyond maximum len(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"print[0]" -> "short answer beyond maximum len(0)" [label = "print"]
"sample_weight(0)$2" -> "sample_weight(0)$1" [label = "append"]
"sample_weight(0)$2" -> "1(0)" [label = "append"]
"sample_weight(0)$3" -> "sample_weight(0)$2" [label = "append"]
"sample_weight(0)$3" -> "1(0)" [label = "append"]
"long_ans_tokens(0)$0" -> "tokenizer(0)$0" [label = "tokenize"]
"long_ans_tokens(0)$0" -> "long_sentence(0)$0" [label = "tokenize"]
"long_ids(0)$0" -> "np(0)" [label = "asarray"]
"[<_ast.Call object at 0x105ddc610>](0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"long_ids(0)$0" -> "[<_ast.Call object at 0x105ddc610>](0)" [label = "asarray"]
"cont_masks(0)$1" -> "np(0)" [label = "asarray"]
"[<_ast.Call object at 0x105ddc550>](0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"cont_masks(0)$1" -> "[<_ast.Call object at 0x105ddc550>](0)" [label = "asarray"]
"cont_embs(0)$1" -> "cont_bert(0)$2" [label = "predict"]
"[<_ast.Name object at 0x105ddbed0>, <_ast.Name object at 0x105ddb110>](0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"cont_embs(0)$1" -> "[<_ast.Name object at 0x105ddbed0>, <_ast.Name object at 0x105ddb110>](0)" [label = "predict"]
"cont_embs(0)$1" -> "1(0)" [label = "predict"]
"cont_embs(0)$1" -> "1(0)" [label = "predict"]
"ques_embs(0)$1" -> "ques_bert(0)$2" [label = "predict"]
"[<_ast.Name object at 0x105ddb210>, <_ast.Name object at 0x105ddbf90>](0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"ques_embs(0)$1" -> "[<_ast.Name object at 0x105ddb210>, <_ast.Name object at 0x105ddbf90>](0)" [label = "predict"]
"ques_embs(0)$1" -> "1(0)" [label = "predict"]
"ques_embs(0)$1" -> "1(0)" [label = "predict"]
"batch_of_cont_embs(0)$1" -> "batch_of_cont_embs(0)$0" [label = "append"]
"batch_of_cont_embs(0)$1" -> "np(0)" [label = "append"]
"batch_of_cont_embs(0)$1" -> "cont_embs(0)$1" [label = "append"]
"batch_of_cont_masks(0)$1" -> "batch_of_cont_masks(0)$0" [label = "append"]
"batch_of_cont_masks(0)$1" -> "np(0)" [label = "append"]
"batch_of_cont_masks(0)$1" -> "cont_masks(0)$1" [label = "append"]
"batch_of_ques_embs(0)$1" -> "batch_of_ques_embs(0)$0" [label = "append"]
"batch_of_ques_embs(0)$1" -> "np(0)" [label = "append"]
"batch_of_ques_embs(0)$1" -> "ques_embs(0)$1" [label = "append"]
"batch_of_ques_masks(0)$1" -> "batch_of_ques_masks(0)$0" [label = "append"]
"batch_of_ques_masks(0)$1" -> "np(0)" [label = "append"]
"batch_of_ques_masks(0)$1" -> "ques_masks(0)$1" [label = "append"]
"batch_of_target_st(0)$1" -> "batch_of_target_st(0)$0" [label = "append"]
"batch_of_target_st(0)$1" -> "target_start(0)$1" [label = "append"]
"batch_of_target_en(0)$1" -> "batch_of_target_en(0)$0" [label = "append"]
"batch_of_target_en(0)$1" -> "target_end(0)$1" [label = "append"]
"batch_of_target_pr(0)$1" -> "batch_of_target_pr(0)$0" [label = "append"]
"batch_of_target_pr(0)$1" -> "target_present(0)$1" [label = "append"]
"sample_weight(0)$4" -> "np(0)" [label = "asarray"]
"sample_weight(0)$4" -> "sample_weight(0)$4" [label = "asarray"]
"xcont_embs(0)$0" -> "np(0)" [label = "asarray"]
"xcont_embs(0)$0" -> "batch_of_cont_embs(0)$1" [label = "asarray"]
"xcont_masks(0)$0" -> "np(0)" [label = "asarray"]
"xcont_masks(0)$0" -> "batch_of_cont_masks(0)$1" [label = "asarray"]
"xques_embs(0)$0" -> "np(0)" [label = "asarray"]
"xques_embs(0)$0" -> "batch_of_ques_embs(0)$1" [label = "asarray"]
"xques_masks(0)$0" -> "np(0)" [label = "array"]
"xques_masks(0)$0" -> "batch_of_ques_masks(0)$1" [label = "array"]
"print[0]" -> "xcont_embs(0)$0" [label = "print"]
"print[0]" -> "xques_embs(0)$0" [label = "print"]
"ytarget_st(0)$0" -> "np(0)" [label = "asarray"]
"ytarget_st(0)$0" -> "batch_of_target_st(0)$1" [label = "asarray"]
"ytarget_en(0)$0" -> "np(0)" [label = "asarray"]
"ytarget_en(0)$0" -> "batch_of_target_en(0)$1" [label = "asarray"]
"ytarget_pr(0)$0" -> "np(0)" [label = "asarray"]
"ytarget_pr(0)$0" -> "batch_of_target_pr(0)$1" [label = "asarray"]
"[<_ast.Name object at 0x105e0b850>, <_ast.Name object at 0x105e0b450>, <_ast.Name object at 0x105e0b750>, <_ast.Name object at 0x105e0b910>](0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"train_x(0)$0" -> "[<_ast.Name object at 0x105e0b850>, <_ast.Name object at 0x105e0b450>, <_ast.Name object at 0x105e0b750>, <_ast.Name object at 0x105e0b910>](0)" [label = "assign"]
"[<_ast.Name object at 0x105e0ba90>, <_ast.Name object at 0x105e0bad0>, <_ast.Name object at 0x105e0b890>](0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"train_y(0)$0" -> "[<_ast.Name object at 0x105e0ba90>, <_ast.Name object at 0x105e0bad0>, <_ast.Name object at 0x105e0b890>](0)" [label = "assign"]
"model_bidaf(0)$4" -> "model_bidaf(0)$3" [label = "fit"]
"model_bidaf(0)$4" -> "train_x(0)$0" [label = "fit"]
"model_bidaf(0)$4" -> "train_y(0)$0" [label = "fit"]
"model_bidaf(0)$5" -> "model_bidaf(0)$4" [label = "save_weights"]
"model_bidaf.h5(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"model_bidaf(0)$5" -> "model_bidaf.h5(0)" [label = "save_weights"]
"row(13)" -> "bidaf_pred[0]" [label = "_argToVar"]
"threshold(13)$0" -> "0.03(13)" [label = "assign"]
"document_text(13)$0" -> "row(13)" [label = "split"]
"document_text(13)$0" -> "document_text(13)$0" [label = "split"]
"question_text(13)$0" -> "row(13)" [label = "assign"]
"question_text(13)$0" -> "question_text(13)$0" [label = "assign"]
"ques_ans_tokens(13)$0" -> "tokenizer(13)" [label = "tokenize"]
"ques_ans_tokens(13)$0" -> "question_text(13)$0" [label = "tokenize"]
"ques_ids(13)$0" -> "np(13)" [label = "asarray"]
"ques_ids(13)$0" -> "[<_ast.Call object at 0x105b250d0>](13)" [label = "asarray"]
"ques_masks(13)$0" -> "np(13)" [label = "asarray"]
"ques_masks(13)$0" -> "[<_ast.Call object at 0x105b25590>](13)" [label = "asarray"]
"highest_combined_score(13)$0" -> "0(13)" [label = "assign"]
"best_short_tokens(13)$0" -> "0(13)" [label = "assign"]
"best_short_tokens(13)$0" -> "0(13)" [label = "assign"]
"best_long_tokens(13)$0" -> "0(13)" [label = "assign"]
"best_long_tokens(13)$0" -> "0(13)" [label = "assign"]
"candidate_no(13)" -> "enumerate(13)" [label = "Iter"]
"long_answer_candidate(13)" -> "enumerate(13)" [label = "Iter"]
"candidate_no(13)" -> "row(13)" [label = "Iter"]
"long_answer_candidate(13)" -> "row(13)" [label = "Iter"]
"candidate_no(13)" -> "long_answer_candidates(13)" [label = "Iter"]
"long_answer_candidate(13)" -> "long_answer_candidates(13)" [label = "Iter"]
"long_ans_start_tok(13)$0" -> "long_answer_candidate(13)" [label = "assign"]
"long_ans_start_tok(13)$0" -> "start_token(13)" [label = "assign"]
"long_ans_end_tok(13)$0" -> "long_answer_candidate(13)" [label = "assign"]
"long_ans_end_tok(13)$0" -> "end_token(13)" [label = "assign"]
"long_sentence(13)$0" -> " (13)" [label = "join"]
"long_sentence(13)$0" -> "document_text(13)$0" [label = "join"]
"long_sentence(13)$0" -> "long_ans_start_tok(13)$0" [label = "join"]
"long_sentence(13)$0" -> "long_ans_end_tok(13)$0" [label = "join"]
"batch_of_cont_embs(13)$0" -> "[](13)" [label = "assign"]
"batch_of_cont_masks(13)$0" -> "[](13)" [label = "assign"]
"batch_of_ques_embs(13)$0" -> "[](13)" [label = "assign"]
"batch_of_ques_masks(13)$0" -> "[](13)" [label = "assign"]
"cont_embs(13)$0" -> "cont_bert(13)" [label = "predict"]
"cont_embs(13)$0" -> "[<_ast.Name object at 0x1066ecbd0>, <_ast.Name object at 0x1066ec150>](13)" [label = "predict"]
"cont_embs(13)$0" -> "1(13)" [label = "predict"]
"cont_embs(13)$0" -> "1(13)" [label = "predict"]
"ques_embs(13)$0" -> "ques_bert(13)" [label = "predict"]
"ques_embs(13)$0" -> "[<_ast.Name object at 0x1066ecc50>, <_ast.Name object at 0x1066ec910>](13)" [label = "predict"]
"ques_embs(13)$0" -> "1(13)" [label = "predict"]
"ques_embs(13)$0" -> "1(13)" [label = "predict"]
"batch_of_cont_embs(13)$1" -> "batch_of_cont_embs(13)$0" [label = "append"]
"batch_of_cont_embs(13)$1" -> "np(13)" [label = "append"]
"batch_of_cont_embs(13)$1" -> "cont_embs(13)$0" [label = "append"]
"batch_of_cont_masks(13)$1" -> "batch_of_cont_masks(13)$0" [label = "append"]
"batch_of_cont_masks(13)$1" -> "np(13)" [label = "append"]
"batch_of_cont_masks(13)$1" -> "cont_masks(13)" [label = "append"]
"batch_of_ques_embs(13)$1" -> "batch_of_ques_embs(13)$0" [label = "append"]
"batch_of_ques_embs(13)$1" -> "np(13)" [label = "append"]
"batch_of_ques_embs(13)$1" -> "ques_embs(13)$0" [label = "append"]
"batch_of_ques_masks(13)$1" -> "batch_of_ques_masks(13)$0" [label = "append"]
"batch_of_ques_masks(13)$1" -> "np(13)" [label = "append"]
"batch_of_ques_masks(13)$1" -> "ques_masks(13)$0" [label = "append"]
"xcont_embs(13)$0" -> "np(13)" [label = "asarray"]
"xcont_embs(13)$0" -> "batch_of_cont_embs(13)$1" [label = "asarray"]
"xcont_masks(13)$0" -> "np(13)" [label = "asarray"]
"xcont_masks(13)$0" -> "batch_of_cont_masks(13)$1" [label = "asarray"]
"xques_embs(13)$0" -> "np(13)" [label = "asarray"]
"xques_embs(13)$0" -> "batch_of_ques_embs(13)$1" [label = "asarray"]
"xques_masks(13)$0" -> "np(13)" [label = "array"]
"xques_masks(13)$0" -> "batch_of_ques_masks(13)$1" [label = "array"]
"output(13)$0" -> "model_bidaf(13)" [label = "predict"]
"output(13)$0" -> "[<_ast.Name object at 0x105b13090>, <_ast.Name object at 0x105b13790>, <_ast.Name object at 0x105b13c10>, <_ast.Name object at 0x105b13d10>](13)" [label = "predict"]
"output(13)$0" -> "1(13)" [label = "predict"]
"start_pred_scores(13)$0" -> "output(13)$0" [label = "assign"]
"start_pred_scores(13)$0" -> "0(13)" [label = "assign"]
"end_pred_scores(13)$0" -> "output(13)$0" [label = "assign"]
"end_pred_scores(13)$0" -> "1(13)" [label = "assign"]
"present_pred_scores(13)$0" -> "output(13)$0" [label = "assign"]
"present_pred_scores(13)$0" -> "2(13)" [label = "assign"]
"start_tok_pred(13)$0" -> "np(13)" [label = "assign"]
"start_tok_pred(13)$0" -> "start_pred_scores(13)$0" [label = "assign"]
"start_tok_pred(13)$0" -> "1(13)" [label = "assign"]
"start_tok_pred(13)$0" -> "0(13)" [label = "assign"]
"end_tok_pred(13)$0" -> "np(13)" [label = "assign"]
"end_tok_pred(13)$0" -> "end_pred_scores(13)$0" [label = "assign"]
"end_tok_pred(13)$0" -> "1(13)" [label = "assign"]
"end_tok_pred(13)$0" -> "0(13)" [label = "assign"]
"present_tok_pred(13)$0" -> "np(13)" [label = "assign"]
"present_tok_pred(13)$0" -> "present_pred_scores(13)$0" [label = "assign"]
"present_tok_pred(13)$0" -> "1(13)" [label = "assign"]
"present_tok_pred(13)$0" -> "0(13)" [label = "assign"]
"start_pred_score(13)$0" -> "start_pred_scores(13)$0" [label = "assign"]
"start_pred_score(13)$0" -> "0(13)" [label = "assign"]
"start_pred_score(13)$0" -> "start_tok_pred(13)$0" [label = "assign"]
"end_pred_score(13)$0" -> "end_pred_scores(13)$0" [label = "assign"]
"end_pred_score(13)$0" -> "0(13)" [label = "assign"]
"end_pred_score(13)$0" -> "end_tok_pred(13)$0" [label = "assign"]
"present_pred_score(13)$0" -> "present_pred_scores(13)$0" [label = "assign"]
"present_pred_score(13)$0" -> "0(13)" [label = "assign"]
"present_pred_score(13)$0" -> "present_tok_pred(13)$0" [label = "assign"]
"best_short_tokens(13)$1" -> "start_tok_pred(13)$0" [label = "assign"]
"best_short_tokens(13)$1" -> "long_ans_start_tok(13)$0" [label = "assign"]
"best_short_tokens(13)$1" -> "end_tok_pred(13)$0" [label = "assign"]
"best_short_tokens(13)$1" -> "long_ans_start_tok(13)$0" [label = "assign"]
"best_long_tokens(13)$1" -> "long_ans_start_tok(13)$0" [label = "assign"]
"best_long_tokens(13)$1" -> "long_ans_end_tok(13)$0" [label = "assign"]
"print[0]" -> "found one!(13)" [label = "print"]
"346(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"TEST_TOTAL(0)$0" -> "346(0)" [label = "assign"]
"answer(14)" -> "get_joined_tokens[0]" [label = "_argToVar"]
"json_data(15)" -> "get_pred[0]" [label = "_argToVar"]
"count(15)" -> "get_pred[1]" [label = "_argToVar"]
"ret(15)$0" -> "short(15)" [label = "assign"]
"ret(15)$0" -> "long(15)" [label = "assign"]
"ret(15)$0" -> "YES(15)" [label = "assign"]
"ret(15)$0" -> "(15)" [label = "assign"]
"candidates(15)$0" -> "json_data(15)" [label = "assign"]
"candidates(15)$0" -> "long_answer_candidates(15)" [label = "assign"]
"paragraphs(15)$0" -> "[](15)" [label = "assign"]
"tokens(15)$0" -> "json_data(15)" [label = "split"]
"tokens(15)$0" -> "document_text(15)" [label = "split"]
"tokens(15)$0" -> " (15)" [label = "split"]
"cand(15)" -> "candidates(15)$0" [label = "Iter"]
"start_token(15)$0" -> "tokens(15)$0" [label = "assign"]
"start_token(15)$0" -> "cand(15)" [label = "assign"]
"start_token(15)$0" -> "start_token(15)$0" [label = "assign"]
"cand(15)$0" -> "candidates(15)$0" [label = "assign"]
"cand(15)$0" -> "0(15)" [label = "assign"]
"ret(15)$1" -> "ret(15)$0" [label = "get_joined_tokens"]
"ret(15)$1" -> "cand(15)$0" [label = "get_joined_tokens"]
"best_short_tokens(15)$0" -> "0(15)" [label = "assign"]
"best_short_tokens(15)$0" -> "0(15)" [label = "assign"]
"best_long_tokens(15)$0" -> "0(15)" [label = "assign"]
"best_long_tokens(15)$0" -> "0(15)" [label = "assign"]
"best_short_tokens(15)$1" -> "json_data(15)" [label = "bidaf_pred"]
"best_long_tokens(15)$1" -> "json_data(15)" [label = "bidaf_pred"]
"ret(15)$2" -> "ret(15)$1" [label = "Mod"]
"ret(15)$2" -> "%d:%d(15)" [label = "Mod"]
"ret(15)$2" -> "best_short_tokens(15)$1" [label = "Mod"]
"ret(15)$2" -> "0(15)" [label = "Mod"]
"ret(15)$2" -> "best_short_tokens(15)$1" [label = "Mod"]
"ret(15)$2" -> "1(15)" [label = "Mod"]
"ret(15)$3" -> "ret(15)$2" [label = "Mod"]
"ret(15)$3" -> "%d:%d(15)" [label = "Mod"]
"ret(15)$3" -> "best_long_tokens(15)$1" [label = "Mod"]
"ret(15)$3" -> "0(15)" [label = "Mod"]
"ret(15)$3" -> "best_long_tokens(15)$1" [label = "Mod"]
"ret(15)$3" -> "1(15)" [label = "Mod"]
"id_(15)$0" -> "json_data(15)" [label = "str"]
"id_(15)$0" -> "example_id(15)" [label = "str"]
"ret(15)$4" -> "id_(15)$0" [label = "assign"]
"ret(15)$4" -> "_(15)" [label = "assign"]
"ret(15)$4" -> "k(15)" [label = "assign"]
"ret(15)$4" -> "v(15)" [label = "assign"]
"ret(15)$4" -> "k(15)" [label = "assign"]
"ret(15)$4" -> "v(15)" [label = "assign"]
"ret(15)$4" -> "ret(15)$4" [label = "assign"]
"count(0)$0" -> "0(0)" [label = "assign"]
"line(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"line(0)" -> "tqdm(0)" [label = "Iter"]
"f(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"line(0)" -> "f(0)" [label = "Iter"]
"line(0)" -> "TEST_TOTAL(0)$0" [label = "Iter"]
"count(0)$1" -> "1(0)" [label = "Add"]
"count(0)$1" -> "count(0)$0" [label = "Add"]
"json_data(0)$0" -> "json(0)" [label = "loads"]
"json_data(0)$0" -> "line(0)" [label = "loads"]
"model_bidaf(0)$6" -> "model_bidaf(0)$5" [label = "load_weights"]
"model_bidaf(0)$6" -> "../input/bert-and-bidaf/model_bidaf.h5(0)" [label = "load_weights"]
"prediction(0)$0" -> "json_data(0)$0" [label = "get_pred"]
"prediction(0)$0" -> "count(0)$1" [label = "get_pred"]
"preds(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"preds(0)$0" -> "preds(0)" [label = "update"]
"preds(0)$0" -> "prediction(0)$0" [label = "update"]
"submission(0)$0" -> "pd(0)" [label = "read_csv"]
"submission(0)$0" -> "path(0)$0" [label = "read_csv"]
"submission(0)$0" -> "sample_submission.csv(0)" [label = "read_csv"]
"submission(0)$1" -> "submission(0)$0" [label = "map"]
"submission(0)$1" -> "submission(0)$0" [label = "map"]
"example_id(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"submission(0)$1" -> "example_id(0)" [label = "map"]
"submission(0)$1" -> "preds(0)$0" [label = "map"]
"x(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"submission(0)$1" -> "x(0)" [label = "map"]
"submission(0)$2" -> "submission(0)$1" [label = "to_csv"]
"submission.csv(0)" -> "bert-and-bidaf.ipynb" [label = "appears"]
"submission(0)$2" -> "submission.csv(0)" [label = "to_csv"]
}