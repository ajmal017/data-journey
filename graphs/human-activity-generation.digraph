digraph { 
"dirname(0)" -> "os(0)" [label = "Iter"]
"_(0)" -> "os(0)" [label = "Iter"]
"filenames(0)" -> "os(0)" [label = "Iter"]
"dirname(0)" -> "/kaggle/input(0)" [label = "Iter"]
"_(0)" -> "/kaggle/input(0)" [label = "Iter"]
"filenames(0)" -> "/kaggle/input(0)" [label = "Iter"]
"filename(0)" -> "filenames(0)" [label = "Iter"]
"print[0]" -> "os(0)" [label = "print"]
"print[1]" -> "dirname(0)" [label = "print"]
"print[2]" -> "filename(0)" [label = "print"]
"train(0)$0" -> "pd(0)" [label = "read_csv"]
"train(0)$0" -> "/kaggle/input/human-activity-recognition-with-smartphones/train.csv(0)" [label = "read_csv"]
"test(0)$0" -> "pd(0)" [label = "read_csv"]
"test(0)$0" -> "/kaggle/input/human-activity-recognition-with-smartphones/test.csv(0)" [label = "read_csv"]
"print[0]" -> "train(0)$0" [label = "print"]
"print[1]" -> "test(0)$0" [label = "print"]
"print[0]" -> "Number of duplicates in train : (0)" [label = "print"]
"print[1]" -> "sum(0)" [label = "print"]
"print[2]" -> "train(0)$0" [label = "print"]
"print[0]" -> "Number of duplicates in test : (0)" [label = "print"]
"print[1]" -> "sum(0)" [label = "print"]
"print[2]" -> "test(0)$0" [label = "print"]
"print[0]" -> "Total number of missing values in train : (0)" [label = "print"]
"print[1]" -> "train(0)$0" [label = "print"]
"print[0]" -> "Total number of missing values in train : (0)" [label = "print"]
"print[1]" -> "test(0)$0" [label = "print"]
"plt(0)$0" -> "plt(0)" [label = "figure"]
"plt(0)$1" -> "plt(0)$0" [label = "title"]
"plt(0)$1" -> "Barplot of Activity(0)" [label = "title"]
"sns(0)$0" -> "sns(0)" [label = "countplot"]
"sns(0)$0" -> "train(0)$0" [label = "countplot"]
"plt(0)$2" -> "plt(0)$1" [label = "xticks"]
"plt(0)$3" -> "plt(0)$2" [label = "figure"]
"i(0)" -> "train(0)$0" [label = "Iter"]
"sns(0)$1" -> "sns(0)$0" [label = "distplot"]
"sns(0)$1" -> "train(0)$0" [label = "distplot"]
"sns(0)$1" -> "train(0)$0" [label = "distplot"]
"sns(0)$1" -> "Activity(0)" [label = "distplot"]
"sns(0)$1" -> "i(0)" [label = "distplot"]
"sns(0)$1" -> "tBodyAccMag-mean()(0)" [label = "distplot"]
"plt(0)$4" -> "plt(0)$3" [label = "legend"]
"plt(0)$5" -> "plt(0)$4" [label = "show"]
"plt(0)$6" -> "plt(0)$5" [label = "figure"]
"sns(0)$2" -> "sns(0)$1" [label = "boxplot"]
"X_for_tsne(0)$0" -> "train(0)$0" [label = "drop"]
"X_for_tsne(0)$0" -> "[<_ast.Str object at 0x1031fac90>, <_ast.Str object at 0x1031fa510>](0)" [label = "drop"]
"X_for_tsne(0)$0" -> "1(0)" [label = "drop"]
"tsne(0)$0" -> "TSNE(0)" [label = "fit_transform"]
"tsne(0)$0" -> "42(0)" [label = "fit_transform"]
"tsne(0)$0" -> "2(0)" [label = "fit_transform"]
"tsne(0)$0" -> "1(0)" [label = "fit_transform"]
"tsne(0)$0" -> "50(0)" [label = "fit_transform"]
"tsne(0)$0" -> "1000(0)" [label = "fit_transform"]
"tsne(0)$0" -> "X_for_tsne(0)$0" [label = "fit_transform"]
"plt(0)$7" -> "plt(0)$6" [label = "figure"]
"sns(0)$3" -> "sns(0)$2" [label = "scatterplot"]
"X_train(0)$0" -> "train(0)$0" [label = "drop"]
"X_train(0)$0" -> "[<_ast.Str object at 0x104063690>, <_ast.Str object at 0x104063610>](0)" [label = "drop"]
"X_train(0)$0" -> "1(0)" [label = "drop"]
"y_train(0)$0" -> "train(0)$0" [label = "eq"]
"X_test(0)$0" -> "test(0)$0" [label = "drop"]
"X_test(0)$0" -> "[<_ast.Str object at 0x104063e90>, <_ast.Str object at 0x104063cd0>](0)" [label = "drop"]
"X_test(0)$0" -> "1(0)" [label = "drop"]
"y_test(0)$0" -> "test(0)$0" [label = "eq"]
"print[0]" -> "Training data size : (0)" [label = "print"]
"print[1]" -> "X_train(0)$0" [label = "print"]
"print[0]" -> "Test data size : (0)" [label = "print"]
"print[1]" -> "X_test(0)$0" [label = "print"]
"warnings(0)$0" -> "warnings(0)" [label = "filterwarnings"]
"warnings(0)$0" -> "ignore(0)" [label = "filterwarnings"]
"parameters(0)$0" -> "C(0)" [label = "eq"]
"parameters(0)$0" -> "penalty(0)" [label = "eq"]
"parameters(0)$0" -> "np(0)" [label = "eq"]
"parameters(0)$0" -> "10(0)" [label = "eq"]
"parameters(0)$0" -> "61(0)" [label = "eq"]
"parameters(0)$0" -> "10(0)" [label = "eq"]
"parameters(0)$0" -> "[<_ast.Str object at 0x103430910>, <_ast.Str object at 0x103430fd0>](0)" [label = "eq"]
"lr_classifier_rs(0)$0" -> "lr_classifier(0)" [label = "RandomizedSearchCV"]
"lr_classifier_rs(0)$0" -> "parameters(0)$0" [label = "RandomizedSearchCV"]
"lr_classifier_rs(0)$0" -> "42(0)" [label = "RandomizedSearchCV"]
"lr_classifier_rs(0)$1" -> "lr_classifier_rs(0)$0" [label = "fit"]
"lr_classifier_rs(0)$1" -> "X_train(0)$0" [label = "fit"]
"lr_classifier_rs(0)$1" -> "y_train(0)$0" [label = "fit"]
"y_pred(0)$0" -> "lr_classifier_rs(0)$1" [label = "predict"]
"y_pred(0)$0" -> "X_test(0)$0" [label = "predict"]
"lr_accuracy(0)$0" -> "y_test(0)$0" [label = "accuracy_score"]
"lr_accuracy(0)$0" -> "y_pred(0)$0" [label = "accuracy_score"]
"print[0]" -> "Accuracy using Logistic Regression : (0)" [label = "print"]
"print[1]" -> "lr_accuracy(0)$0" [label = "print"]
"labels(0)$0" -> "np(0)" [label = "unique"]
"labels(0)$0" -> "y_pred(0)$0" [label = "unique"]
"plt(0)$8" -> "plt(0)$7" [label = "figure"]
"sns(0)$4" -> "sns(0)$3" [label = "heatmap"]
"sns(0)$4" -> "confusion_matrix(0)" [label = "heatmap"]
"sns(0)$4" -> "y_test(0)$0" [label = "heatmap"]
"sns(0)$4" -> "y_pred(0)$0" [label = "heatmap"]
"model(1)" -> "get_best_randomsearch_results[0]" [label = "_argToVar"]
"print[0]" -> "Best estimator : (1)" [label = "print"]
"print[1]" -> "model(1)" [label = "print"]
"print[0]" -> "Best set of parameters : (1)" [label = "print"]
"print[1]" -> "model(1)" [label = "print"]
"print[0]" -> "Best score : (1)" [label = "print"]
"print[1]" -> "model(1)" [label = "print"]
"get_best_randomsearch_results[0]" -> "lr_classifier_rs(0)$1" [label = "get_best_randomsearch_results"]
"parameters(0)$1" -> "max_depth(0)" [label = "eq"]
"parameters(0)$1" -> "np(0)" [label = "eq"]
"parameters(0)$1" -> "2(0)" [label = "eq"]
"parameters(0)$1" -> "10(0)" [label = "eq"]
"parameters(0)$1" -> "2(0)" [label = "eq"]
"dt_classifier_rs(0)$0" -> "dt_classifier(0)" [label = "RandomizedSearchCV"]
"dt_classifier_rs(0)$0" -> "parameters(0)$1" [label = "RandomizedSearchCV"]
"dt_classifier_rs(0)$0" -> "42(0)" [label = "RandomizedSearchCV"]
"dt_classifier_rs(0)$1" -> "dt_classifier_rs(0)$0" [label = "fit"]
"dt_classifier_rs(0)$1" -> "X_train(0)$0" [label = "fit"]
"dt_classifier_rs(0)$1" -> "y_train(0)$0" [label = "fit"]
"y_pred(0)$1" -> "dt_classifier_rs(0)$1" [label = "predict"]
"y_pred(0)$1" -> "X_test(0)$0" [label = "predict"]
"plt(0)$9" -> "plt(0)$8" [label = "figure"]
"sns(0)$5" -> "sns(0)$4" [label = "heatmap"]
"sns(0)$5" -> "confusion_matrix(0)" [label = "heatmap"]
"sns(0)$5" -> "y_test(0)$0" [label = "heatmap"]
"sns(0)$5" -> "y_pred(0)$1" [label = "heatmap"]
"get_best_randomsearch_results[0]" -> "dt_classifier_rs(0)$1" [label = "get_best_randomsearch_results"]
"params(0)$0" -> "n_estimators(0)" [label = "eq"]
"params(0)$0" -> "max_depth(0)" [label = "eq"]
"params(0)$0" -> "np(0)" [label = "eq"]
"params(0)$0" -> "20(0)" [label = "eq"]
"params(0)$0" -> "101(0)" [label = "eq"]
"params(0)$0" -> "10(0)" [label = "eq"]
"params(0)$0" -> "np(0)" [label = "eq"]
"params(0)$0" -> "2(0)" [label = "eq"]
"params(0)$0" -> "16(0)" [label = "eq"]
"params(0)$0" -> "2(0)" [label = "eq"]
"rf_classifier_rs(0)$0" -> "rf_classifier(0)" [label = "RandomizedSearchCV"]
"rf_classifier_rs(0)$0" -> "params(0)$0" [label = "RandomizedSearchCV"]
"rf_classifier_rs(0)$0" -> "42(0)" [label = "RandomizedSearchCV"]
"rf_classifier_rs(0)$1" -> "rf_classifier_rs(0)$0" [label = "fit"]
"rf_classifier_rs(0)$1" -> "X_train(0)$0" [label = "fit"]
"rf_classifier_rs(0)$1" -> "y_train(0)$0" [label = "fit"]
"y_pred(0)$2" -> "rf_classifier_rs(0)$1" [label = "predict"]
"y_pred(0)$2" -> "X_test(0)$0" [label = "predict"]
"plt(0)$10" -> "plt(0)$9" [label = "figure"]
"sns(0)$6" -> "sns(0)$5" [label = "heatmap"]
"sns(0)$6" -> "confusion_matrix(0)" [label = "heatmap"]
"sns(0)$6" -> "y_test(0)$0" [label = "heatmap"]
"sns(0)$6" -> "y_pred(0)$2" [label = "heatmap"]
"get_best_randomsearch_results[0]" -> "rf_classifier_rs(0)$1" [label = "get_best_randomsearch_results"]
}