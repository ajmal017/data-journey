digraph { 
"IPython.display" -> "transfer-learning.ipynb" [label = "import"]
"YouTubeVideo" -> "IPython.display" [label = "import"]
"YouTubeVideo(0)" -> "transfer-learning.ipynb" [label = "appears"]
"YouTubeVideo(0)" -> "YouTubeVideo" [label = "assign"]
"mPFq5KMxKVw(0)" -> "transfer-learning.ipynb" [label = "appears"]
"YouTubeVideo[0]" -> "mPFq5KMxKVw(0)" [label = "YouTubeVideo"]
"800(0)" -> "transfer-learning.ipynb" [label = "appears"]
"YouTubeVideo[1]" -> "800(0)" [label = "YouTubeVideo"]
"450(0)" -> "transfer-learning.ipynb" [label = "appears"]
"YouTubeVideo[2]" -> "450(0)" [label = "YouTubeVideo"]
"tensorflow.python.keras.applications" -> "transfer-learning.ipynb" [label = "import"]
"ResNet50" -> "tensorflow.python.keras.applications" [label = "import"]
"ResNet50(0)" -> "transfer-learning.ipynb" [label = "appears"]
"ResNet50(0)" -> "ResNet50" [label = "assign"]
"tensorflow.python.keras.models" -> "transfer-learning.ipynb" [label = "import"]
"Sequential" -> "tensorflow.python.keras.models" [label = "import"]
"Sequential(0)" -> "transfer-learning.ipynb" [label = "appears"]
"Sequential(0)" -> "Sequential" [label = "assign"]
"tensorflow.python.keras.layers" -> "transfer-learning.ipynb" [label = "import"]
"Dense" -> "tensorflow.python.keras.layers" [label = "import"]
"Dense(0)" -> "transfer-learning.ipynb" [label = "appears"]
"Dense(0)" -> "Dense" [label = "assign"]
"Flatten" -> "tensorflow.python.keras.layers" [label = "import"]
"Flatten(0)" -> "transfer-learning.ipynb" [label = "appears"]
"Flatten(0)" -> "Flatten" [label = "assign"]
"GlobalAveragePooling2D" -> "tensorflow.python.keras.layers" [label = "import"]
"GlobalAveragePooling2D(0)" -> "transfer-learning.ipynb" [label = "appears"]
"GlobalAveragePooling2D(0)" -> "GlobalAveragePooling2D" [label = "assign"]
"2(0)" -> "transfer-learning.ipynb" [label = "appears"]
"num_classes(0)$0" -> "2(0)" [label = "assign"]
"../input/resnet50/resnet50_weights_tf_dim_ordering_tf_kernels_notop.h5(0)" -> "transfer-learning.ipynb" [label = "appears"]
"resnet_weights_path(0)$0" -> "../input/resnet50/resnet50_weights_tf_dim_ordering_tf_kernels_notop.h5(0)" [label = "assign"]
"my_new_model(0)" -> "transfer-learning.ipynb" [label = "appears"]
"my_new_model(0)$0" -> "my_new_model(0)" [label = "add"]
"my_new_model(0)$0" -> "ResNet50(0)" [label = "add"]
"avg(0)" -> "transfer-learning.ipynb" [label = "appears"]
"my_new_model(0)$0" -> "avg(0)" [label = "add"]
"my_new_model(0)$0" -> "resnet_weights_path(0)$0" [label = "add"]
"my_new_model(0)$1" -> "my_new_model(0)$0" [label = "add"]
"my_new_model(0)$1" -> "Dense(0)" [label = "add"]
"my_new_model(0)$1" -> "num_classes(0)$0" [label = "add"]
"softmax(0)" -> "transfer-learning.ipynb" [label = "appears"]
"my_new_model(0)$1" -> "softmax(0)" [label = "add"]
"my_new_model(0)$2" -> "my_new_model(0)$1" [label = "compile"]
"tensorflow.python.keras.applications.resnet50" -> "transfer-learning.ipynb" [label = "import"]
"preprocess_input" -> "tensorflow.python.keras.applications.resnet50" [label = "import"]
"preprocess_input(0)" -> "transfer-learning.ipynb" [label = "appears"]
"preprocess_input(0)" -> "preprocess_input" [label = "assign"]
"tensorflow.python.keras.preprocessing.image" -> "transfer-learning.ipynb" [label = "import"]
"ImageDataGenerator" -> "tensorflow.python.keras.preprocessing.image" [label = "import"]
"ImageDataGenerator(0)" -> "transfer-learning.ipynb" [label = "appears"]
"ImageDataGenerator(0)" -> "ImageDataGenerator" [label = "assign"]
"224(0)" -> "transfer-learning.ipynb" [label = "appears"]
"image_size(0)$0" -> "224(0)" [label = "assign"]
"data_generator(0)$0" -> "preprocess_input(0)" [label = "ImageDataGenerator"]
"train_generator(0)$0" -> "data_generator(0)$0" [label = "flow_from_directory"]
"../input/urban-and-rural-photos/rural_and_urban_photos/train(0)" -> "transfer-learning.ipynb" [label = "appears"]
"train_generator(0)$0" -> "../input/urban-and-rural-photos/rural_and_urban_photos/train(0)" [label = "flow_from_directory"]
"train_generator(0)$0" -> "image_size(0)$0" [label = "flow_from_directory"]
"train_generator(0)$0" -> "image_size(0)$0" [label = "flow_from_directory"]
"24(0)" -> "transfer-learning.ipynb" [label = "appears"]
"train_generator(0)$0" -> "24(0)" [label = "flow_from_directory"]
"categorical(0)" -> "transfer-learning.ipynb" [label = "appears"]
"train_generator(0)$0" -> "categorical(0)" [label = "flow_from_directory"]
"validation_generator(0)$0" -> "data_generator(0)$0" [label = "flow_from_directory"]
"../input/urban-and-rural-photos/rural_and_urban_photos/val(0)" -> "transfer-learning.ipynb" [label = "appears"]
"validation_generator(0)$0" -> "../input/urban-and-rural-photos/rural_and_urban_photos/val(0)" [label = "flow_from_directory"]
"validation_generator(0)$0" -> "image_size(0)$0" [label = "flow_from_directory"]
"validation_generator(0)$0" -> "image_size(0)$0" [label = "flow_from_directory"]
"validation_generator(0)$0" -> "categorical(0)" [label = "flow_from_directory"]
"my_new_model(0)$3" -> "my_new_model(0)$2" [label = "fit_generator"]
"my_new_model(0)$3" -> "train_generator(0)$0" [label = "fit_generator"]
}