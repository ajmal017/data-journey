digraph { 
"gc" -> "baseline-with-news.ipynb" [label = "import"]
"gc(0)" -> "baseline-with-news.ipynb" [label = "appears"]
"gc(0)" -> "gc" [label = "assign"]
"datetime" -> "baseline-with-news.ipynb" [label = "import"]
"datetime" -> "datetime" [label = "import"]
"datetime(0)" -> "baseline-with-news.ipynb" [label = "appears"]
"datetime(0)" -> "datetime" [label = "assign"]
"timedelta" -> "datetime" [label = "import"]
"timedelta(0)" -> "baseline-with-news.ipynb" [label = "appears"]
"timedelta(0)" -> "timedelta" [label = "assign"]
"numpy" -> "baseline-with-news.ipynb" [label = "import"]
"np(0)" -> "baseline-with-news.ipynb" [label = "appears"]
"np(0)" -> "numpy" [label = "assign"]
"pandas" -> "baseline-with-news.ipynb" [label = "import"]
"pd(0)" -> "baseline-with-news.ipynb" [label = "appears"]
"pd(0)" -> "pandas" [label = "assign"]
"sklearn.metrics" -> "baseline-with-news.ipynb" [label = "import"]
"log_loss" -> "sklearn.metrics" [label = "import"]
"log_loss(0)" -> "baseline-with-news.ipynb" [label = "appears"]
"log_loss(0)" -> "log_loss" [label = "assign"]
"sklearn.model_selection" -> "baseline-with-news.ipynb" [label = "import"]
"train_test_split" -> "sklearn.model_selection" [label = "import"]
"train_test_split(0)" -> "baseline-with-news.ipynb" [label = "appears"]
"train_test_split(0)" -> "train_test_split" [label = "assign"]
"xgboost" -> "baseline-with-news.ipynb" [label = "import"]
"XGBClassifier" -> "xgboost" [label = "import"]
"XGBClassifier(0)" -> "baseline-with-news.ipynb" [label = "appears"]
"XGBClassifier(0)" -> "XGBClassifier" [label = "assign"]
"lightgbm" -> "baseline-with-news.ipynb" [label = "import"]
"LGBMClassifier" -> "lightgbm" [label = "import"]
"LGBMClassifier(0)" -> "baseline-with-news.ipynb" [label = "appears"]
"LGBMClassifier(0)" -> "LGBMClassifier" [label = "assign"]
"seaborn" -> "baseline-with-news.ipynb" [label = "import"]
"sns(0)" -> "baseline-with-news.ipynb" [label = "appears"]
"sns(0)" -> "seaborn" [label = "assign"]
"matplotlib.pyplot" -> "baseline-with-news.ipynb" [label = "import"]
"plt(0)" -> "baseline-with-news.ipynb" [label = "appears"]
"plt(0)" -> "matplotlib.pyplot" [label = "assign"]
"kaggle.competitions" -> "baseline-with-news.ipynb" [label = "import"]
"twosigmanews" -> "kaggle.competitions" [label = "import"]
"twosigmanews(0)" -> "baseline-with-news.ipynb" [label = "appears"]
"twosigmanews(0)" -> "twosigmanews" [label = "assign"]
"pd(0)$0" -> "pd(0)" [label = "set_option"]
"max_columns(0)" -> "baseline-with-news.ipynb" [label = "appears"]
"pd(0)$0" -> "max_columns(0)" [label = "set_option"]
"50(0)" -> "baseline-with-news.ipynb" [label = "appears"]
"pd(0)$0" -> "50(0)" [label = "set_option"]
"env(0)$0" -> "twosigmanews(0)" [label = "make_env"]
"market_train(0)$0" -> "env(0)$0" [label = "get_training_data"]
"news_train(0)$0" -> "env(0)$0" [label = "get_training_data"]
"start(0)$0" -> "datetime(0)" [label = "date"]
"2009(0)" -> "baseline-with-news.ipynb" [label = "appears"]
"start(0)$0" -> "2009(0)" [label = "date"]
"1(0)" -> "baseline-with-news.ipynb" [label = "appears"]
"start(0)$0" -> "1(0)" [label = "date"]
"start(0)$0" -> "1(0)" [label = "date"]
"0(0)" -> "baseline-with-news.ipynb" [label = "appears"]
"start(0)$0" -> "0(0)" [label = "date"]
"start(0)$0" -> "0(0)" [label = "date"]
"start(0)$0" -> "0(0)" [label = "date"]
"market_train(0)$1" -> "market_train(0)$0" [label = "reset_index"]
"market_train(0)$1" -> "market_train(0)$1" [label = "reset_index"]
"time(0)" -> "baseline-with-news.ipynb" [label = "appears"]
"market_train(0)$1" -> "time(0)" [label = "reset_index"]
"market_train(0)$1" -> "start(0)$0" [label = "reset_index"]
"news_train(0)$1" -> "news_train(0)$0" [label = "reset_index"]
"news_train(0)$1" -> "news_train(0)$1" [label = "reset_index"]
"news_train(0)$1" -> "time(0)" [label = "reset_index"]
"news_train(0)$1" -> "start(0)$0" [label = "reset_index"]
"market_train(0)$2" -> "market_train(0)$1" [label = "head"]
"3(0)" -> "baseline-with-news.ipynb" [label = "appears"]
"market_train(0)$2" -> "3(0)" [label = "head"]
"news_train(0)$2" -> "news_train(0)$1" [label = "head"]
"news_train(0)$2" -> "3(0)" [label = "head"]
"news_train(1)" -> "preprocess_news[0]" [label = "_argToVar"]
"drop_list(1)$0" -> "[<_ast.Str object at 0x1060f5cd0>, <_ast.Str object at 0x1060f5490>, <_ast.Str object at 0x1060f5b10>, <_ast.Str object at 0x1060f5210>, <_ast.Str object at 0x1060f5250>, <_ast.Str object at 0x1060f51d0>](1)" [label = "assign"]
"news_train(1)$0" -> "news_train(1)" [label = "drop"]
"news_train(1)$0" -> "drop_list(1)$0" [label = "drop"]
"col(1)" -> "[<_ast.Str object at 0x1060f5d10>, <_ast.Str object at 0x1060f5bd0>, <_ast.Str object at 0x1060f5650>](1)" [label = "Iter"]
"news_train(1)$1" -> "news_train(1)$0" [label = "factorize"]
"news_train(1)$1" -> "pd(1)" [label = "factorize"]
"uniques(1)$0" -> "pd(1)" [label = "factorize"]
"news_train(1)$1" -> "news_train(1)$1" [label = "factorize"]
"uniques(1)$0" -> "news_train(1)$1" [label = "factorize"]
"news_train(1)$1" -> "col(1)" [label = "factorize"]
"uniques(1)$0" -> "col(1)" [label = "factorize"]
"news_train(1)$2" -> "news_train(1)$1" [label = "apply"]
"news_train(1)$2" -> "news_train(1)$1" [label = "apply"]
"news_train(1)$2" -> "assetCodes(1)" [label = "apply"]
"news_train(1)$2" -> "x(1)" [label = "apply"]
"news_train(1)$2" -> "1(1)" [label = "apply"]
"news_train(1)$2" -> "1(1)" [label = "apply"]
"news_train(1)$2" -> "'(1)" [label = "apply"]
"news_train(1)$2" -> "(1)" [label = "apply"]
"news_train(0)$3" -> "news_train(0)$2" [label = "preprocess_news"]
"news_train(2)" -> "unstack_asset_codes[0]" [label = "_argToVar"]
"codes(2)$0" -> "[](2)" [label = "assign"]
"indexes(2)$0" -> "[](2)" [label = "assign"]
"i(2)" -> "news_train(2)" [label = "Iter"]
"values(2)" -> "news_train(2)" [label = "Iter"]
"i(2)" -> "assetCodes(2)" [label = "Iter"]
"values(2)" -> "assetCodes(2)" [label = "Iter"]
"explode(2)$0" -> "values(2)" [label = "split"]
"explode(2)$0" -> ", (2)" [label = "split"]
"codes(2)$1" -> "codes(2)$0" [label = "extend"]
"codes(2)$1" -> "explode(2)$0" [label = "extend"]
"repeat_index(2)$0" -> "[<_ast.Call object at 0x1060fa650>](2)" [label = "Mult"]
"repeat_index(2)$0" -> "len(2)" [label = "Mult"]
"repeat_index(2)$0" -> "explode(2)$0" [label = "Mult"]
"indexes(2)$1" -> "indexes(2)$0" [label = "extend"]
"indexes(2)$1" -> "repeat_index(2)$0" [label = "extend"]
"index_df(2)$0" -> "pd(2)" [label = "DataFrame"]
"index_df(2)$0" -> "news_index(2)" [label = "DataFrame"]
"index_df(2)$0" -> "assetCode(2)" [label = "DataFrame"]
"index_df(2)$0" -> "indexes(2)$1" [label = "DataFrame"]
"index_df(2)$0" -> "codes(2)$1" [label = "DataFrame"]
"gc(2)$0" -> "gc(2)" [label = "collect"]
"index_df(0)$0" -> "news_train(0)$3" [label = "unstack_asset_codes"]
"index_df(0)$1" -> "index_df(0)$0" [label = "head"]
"news_train(3)" -> "merge_news_on_index[0]" [label = "_argToVar"]
"index_df(3)" -> "merge_news_on_index[1]" [label = "_argToVar"]
"news_train(3)$0" -> "news_train(3)" [label = "copy"]
"news_train(3)$0" -> "news_train(3)" [label = "copy"]
"news_unstack(3)$0" -> "index_df(3)" [label = "merge"]
"news_unstack(3)$0" -> "news_train(3)$0" [label = "merge"]
"news_unstack(3)$0" -> "left(3)" [label = "merge"]
"news_unstack(3)$0" -> "news_index(3)" [label = "merge"]
"news_unstack(3)$1" -> "news_unstack(3)$0" [label = "drop"]
"news_unstack(3)$1" -> "[<_ast.Str object at 0x10603fe90>, <_ast.Str object at 0x10603f550>](3)" [label = "drop"]
"news_unstack(0)$0" -> "news_train(0)$3" [label = "merge_news_on_index"]
"news_unstack(0)$0" -> "index_df(0)$1" [label = "merge_news_on_index"]
"gc(0)$0" -> "gc(0)" [label = "collect"]
"news_unstack(0)$1" -> "news_unstack(0)$0" [label = "head"]
"news_unstack(0)$1" -> "3(0)" [label = "head"]
"news_frame(4)" -> "group_news[0]" [label = "_argToVar"]
"news_frame(4)$0" -> "news_frame(4)" [label = "assign"]
"news_frame(4)$0" -> "news_frame(4)" [label = "assign"]
"aggregations(4)$0" -> "[<_ast.Str object at 0x10603f310>](4)" [label = "assign"]
"gp(4)$0" -> "news_frame(4)$0" [label = "agg"]
"gp(4)$0" -> "[<_ast.Str object at 0x10603f950>, <_ast.Str object at 0x10603fb90>](4)" [label = "agg"]
"gp(4)$0" -> "aggregations(4)$0" [label = "agg"]
"gp(4)$1" -> "gp(4)$0" [label = "Index"]
"gp(4)$1" -> "pd(4)" [label = "Index"]
"gp(4)$1" -> "{}_{}(4)" [label = "Index"]
"gp(4)$1" -> "e(4)" [label = "Index"]
"gp(4)$1" -> "0(4)" [label = "Index"]
"gp(4)$1" -> "e(4)" [label = "Index"]
"gp(4)$1" -> "1(4)" [label = "Index"]
"gp(4)$1" -> "e(4)" [label = "Index"]
"gp(4)$1" -> "gp(4)$1" [label = "Index"]
"gp(4)$2" -> "gp(4)$1" [label = "reset_index"]
"float_cols(4)$0" -> "c(4)" [label = "assign"]
"float_cols(4)$0" -> "float32(4)" [label = "assign"]
"float_cols(4)$0" -> "c(4)" [label = "assign"]
"float_cols(4)$0" -> "gp(4)$2" [label = "assign"]
"float_cols(4)$0" -> "c(4)" [label = "assign"]
"float_cols(4)$0" -> "[<_ast.Str object at 0x106738e50>, <_ast.Str object at 0x1067381d0>](4)" [label = "assign"]
"news_agg(0)$0" -> "news_unstack(0)$1" [label = "group_news"]
"gc(0)$1" -> "gc(0)$0" [label = "collect"]
"news_agg(0)$1" -> "news_agg(0)$0" [label = "head"]
"news_agg(0)$1" -> "3(0)" [label = "head"]
"market_train(0)$3" -> "market_train(0)$2" [label = "assign"]
"market_train(0)$3" -> "market_train(0)$2" [label = "assign"]
"df(0)$0" -> "market_train(0)$3" [label = "merge"]
"df(0)$0" -> "news_agg(0)$1" [label = "merge"]
"left(0)" -> "baseline-with-news.ipynb" [label = "appears"]
"df(0)$0" -> "left(0)" [label = "merge"]
"[<_ast.Str object at 0x105df3350>, <_ast.Str object at 0x105df3410>](0)" -> "baseline-with-news.ipynb" [label = "appears"]
"df(0)$0" -> "[<_ast.Str object at 0x105df3350>, <_ast.Str object at 0x105df3410>](0)" [label = "merge"]
"gc(0)$2" -> "gc(0)$1" [label = "collect"]
"df(0)$1" -> "df(0)$0" [label = "head"]
"df(0)$1" -> "3(0)" [label = "head"]
"date(5)" -> "custom_metric[0]" [label = "_argToVar"]
"pred_proba(5)" -> "custom_metric[1]" [label = "_argToVar"]
"num_target(5)" -> "custom_metric[2]" [label = "_argToVar"]
"universe(5)" -> "custom_metric[3]" [label = "_argToVar"]
"y(5)$0" -> "pred_proba(5)" [label = "Sub"]
"y(5)$0" -> "2(5)" [label = "Sub"]
"y(5)$0" -> "1(5)" [label = "Sub"]
"r(5)$0" -> "num_target(5)" [label = "clip"]
"r(5)$0" -> "1(5)" [label = "clip"]
"r(5)$0" -> "1(5)" [label = "clip"]
"x(5)$0" -> "y(5)$0" [label = "Mult"]
"x(5)$0" -> "r(5)$0" [label = "Mult"]
"x(5)$0" -> "universe(5)" [label = "Mult"]
"result(5)$0" -> "pd(5)" [label = "DataFrame"]
"result(5)$0" -> "day(5)" [label = "DataFrame"]
"result(5)$0" -> "x(5)$0" [label = "DataFrame"]
"result(5)$0" -> "date(5)" [label = "DataFrame"]
"result(5)$0" -> "x(5)$0" [label = "DataFrame"]
"x_t(5)$0" -> "result(5)$0" [label = "assign"]
"x_t(5)$0" -> "day(5)" [label = "assign"]
"date(0)$0" -> "df(0)$1" [label = "assign"]
"num_target(0)$0" -> "df(0)$1" [label = "astype"]
"float32(0)" -> "baseline-with-news.ipynb" [label = "appears"]
"num_target(0)$0" -> "float32(0)" [label = "astype"]
"bin_target(0)$0" -> "df(0)$1" [label = "astype"]
"bin_target(0)$0" -> "0(0)" [label = "astype"]
"int8(0)" -> "baseline-with-news.ipynb" [label = "appears"]
"bin_target(0)$0" -> "int8(0)" [label = "astype"]
"universe(0)$0" -> "df(0)$1" [label = "astype"]
"universe(0)$0" -> "int8(0)" [label = "astype"]
"df(0)$2" -> "df(0)$1" [label = "drop"]
"[<_ast.Str object at 0x105b23c90>, <_ast.Str object at 0x105b23e10>, <_ast.Str object at 0x105b23c50>, <_ast.Str object at 0x105b23c10>, <_ast.Str object at 0x105b23650>, <_ast.Str object at 0x105b23b10>](0)" -> "baseline-with-news.ipynb" [label = "appears"]
"df(0)$2" -> "[<_ast.Str object at 0x105b23c90>, <_ast.Str object at 0x105b23e10>, <_ast.Str object at 0x105b23c50>, <_ast.Str object at 0x105b23c10>, <_ast.Str object at 0x105b23650>, <_ast.Str object at 0x105b23b10>](0)" [label = "drop"]
"df(0)$3" -> "df(0)$2" [label = "astype"]
"df(0)$3" -> "float32(0)" [label = "astype"]
"gc(0)$3" -> "gc(0)$2" [label = "collect"]
"train_index(0)$0" -> "df(0)$3" [label = "train_test_split"]
"test_index(0)$0" -> "df(0)$3" [label = "train_test_split"]
"0.1(0)" -> "baseline-with-news.ipynb" [label = "appears"]
"train_index(0)$0" -> "0.1(0)" [label = "train_test_split"]
"test_index(0)$0" -> "0.1(0)" [label = "train_test_split"]
"df(6)" -> "evaluate_model[0]" [label = "_argToVar"]
"target(6)" -> "evaluate_model[1]" [label = "_argToVar"]
"train_index(6)" -> "evaluate_model[2]" [label = "_argToVar"]
"test_index(6)" -> "evaluate_model[3]" [label = "_argToVar"]
"params(6)" -> "evaluate_model[4]" [label = "_argToVar"]
"params(6)$0" -> "params(6)" [label = "assign"]
"params(6)$0" -> "2(6)" [label = "assign"]
"model(6)$0" -> "params(6)$0" [label = "LGBMClassifier"]
"model(6)$1" -> "model(6)$0" [label = "fit"]
"model(6)$1" -> "df(6)" [label = "fit"]
"model(6)$1" -> "train_index(6)" [label = "fit"]
"model(6)$1" -> "target(6)" [label = "fit"]
"model(6)$1" -> "train_index(6)" [label = "fit"]
"learning_rate(0)" -> "baseline-with-news.ipynb" [label = "appears"]
"param_grid(0)$0" -> "learning_rate(0)" [label = "assign"]
"num_leaves(0)" -> "baseline-with-news.ipynb" [label = "appears"]
"param_grid(0)$0" -> "num_leaves(0)" [label = "assign"]
"n_estimators(0)" -> "baseline-with-news.ipynb" [label = "appears"]
"param_grid(0)$0" -> "n_estimators(0)" [label = "assign"]
"min_child_samples(0)" -> "baseline-with-news.ipynb" [label = "appears"]
"param_grid(0)$0" -> "min_child_samples(0)" [label = "assign"]
"colsample_bytree(0)" -> "baseline-with-news.ipynb" [label = "appears"]
"param_grid(0)$0" -> "colsample_bytree(0)" [label = "assign"]
"subsample(0)" -> "baseline-with-news.ipynb" [label = "appears"]
"param_grid(0)$0" -> "subsample(0)" [label = "assign"]
"reg_alpha(0)" -> "baseline-with-news.ipynb" [label = "appears"]
"param_grid(0)$0" -> "reg_alpha(0)" [label = "assign"]
"reg_lambda(0)" -> "baseline-with-news.ipynb" [label = "appears"]
"param_grid(0)$0" -> "reg_lambda(0)" [label = "assign"]
"[<_ast.Num object at 0x105b34490>, <_ast.Num object at 0x105b34fd0>, <_ast.Num object at 0x105b34810>, <_ast.Num object at 0x105b34e10>, <_ast.Num object at 0x105b34a10>](0)" -> "baseline-with-news.ipynb" [label = "appears"]
"param_grid(0)$0" -> "[<_ast.Num object at 0x105b34490>, <_ast.Num object at 0x105b34fd0>, <_ast.Num object at 0x105b34810>, <_ast.Num object at 0x105b34e10>, <_ast.Num object at 0x105b34a10>](0)" [label = "assign"]
"i(0)" -> "baseline-with-news.ipynb" [label = "appears"]
"param_grid(0)$0" -> "i(0)" [label = "assign"]
"param_grid(0)$0" -> "i(0)" [label = "assign"]
"range(0)" -> "baseline-with-news.ipynb" [label = "appears"]
"param_grid(0)$0" -> "range(0)" [label = "assign"]
"12(0)" -> "baseline-with-news.ipynb" [label = "appears"]
"param_grid(0)$0" -> "12(0)" [label = "assign"]
"90(0)" -> "baseline-with-news.ipynb" [label = "appears"]
"param_grid(0)$0" -> "90(0)" [label = "assign"]
"6(0)" -> "baseline-with-news.ipynb" [label = "appears"]
"param_grid(0)$0" -> "6(0)" [label = "assign"]
"[<_ast.Num object at 0x105b34b50>, <_ast.Num object at 0x105b34910>, <_ast.Num object at 0x105b34250>, <_ast.Num object at 0x105b340d0>, <_ast.Num object at 0x105b34f90>](0)" -> "baseline-with-news.ipynb" [label = "appears"]
"param_grid(0)$0" -> "[<_ast.Num object at 0x105b34b50>, <_ast.Num object at 0x105b34910>, <_ast.Num object at 0x105b34250>, <_ast.Num object at 0x105b340d0>, <_ast.Num object at 0x105b34f90>](0)" [label = "assign"]
"param_grid(0)$0" -> "i(0)" [label = "assign"]
"param_grid(0)$0" -> "i(0)" [label = "assign"]
"param_grid(0)$0" -> "range(0)" [label = "assign"]
"10(0)" -> "baseline-with-news.ipynb" [label = "appears"]
"param_grid(0)$0" -> "10(0)" [label = "assign"]
"100(0)" -> "baseline-with-news.ipynb" [label = "appears"]
"param_grid(0)$0" -> "100(0)" [label = "assign"]
"param_grid(0)$0" -> "10(0)" [label = "assign"]
"[<_ast.Num object at 0x105f34f50>, <_ast.Num object at 0x105f34b50>, <_ast.Num object at 0x105f34390>, <_ast.Num object at 0x105f340d0>](0)" -> "baseline-with-news.ipynb" [label = "appears"]
"param_grid(0)$0" -> "[<_ast.Num object at 0x105f34f50>, <_ast.Num object at 0x105f34b50>, <_ast.Num object at 0x105f34390>, <_ast.Num object at 0x105f340d0>](0)" [label = "assign"]
"[<_ast.Num object at 0x105f34fd0>, <_ast.Num object at 0x105f34350>, <_ast.Num object at 0x105f34dd0>, <_ast.Num object at 0x105f34650>](0)" -> "baseline-with-news.ipynb" [label = "appears"]
"param_grid(0)$0" -> "[<_ast.Num object at 0x105f34fd0>, <_ast.Num object at 0x105f34350>, <_ast.Num object at 0x105f34dd0>, <_ast.Num object at 0x105f34650>](0)" [label = "assign"]
"[<_ast.Num object at 0x105f349d0>, <_ast.Num object at 0x105f34f10>, <_ast.Num object at 0x105f34550>, <_ast.Num object at 0x105f341d0>, <_ast.Num object at 0x105f34190>](0)" -> "baseline-with-news.ipynb" [label = "appears"]
"param_grid(0)$0" -> "[<_ast.Num object at 0x105f349d0>, <_ast.Num object at 0x105f34f10>, <_ast.Num object at 0x105f34550>, <_ast.Num object at 0x105f341d0>, <_ast.Num object at 0x105f34190>](0)" [label = "assign"]
"[<_ast.Num object at 0x105f34890>, <_ast.Num object at 0x105f34850>, <_ast.Num object at 0x105f348d0>, <_ast.Num object at 0x105f34110>, <_ast.Num object at 0x105f34f90>](0)" -> "baseline-with-news.ipynb" [label = "appears"]
"param_grid(0)$0" -> "[<_ast.Num object at 0x105f34890>, <_ast.Num object at 0x105f34850>, <_ast.Num object at 0x105f348d0>, <_ast.Num object at 0x105f34110>, <_ast.Num object at 0x105f34f90>](0)" [label = "assign"]
"best_eval_score(0)$0" -> "0(0)" [label = "assign"]
"i(0)" -> "range(0)" [label = "Iter"]
"i(0)" -> "100(0)" [label = "Iter"]
"k(0)" -> "baseline-with-news.ipynb" [label = "appears"]
"params(0)$0" -> "k(0)" [label = "assign"]
"params(0)$0" -> "np(0)" [label = "assign"]
"v(0)" -> "baseline-with-news.ipynb" [label = "appears"]
"params(0)$0" -> "v(0)" [label = "assign"]
"params(0)$0" -> "k(0)" [label = "assign"]
"params(0)$0" -> "v(0)" [label = "assign"]
"params(0)$0" -> "param_grid(0)$0" [label = "assign"]
"score(0)$0" -> "df(0)$3" [label = "evaluate_model"]
"score(0)$0" -> "bin_target(0)$0" [label = "evaluate_model"]
"score(0)$0" -> "train_index(0)$0" [label = "evaluate_model"]
"score(0)$0" -> "test_index(0)$0" [label = "evaluate_model"]
"score(0)$0" -> "params(0)$0" [label = "evaluate_model"]
"best_eval_score(0)$1" -> "score(0)$0" [label = "assign"]
"best_params(0)$0" -> "params(0)$0" [label = "assign"]
"Best evaluation logloss(0)" -> "baseline-with-news.ipynb" [label = "appears"]
"print[0]" -> "Best evaluation logloss(0)" [label = "print"]
"print[1]" -> "best_eval_score(0)$1" [label = "print"]
"clf(0)$0" -> "best_params(0)$0" [label = "LGBMClassifier"]
"clf(0)$1" -> "clf(0)$0" [label = "fit"]
"clf(0)$1" -> "df(0)$3" [label = "fit"]
"clf(0)$1" -> "bin_target(0)$0" [label = "fit"]
"model(7)" -> "write_submission[0]" [label = "_argToVar"]
"env(7)" -> "write_submission[1]" [label = "_argToVar"]
"days(7)$0" -> "env(7)" [label = "get_prediction_days"]
"market_obs_df(7)" -> "days(7)$0" [label = "Iter"]
"news_obs_df(7)" -> "days(7)$0" [label = "Iter"]
"predictions_template_df(7)" -> "days(7)$0" [label = "Iter"]
"news_obs_df(7)$0" -> "news_obs_df(7)" [label = "preprocess_news"]
"index_df(7)$0" -> "news_obs_df(7)$0" [label = "unstack_asset_codes"]
"news_unstack(7)$0" -> "news_obs_df(7)$0" [label = "merge_news_on_index"]
"news_unstack(7)$0" -> "index_df(7)$0" [label = "merge_news_on_index"]
"news_obs_agg(7)$0" -> "news_unstack(7)$0" [label = "group_news"]
"market_obs_df(7)$0" -> "market_obs_df(7)" [label = "assign"]
"market_obs_df(7)$0" -> "market_obs_df(7)" [label = "assign"]
"obs_df(7)$0" -> "market_obs_df(7)$0" [label = "merge"]
"obs_df(7)$0" -> "news_obs_agg(7)$0" [label = "merge"]
"obs_df(7)$0" -> "left(7)" [label = "merge"]
"obs_df(7)$0" -> "[<_ast.Str object at 0x10671fbd0>, <_ast.Str object at 0x10671f210>](7)" [label = "merge"]
"gc(7)$0" -> "gc(7)" [label = "collect"]
"obs_df(7)$1" -> "obs_df(7)$0" [label = "assign"]
"obs_df(7)$1" -> "obs_df(7)$1" [label = "assign"]
"obs_df(7)$1" -> "predictions_template_df(7)" [label = "assign"]
"feats(7)$0" -> "c(7)" [label = "assign"]
"feats(7)$0" -> "c(7)" [label = "assign"]
"feats(7)$0" -> "obs_df(7)$1" [label = "assign"]
"feats(7)$0" -> "c(7)" [label = "assign"]
"feats(7)$0" -> "[<_ast.Str object at 0x10671f410>, <_ast.Str object at 0x10671f890>, <_ast.Str object at 0x10671f650>, <_ast.Str object at 0x10671ffd0>](7)" [label = "assign"]
"preds(7)$0" -> "model(7)" [label = "Sub"]
"preds(7)$0" -> "obs_df(7)$1" [label = "Sub"]
"preds(7)$0" -> "feats(7)$0" [label = "Sub"]
"preds(7)$0" -> "1(7)" [label = "Sub"]
"preds(7)$0" -> "2(7)" [label = "Sub"]
"preds(7)$0" -> "1(7)" [label = "Sub"]
"sub(7)$0" -> "pd(7)" [label = "DataFrame"]
"sub(7)$0" -> "assetCode(7)" [label = "DataFrame"]
"sub(7)$0" -> "confidence(7)" [label = "DataFrame"]
"sub(7)$0" -> "obs_df(7)$1" [label = "DataFrame"]
"sub(7)$0" -> "assetCode(7)" [label = "DataFrame"]
"sub(7)$0" -> "preds(7)$0" [label = "DataFrame"]
"predictions_template_df(7)$0" -> "predictions_template_df(7)" [label = "rename"]
"predictions_template_df(7)$0" -> "sub(7)$0" [label = "rename"]
"predictions_template_df(7)$0" -> "left(7)" [label = "rename"]
"predictions_template_df(7)$0" -> "confidenceValue(7)" [label = "rename"]
"predictions_template_df(7)$0" -> "1(7)" [label = "rename"]
"predictions_template_df(7)$0" -> "0(7)" [label = "rename"]
"predictions_template_df(7)$0" -> "confidence(7)" [label = "rename"]
"predictions_template_df(7)$0" -> "confidenceValue(7)" [label = "rename"]
"env(7)$0" -> "env(7)" [label = "predict"]
"env(7)$0" -> "predictions_template_df(7)$0" [label = "predict"]
"gc(7)$1" -> "gc(7)$0" [label = "collect"]
"env(7)$1" -> "env(7)$0" [label = "write_submission_file"]
"write_submission[0]" -> "clf(0)$1" [label = "write_submission"]
"write_submission[1]" -> "env(0)$0" [label = "write_submission"]
"feat_importance(0)$0" -> "pd(0)$0" [label = "DataFrame"]
"feat_importance(0)$1" -> "feat_importance(0)$0" [label = "assign"]
"feat_importance(0)$1" -> "df(0)$3" [label = "assign"]
"feat_importance(0)$2" -> "feat_importance(0)$1" [label = "feature_importance"]
"feat_importance(0)$2" -> "clf(0)$1" [label = "feature_importance"]
"gain(0)" -> "baseline-with-news.ipynb" [label = "appears"]
"feat_importance(0)$2" -> "gain(0)" [label = "feature_importance"]
"feat_importance(0)$3" -> "feat_importance(0)$2" [label = "sort_values"]
"plt(0)$0" -> "plt(0)" [label = "figure"]
"ax(0)$0" -> "sns(0)" [label = "barplot"]
"feature(0)" -> "baseline-with-news.ipynb" [label = "appears"]
"ax(0)$0" -> "feature(0)" [label = "barplot"]
"ax(0)$0" -> "gain(0)" [label = "barplot"]
"ax(0)$0" -> "feat_importance(0)$3" [label = "barplot"]
}