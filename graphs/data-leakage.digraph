digraph { 
"pandas" -> "data-leakage.ipynb" [label = "import"]
"pd(0)" -> "data-leakage.ipynb" [label = "appears"]
"pd(0)" -> "pandas" [label = "assign"]
"data(0)$0" -> "pd(0)" [label = "read_csv"]
"../input/AER_credit_card_data.csv(0)" -> "data-leakage.ipynb" [label = "appears"]
"data(0)$0" -> "../input/AER_credit_card_data.csv(0)" [label = "read_csv"]
"[<_ast.Str object at 0x105b51490>](0)" -> "data-leakage.ipynb" [label = "appears"]
"data(0)$0" -> "[<_ast.Str object at 0x105b51490>](0)" [label = "read_csv"]
"[<_ast.Str object at 0x105b51090>](0)" -> "data-leakage.ipynb" [label = "appears"]
"data(0)$0" -> "[<_ast.Str object at 0x105b51090>](0)" [label = "read_csv"]
"print[0]" -> "data(0)$0" [label = "print"]
"sklearn.pipeline" -> "data-leakage.ipynb" [label = "import"]
"make_pipeline" -> "sklearn.pipeline" [label = "import"]
"make_pipeline(0)" -> "data-leakage.ipynb" [label = "appears"]
"make_pipeline(0)" -> "make_pipeline" [label = "assign"]
"sklearn.ensemble" -> "data-leakage.ipynb" [label = "import"]
"RandomForestClassifier" -> "sklearn.ensemble" [label = "import"]
"RandomForestClassifier(0)" -> "data-leakage.ipynb" [label = "appears"]
"RandomForestClassifier(0)" -> "RandomForestClassifier" [label = "assign"]
"sklearn.model_selection" -> "data-leakage.ipynb" [label = "import"]
"cross_val_score" -> "sklearn.model_selection" [label = "import"]
"cross_val_score(0)" -> "data-leakage.ipynb" [label = "appears"]
"cross_val_score(0)" -> "cross_val_score" [label = "assign"]
"y(0)$0" -> "data(0)$0" [label = "assign"]
"X(0)$0" -> "data(0)$0" [label = "drop"]
"[<_ast.Str object at 0x105b51110>](0)" -> "data-leakage.ipynb" [label = "appears"]
"X(0)$0" -> "[<_ast.Str object at 0x105b51110>](0)" [label = "drop"]
"1(0)" -> "data-leakage.ipynb" [label = "appears"]
"X(0)$0" -> "1(0)" [label = "drop"]
"modeling_pipeline(0)$0" -> "RandomForestClassifier(0)" [label = "make_pipeline"]
"cv_scores(0)$0" -> "modeling_pipeline(0)$0" [label = "cross_val_score"]
"cv_scores(0)$0" -> "X(0)$0" [label = "cross_val_score"]
"cv_scores(0)$0" -> "y(0)$0" [label = "cross_val_score"]
"accuracy(0)" -> "data-leakage.ipynb" [label = "appears"]
"cv_scores(0)$0" -> "accuracy(0)" [label = "cross_val_score"]
"Cross-val accuracy: %f(0)" -> "data-leakage.ipynb" [label = "appears"]
"print[0]" -> "Cross-val accuracy: %f(0)" [label = "print"]
"print[1]" -> "cv_scores(0)$0" [label = "print"]
"expenditures_cardholders(0)$0" -> "data(0)$0" [label = "assign"]
"expenditures_cardholders(0)$0" -> "data(0)$0" [label = "assign"]
"expenditures_noncardholders(0)$0" -> "data(0)$0" [label = "assign"]
"expenditures_noncardholders(0)$0" -> "data(0)$0" [label = "assign"]
"Fraction of those who received a card with no expenditures: %.2f(0)" -> "data-leakage.ipynb" [label = "appears"]
"print[0]" -> "Fraction of those who received a card with no expenditures: %.2f(0)" [label = "print"]
"print[1]" -> "expenditures_cardholders(0)$0" [label = "print"]
"0(0)" -> "data-leakage.ipynb" [label = "appears"]
"print[2]" -> "0(0)" [label = "print"]
"print[0]" -> "Fraction of those who received a card with no expenditures: %.2f(0)" [label = "print"]
"print[1]" -> "expenditures_noncardholders(0)$0" [label = "print"]
"print[2]" -> "0(0)" [label = "print"]
"[<_ast.Str object at 0x105b4afd0>, <_ast.Str object at 0x105b4a910>, <_ast.Str object at 0x105b4a0d0>, <_ast.Str object at 0x105b4a150>](0)" -> "data-leakage.ipynb" [label = "appears"]
"potential_leaks(0)$0" -> "[<_ast.Str object at 0x105b4afd0>, <_ast.Str object at 0x105b4a910>, <_ast.Str object at 0x105b4a0d0>, <_ast.Str object at 0x105b4a150>](0)" [label = "assign"]
"X2(0)$0" -> "X(0)$0" [label = "drop"]
"X2(0)$0" -> "potential_leaks(0)$0" [label = "drop"]
"X2(0)$0" -> "1(0)" [label = "drop"]
"cv_scores(0)$1" -> "modeling_pipeline(0)$0" [label = "cross_val_score"]
"cv_scores(0)$1" -> "X2(0)$0" [label = "cross_val_score"]
"cv_scores(0)$1" -> "y(0)$0" [label = "cross_val_score"]
"cv_scores(0)$1" -> "accuracy(0)" [label = "cross_val_score"]
"print[0]" -> "Cross-val accuracy: %f(0)" [label = "print"]
"print[1]" -> "cv_scores(0)$1" [label = "print"]
}