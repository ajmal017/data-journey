digraph { 
"os" -> "fake-detect-basic.ipynb" [label = "import"]
"os(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"os(0)" -> "os" [label = "assign"]
"pandas" -> "fake-detect-basic.ipynb" [label = "import"]
"pd(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"pd(0)" -> "pandas" [label = "assign"]
"numpy" -> "fake-detect-basic.ipynb" [label = "import"]
"np(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"np(0)" -> "numpy" [label = "assign"]
"matplotlib.pyplot" -> "fake-detect-basic.ipynb" [label = "import"]
"plt(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"plt(0)" -> "matplotlib.pyplot" [label = "assign"]
"keras" -> "fake-detect-basic.ipynb" [label = "import"]
"keras(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"keras(0)" -> "keras" [label = "assign"]
"glob" -> "fake-detect-basic.ipynb" [label = "import"]
"glob(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"glob(0)" -> "glob" [label = "assign"]
"cv2" -> "fake-detect-basic.ipynb" [label = "import"]
"cv2(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"cv2(0)" -> "cv2" [label = "assign"]
"albumentations" -> "fake-detect-basic.ipynb" [label = "import"]
"*" -> "albumentations" [label = "import"]
"*(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"*(0)" -> "*" [label = "assign"]
"tqdm" -> "fake-detect-basic.ipynb" [label = "import"]
"tqdm_notebook" -> "tqdm" [label = "import"]
"tqdm(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"tqdm(0)" -> "tqdm_notebook" [label = "assign"]
"gc" -> "fake-detect-basic.ipynb" [label = "import"]
"gc(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"gc(0)" -> "gc" [label = "assign"]
"keras.models" -> "fake-detect-basic.ipynb" [label = "import"]
"Model" -> "keras.models" [label = "import"]
"KerasModel(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"KerasModel(0)" -> "Model" [label = "assign"]
"keras.layers" -> "fake-detect-basic.ipynb" [label = "import"]
"Input" -> "keras.layers" [label = "import"]
"Input(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"Input(0)" -> "Input" [label = "assign"]
"Dense" -> "keras.layers" [label = "import"]
"Dense(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"Dense(0)" -> "Dense" [label = "assign"]
"Flatten" -> "keras.layers" [label = "import"]
"Flatten(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"Flatten(0)" -> "Flatten" [label = "assign"]
"Conv2D" -> "keras.layers" [label = "import"]
"Conv2D(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"Conv2D(0)" -> "Conv2D" [label = "assign"]
"MaxPooling2D" -> "keras.layers" [label = "import"]
"MaxPooling2D(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"MaxPooling2D(0)" -> "MaxPooling2D" [label = "assign"]
"BatchNormalization" -> "keras.layers" [label = "import"]
"BatchNormalization(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"BatchNormalization(0)" -> "BatchNormalization" [label = "assign"]
"Dropout" -> "keras.layers" [label = "import"]
"Dropout(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"Dropout(0)" -> "Dropout" [label = "assign"]
"Reshape" -> "keras.layers" [label = "import"]
"Reshape(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"Reshape(0)" -> "Reshape" [label = "assign"]
"Concatenate" -> "keras.layers" [label = "import"]
"Concatenate(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"Concatenate(0)" -> "Concatenate" [label = "assign"]
"LeakyReLU" -> "keras.layers" [label = "import"]
"LeakyReLU(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"LeakyReLU(0)" -> "LeakyReLU" [label = "assign"]
"keras.optimizers" -> "fake-detect-basic.ipynb" [label = "import"]
"Adam" -> "keras.optimizers" [label = "import"]
"Adam(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"Adam(0)" -> "Adam" [label = "assign"]
"face_recognition" -> "fake-detect-basic.ipynb" [label = "import"]
"face_recognition(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"face_recognition(0)" -> "face_recognition" [label = "assign"]
"imageio" -> "fake-detect-basic.ipynb" [label = "import"]
"imageio(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"imageio(0)" -> "imageio" [label = "assign"]
"tensorflow" -> "fake-detect-basic.ipynb" [label = "import"]
"tf(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"tf(0)" -> "tensorflow" [label = "assign"]
"warnings" -> "fake-detect-basic.ipynb" [label = "import"]
"warnings(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"warnings(0)" -> "warnings" [label = "assign"]
"warnings(0)$0" -> "warnings(0)" [label = "filterwarnings"]
"ignore(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"warnings(0)$0" -> "ignore(0)" [label = "filterwarnings"]
"../input/deepfake-detection-challenge/(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"PATH(0)$0" -> "../input/deepfake-detection-challenge/(0)" [label = "assign"]
"print[0]" -> "os(0)" [label = "print"]
"print[1]" -> "PATH(0)$0" [label = "print"]
"dirname(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"dirname(0)" -> "os(0)" [label = "Iter"]
"_(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"_(0)" -> "os(0)" [label = "Iter"]
"filenames(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"filenames(0)" -> "os(0)" [label = "Iter"]
"/kaggle/input/meso-pretrain(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"dirname(0)" -> "/kaggle/input/meso-pretrain(0)" [label = "Iter"]
"_(0)" -> "/kaggle/input/meso-pretrain(0)" [label = "Iter"]
"filenames(0)" -> "/kaggle/input/meso-pretrain(0)" [label = "Iter"]
"filename(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"filename(0)" -> "filenames(0)" [label = "Iter"]
"print[0]" -> "os(0)" [label = "print"]
"print[1]" -> "dirname(0)" [label = "print"]
"print[2]" -> "filename(0)" [label = "print"]
"IPython.display" -> "fake-detect-basic.ipynb" [label = "import"]
"HTML" -> "IPython.display" [label = "import"]
"HTML(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"HTML(0)" -> "HTML" [label = "assign"]
"base64" -> "fake-detect-basic.ipynb" [label = "import"]
"b64encode" -> "base64" [label = "import"]
"b64encode(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"b64encode(0)" -> "b64encode" [label = "assign"]
"open(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"vid1(0)$0" -> "open(0)" [label = "read"]
"/kaggle/input/deepfake-detection-challenge/test_videos/ytddugrwph.mp4(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"vid1(0)$0" -> "/kaggle/input/deepfake-detection-challenge/test_videos/ytddugrwph.mp4(0)" [label = "read"]
"rb(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"vid1(0)$0" -> "rb(0)" [label = "read"]
"data:video/mp4;base64,(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"data_url(0)$0" -> "data:video/mp4;base64,(0)" [label = "Add"]
"data_url(0)$0" -> "b64encode(0)" [label = "Add"]
"data_url(0)$0" -> "vid1(0)$0" [label = "Add"]
"
<video width=600 controls>
      <source src="%s" type="video/mp4">
</video>
(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"HTML[0]" -> "
<video width=600 controls>
      <source src="%s" type="video/mp4">
</video>
(0)" [label = "HTML"]
"HTML[1]" -> "data_url(0)$0" [label = "HTML"]
"self(2)" -> "__init__[0]" [label = "_argToVar"]
"path(2)" -> "__init__[1]" [label = "_argToVar"]
"self(2)$0" -> "self(2)" [label = "assign"]
"self(2)$0" -> "path(2)" [label = "assign"]
"self(2)$1" -> "self(2)$0" [label = "get_reader"]
"self(2)$1" -> "imageio(2)" [label = "get_reader"]
"self(2)$1" -> "path(2)" [label = "get_reader"]
"self(2)$1" -> "ffmpeg(2)" [label = "get_reader"]
"self(2)$2" -> "self(2)$1" [label = "count_frames"]
"self(2)$2" -> "self(2)$1" [label = "count_frames"]
"self(2)$3" -> "self(2)$2" [label = "assign"]
"self(2)$3" -> "self(2)$2" [label = "assign"]
"self(2)$3" -> "fps(2)" [label = "assign"]
"self(3)" -> "init_head[0]" [label = "_argToVar"]
"self(3)$0" -> "self(3)" [label = "set_image_index"]
"self(3)$0" -> "0(3)" [label = "set_image_index"]
"self(4)" -> "next_frame[0]" [label = "_argToVar"]
"self(4)$0" -> "self(4)" [label = "get_next_data"]
"self(5)" -> "get[0]" [label = "_argToVar"]
"key(5)" -> "get[1]" [label = "_argToVar"]
"self(6)" -> "__call__[0]" [label = "_argToVar"]
"key(6)" -> "__call__[1]" [label = "_argToVar"]
"self(7)" -> "__len__[0]" [label = "_argToVar"]
"256(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"IMGWIDTH(0)$0" -> "256(0)" [label = "assign"]
"self(9)$0" -> "self(9)" [label = "assign"]
"self(9)$0" -> "0(9)" [label = "assign"]
"self(10)" -> "predict[0]" [label = "_argToVar"]
"x(10)" -> "predict[1]" [label = "_argToVar"]
"self(11)" -> "fit[0]" [label = "_argToVar"]
"x(11)" -> "fit[1]" [label = "_argToVar"]
"y(11)" -> "fit[2]" [label = "_argToVar"]
"self(12)" -> "get_accuracy[0]" [label = "_argToVar"]
"x(12)" -> "get_accuracy[1]" [label = "_argToVar"]
"y(12)" -> "get_accuracy[2]" [label = "_argToVar"]
"self(13)" -> "load[0]" [label = "_argToVar"]
"path(13)" -> "load[1]" [label = "_argToVar"]
"self(13)$0" -> "self(13)" [label = "load_weights"]
"self(13)$0" -> "path(13)" [label = "load_weights"]
"self(15)" -> "__init__[0]" [label = "_argToVar"]
"learning_rate(15)" -> "__init__[1]" [label = "_argToVar"]
"self(15)$0" -> "self(15)" [label = "init_model"]
"self(15)$0" -> "self(15)" [label = "init_model"]
"optimizer(15)$0" -> "learning_rate(15)" [label = "Adam"]
"self(15)$1" -> "self(15)$0" [label = "compile"]
"self(16)" -> "init_model[0]" [label = "_argToVar"]
"x(16)$0" -> "IMGWIDTH(16)" [label = "Input"]
"x(16)$0" -> "IMGWIDTH(16)" [label = "Input"]
"x(16)$0" -> "3(16)" [label = "Input"]
"x1(16)$0" -> "Conv2D(16)" [label = "assign"]
"x1(16)$0" -> "8(16)" [label = "assign"]
"x1(16)$0" -> "3(16)" [label = "assign"]
"x1(16)$0" -> "3(16)" [label = "assign"]
"x1(16)$0" -> "same(16)" [label = "assign"]
"x1(16)$0" -> "relu(16)" [label = "assign"]
"x1(16)$0" -> "x(16)$0" [label = "assign"]
"x1(16)$1" -> "BatchNormalization(16)" [label = "assign"]
"x1(16)$1" -> "x1(16)$1" [label = "assign"]
"x1(16)$2" -> "MaxPooling2D(16)" [label = "assign"]
"x1(16)$2" -> "2(16)" [label = "assign"]
"x1(16)$2" -> "2(16)" [label = "assign"]
"x1(16)$2" -> "same(16)" [label = "assign"]
"x1(16)$2" -> "x1(16)$2" [label = "assign"]
"x2(16)$0" -> "Conv2D(16)" [label = "assign"]
"x2(16)$0" -> "8(16)" [label = "assign"]
"x2(16)$0" -> "5(16)" [label = "assign"]
"x2(16)$0" -> "5(16)" [label = "assign"]
"x2(16)$0" -> "same(16)" [label = "assign"]
"x2(16)$0" -> "relu(16)" [label = "assign"]
"x2(16)$0" -> "x1(16)$2" [label = "assign"]
"x2(16)$1" -> "BatchNormalization(16)" [label = "assign"]
"x2(16)$1" -> "x2(16)$1" [label = "assign"]
"x2(16)$2" -> "MaxPooling2D(16)" [label = "assign"]
"x2(16)$2" -> "2(16)" [label = "assign"]
"x2(16)$2" -> "2(16)" [label = "assign"]
"x2(16)$2" -> "same(16)" [label = "assign"]
"x2(16)$2" -> "x2(16)$2" [label = "assign"]
"x3(16)$0" -> "Conv2D(16)" [label = "assign"]
"x3(16)$0" -> "16(16)" [label = "assign"]
"x3(16)$0" -> "5(16)" [label = "assign"]
"x3(16)$0" -> "5(16)" [label = "assign"]
"x3(16)$0" -> "same(16)" [label = "assign"]
"x3(16)$0" -> "relu(16)" [label = "assign"]
"x3(16)$0" -> "x2(16)$2" [label = "assign"]
"x3(16)$1" -> "BatchNormalization(16)" [label = "assign"]
"x3(16)$1" -> "x3(16)$1" [label = "assign"]
"x3(16)$2" -> "MaxPooling2D(16)" [label = "assign"]
"x3(16)$2" -> "2(16)" [label = "assign"]
"x3(16)$2" -> "2(16)" [label = "assign"]
"x3(16)$2" -> "same(16)" [label = "assign"]
"x3(16)$2" -> "x3(16)$2" [label = "assign"]
"x4(16)$0" -> "Conv2D(16)" [label = "assign"]
"x4(16)$0" -> "16(16)" [label = "assign"]
"x4(16)$0" -> "5(16)" [label = "assign"]
"x4(16)$0" -> "5(16)" [label = "assign"]
"x4(16)$0" -> "same(16)" [label = "assign"]
"x4(16)$0" -> "relu(16)" [label = "assign"]
"x4(16)$0" -> "x3(16)$2" [label = "assign"]
"x4(16)$1" -> "BatchNormalization(16)" [label = "assign"]
"x4(16)$1" -> "x4(16)$1" [label = "assign"]
"x4(16)$2" -> "MaxPooling2D(16)" [label = "assign"]
"x4(16)$2" -> "4(16)" [label = "assign"]
"x4(16)$2" -> "4(16)" [label = "assign"]
"x4(16)$2" -> "same(16)" [label = "assign"]
"x4(16)$2" -> "x4(16)$2" [label = "assign"]
"y(16)$0" -> "Flatten(16)" [label = "assign"]
"y(16)$0" -> "x4(16)$2" [label = "assign"]
"y(16)$1" -> "Dropout(16)" [label = "assign"]
"y(16)$1" -> "0.5(16)" [label = "assign"]
"y(16)$1" -> "y(16)$1" [label = "assign"]
"y(16)$2" -> "Dense(16)" [label = "assign"]
"y(16)$2" -> "16(16)" [label = "assign"]
"y(16)$2" -> "y(16)$2" [label = "assign"]
"y(16)$3" -> "LeakyReLU(16)" [label = "assign"]
"y(16)$3" -> "0.1(16)" [label = "assign"]
"y(16)$3" -> "y(16)$3" [label = "assign"]
"y(16)$4" -> "Dropout(16)" [label = "assign"]
"y(16)$4" -> "0.5(16)" [label = "assign"]
"y(16)$4" -> "y(16)$4" [label = "assign"]
"y(16)$5" -> "Dense(16)" [label = "assign"]
"y(16)$5" -> "1(16)" [label = "assign"]
"y(16)$5" -> "sigmoid(16)" [label = "assign"]
"y(16)$5" -> "y(16)$5" [label = "assign"]
"tf(0)$0" -> "tf(0)" [label = "is_gpu_available"]
"classifier(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"classifier(0)$0" -> "classifier(0)" [label = "load"]
"/kaggle/input/meso-pretrain/Meso4_DF(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"classifier(0)$0" -> "/kaggle/input/meso-pretrain/Meso4_DF(0)" [label = "load"]
"100(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"save_interval(0)$0" -> "100(0)" [label = "assign"]
"0.1(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"margin(0)$0" -> "0.1(0)" [label = "assign"]
"vi(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"vi(0)" -> "os(0)" [label = "Iter"]
"/kaggle/input/deepfake-detection-challenge/test_videos(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"vi(0)" -> "/kaggle/input/deepfake-detection-challenge/test_videos(0)" [label = "Iter"]
"video(0)$0" -> "os(0)" [label = "Video"]
"/kaggle/input/deepfake-detection-challenge/test_videos/(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"video(0)$0" -> "/kaggle/input/deepfake-detection-challenge/test_videos/(0)" [label = "Video"]
"video(0)$0" -> "vi(0)" [label = "Video"]
"[](0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"re_imgs(0)$0" -> "[](0)" [label = "assign"]
"range(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"i(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"i(0)" -> "range(0)" [label = "Iter"]
"0(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"i(0)" -> "0(0)" [label = "Iter"]
"i(0)" -> "video(0)$0" [label = "Iter"]
"i(0)" -> "save_interval(0)$0" [label = "Iter"]
"img(0)$0" -> "video(0)$0" [label = "get"]
"img(0)$0" -> "i(0)" [label = "get"]
"face_positions(0)$0" -> "face_recognition(0)" [label = "face_locations"]
"face_positions(0)$0" -> "img(0)$0" [label = "face_locations"]
"face_position(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"face_position(0)" -> "face_positions(0)$0" [label = "Iter"]
"offset(0)$0" -> "margin(0)$0" [label = "round"]
"offset(0)$0" -> "face_position(0)" [label = "round"]
"2(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"offset(0)$0" -> "2(0)" [label = "round"]
"offset(0)$0" -> "face_position(0)" [label = "round"]
"offset(0)$0" -> "0(0)" [label = "round"]
"y0(0)$0" -> "face_position(0)" [label = "max"]
"y0(0)$0" -> "0(0)" [label = "max"]
"y0(0)$0" -> "offset(0)$0" [label = "max"]
"y0(0)$0" -> "0(0)" [label = "max"]
"x1(0)$0" -> "face_position(0)" [label = "min"]
"1(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"x1(0)$0" -> "1(0)" [label = "min"]
"x1(0)$0" -> "offset(0)$0" [label = "min"]
"x1(0)$0" -> "img(0)$0" [label = "min"]
"x1(0)$0" -> "1(0)" [label = "min"]
"y1(0)$0" -> "face_position(0)" [label = "min"]
"y1(0)$0" -> "2(0)" [label = "min"]
"y1(0)$0" -> "offset(0)$0" [label = "min"]
"y1(0)$0" -> "img(0)$0" [label = "min"]
"y1(0)$0" -> "0(0)" [label = "min"]
"x0(0)$0" -> "face_position(0)" [label = "max"]
"3(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"x0(0)$0" -> "3(0)" [label = "max"]
"x0(0)$0" -> "offset(0)$0" [label = "max"]
"x0(0)$0" -> "0(0)" [label = "max"]
"face(0)$0" -> "img(0)$0" [label = "assign"]
"face(0)$0" -> "y0(0)$0" [label = "assign"]
"face(0)$0" -> "y1(0)$0" [label = "assign"]
"face(0)$0" -> "x0(0)$0" [label = "assign"]
"face(0)$0" -> "x1(0)$0" [label = "assign"]
"inp(0)$0" -> "cv2(0)" [label = "Div"]
"inp(0)$0" -> "face(0)$0" [label = "Div"]
"inp(0)$0" -> "256(0)" [label = "Div"]
"inp(0)$0" -> "256(0)" [label = "Div"]
"255.0(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"inp(0)$0" -> "255.0(0)" [label = "Div"]
"re_img(0)$0" -> "classifier(0)$0" [label = "predict"]
"re_img(0)$0" -> "np(0)" [label = "predict"]
"[<_ast.Name object at 0x105b23e10>](0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"re_img(0)$0" -> "[<_ast.Name object at 0x105b23e10>](0)" [label = "predict"]
"re_imgs(0)$1" -> "re_imgs(0)$0" [label = "append"]
"re_imgs(0)$1" -> "re_img(0)$0" [label = "append"]
"re_imgs(0)$1" -> "0(0)" [label = "append"]
"re_imgs(0)$1" -> "0(0)" [label = "append"]
"re_video(0)$0" -> "np(0)" [label = "average"]
"re_video(0)$0" -> "re_imgs(0)$1" [label = "average"]
"submit(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"submit(0)$0" -> "submit(0)" [label = "assign"]
"submit(0)$0" -> "re_video(0)$0" [label = "assign"]
"print[0]" -> "vi(0)" [label = "print"]
": (0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"print[1]" -> ": (0)" [label = "print"]
"str(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"print[2]" -> "str(0)" [label = "print"]
"print[3]" -> "1(0)" [label = "print"]
"print[4]" -> "re_video(0)$0" [label = "print"]
"key(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"key(0)" -> "submit(0)$0" [label = "Iter"]
"f(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"f(0)$0" -> "f(0)" [label = "write"]
"%s,%s
(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"f(0)$0" -> "%s,%s
(0)" [label = "write"]
"f(0)$0" -> "key(0)" [label = "write"]
"0.5(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"f(0)$0" -> "0.5(0)" [label = "write"]
"f(0)$1" -> "f(0)$0" [label = "write"]
"f(0)$1" -> "%s,%s
(0)" [label = "write"]
"f(0)$1" -> "key(0)" [label = "write"]
"f(0)$1" -> "submit(0)$0" [label = "write"]
"f(0)$1" -> "key(0)" [label = "write"]
"submission(0)$0" -> "pd(0)" [label = "read_csv"]
"submit2.csv(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"submission(0)$0" -> "submit2.csv(0)" [label = "read_csv"]
"[<_ast.Str object at 0x105e36890>, <_ast.Str object at 0x105e36810>](0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"submission(0)$0" -> "[<_ast.Str object at 0x105e36890>, <_ast.Str object at 0x105e36810>](0)" [label = "read_csv"]
"submission(0)$1" -> "submission(0)$0" [label = "sort_values"]
"submission(0)$1" -> "filename(0)" [label = "sort_values"]
"submission(0)$2" -> "submission(0)$1" [label = "to_csv"]
"submission.csv(0)" -> "fake-detect-basic.ipynb" [label = "appears"]
"submission(0)$2" -> "submission.csv(0)" [label = "to_csv"]
}